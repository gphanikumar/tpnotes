%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.995 Copyright 2015 Radical Eye Software
%%Title: cylwallfig.dvi
%%CreationDate: Tue Feb 13 16:04:25 2018
%%BoundingBox: 135 545 285 737
%%DocumentFonts: CMMI6 CMR5 CMR6
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E cylwallfig.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2018.02.13:1604
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 919 2014-05-19 18:42:47Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.23, 2014/07/31
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def

%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 919 2014-05-19 18:42:47Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /landplus90 true store
 
@fedspecial end
%%BeginFont: CMR6
%!PS-AdobeFont-1.0: CMR6 003.002
%%Title: CMR6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright:  (<http://www.ams.org>), with Reserved Font Name CMR6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments

FontDirectory/CMR6 known{/CMR6 findfont dup/UniqueID known{dup
/UniqueID get 5000789 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR6 def
/FontBBox {-20 -250 1193 750 }readonly def
/UniqueID 5000789 def
/PaintType 0 def
/FontInfo 9 dict dup begin
 /version (003.002) readonly def
 /Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR6.) readonly def
 /FullName (CMR6) readonly def
 /FamilyName (Computer Modern) readonly def
 /Weight (Medium) readonly def
 /ItalicAngle 0 def
 /isFixedPitch false def
 /UnderlinePosition -100 def
 /UnderlineThickness 50 def
end readonly def
/Encoding 256 array
 0 1 255 { 1 index exch /.notdef put} for
dup 0 /Gamma put
dup 1 /Delta put
dup 2 /Theta put
dup 3 /Lambda put
dup 4 /Xi put
dup 5 /Pi put
dup 6 /Sigma put
dup 7 /Upsilon put
dup 8 /Phi put
dup 9 /Psi put
dup 10 /Omega put
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 15 /ffl put
dup 16 /dotlessi put
dup 17 /dotlessj put
dup 18 /grave put
dup 19 /acute put
dup 20 /caron put
dup 21 /breve put
dup 22 /macron put
dup 23 /ring put
dup 24 /cedilla put
dup 25 /germandbls put
dup 26 /ae put
dup 27 /oe put
dup 28 /oslash put
dup 29 /AE put
dup 30 /OE put
dup 31 /Oslash put
dup 32 /suppress put
dup 33 /exclam put
dup 34 /quotedblright put
dup 35 /numbersign put
dup 36 /dollar put
dup 37 /percent put
dup 38 /ampersand put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /exclamdown put
dup 61 /equal put
dup 62 /questiondown put
dup 63 /question put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 94 /circumflex put
dup 95 /dotaccent put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
dup 124 /emdash put
dup 125 /hungarumlaut put
dup 126 /tilde put
dup 127 /dieresis put
dup 128 /suppress put
dup 160 /space put
dup 161 /Gamma put
dup 162 /Delta put
dup 163 /Theta put
dup 164 /Lambda put
dup 165 /Xi put
dup 166 /Pi put
dup 167 /Sigma put
dup 168 /Upsilon put
dup 169 /Phi put
dup 170 /Psi put
dup 171 /sfthyphen put
dup 172 /nbspace put
dup 173 /Omega put
dup 174 /ff put
dup 175 /fi put
dup 176 /fl put
dup 177 /ffi put
dup 178 /ffl put
dup 179 /dotlessi put
dup 180 /dotlessj put
dup 181 /grave put
dup 182 /acute put
dup 183 /caron put
dup 184 /breve put
dup 185 /macron put
dup 186 /ring put
dup 187 /cedilla put
dup 188 /germandbls put
dup 189 /ae put
dup 190 /oe put
dup 191 /oslash put
dup 192 /AE put
dup 193 /OE put
dup 194 /Oslash put
dup 195 /suppress put
dup 196 /dieresis put
readonly def
currentdict end
currentfile eexec

D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA0E079529AF9C
82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA9351BBFB7CFC5F9152D1E5BB0A
D8D016C6CFA4EB41B3C51D091C2D5440E67CFD717C56816B03B901BF4A25A07175380E50A213
F877C44778B3C5AADBCC86D6E551E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206
742D1D082A12F0780FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC54
3273C01924195A181D03F5054A93B71E5065F8D92FE23794D2DAE339BA29C1C6F6561DEF1378
0383DAE38A868377CC7D396B2A05F341AEE0F8BD0A0191F51AD11A4D2E927B848A1EF2BA15CF
BE57A51E3AF07598275195C9613041F71C1AF39E61F9EFD5F6512FBDA76E29DE6B508F62F5CF
9F73F5288DF1C7B0B82C92D3B6358BADEC3CA20BDE55DAA7CC58004AA86B6CBF8C410D8287E8
8BF20588A39309C2B703CED322F030AA6069869064486CA651DA054FF3F5E56534CA358B0829
A6B954D89103436E6B06DAD1658BD4A95AB41343B01F5866FC87C4EDFC71F1477C98F8E11DCF
27EF743FF90BF91881C1F09C10EF68CCCE86263693B4699304958A466D9D74D7266A04607EE4
8FC4ABDDB1AAC9C2B0A4E942C3F65873884A359AB76DAB1D1BC67876C5016E7C5185C16658A8
1ABCC25A40A00CAEB6ED57285A39A3FF3CE675DE68E8FEE93BE347321DCD5674E11182F88DA8
5002FB8D6AE14FBADA8366F8603765489F5996C64D33169816AC5F355DE8A4FF22631424C4E6
61390E36C6B041CDE6227612506E4C961A05496DF3CA1255994DA974F6BB5B6ED7B0C96341D5
006B3CE0BC97B2AA4CA9DEC0B1D204F1C42194601A82AB4BE67C0FE8935DC93C5992E5BA5CAC
BC6A7F0BE7270F76F00BD5D4E05159DCC33CE8863F569433F7BC17E88909388978909AF5D913
74882D0D54E66402123733325D6C553F1C28AD0E4A6399C129F8E729DFD3EFB8C5357CD5D7C7
CA3931E1BFDA15CDD45763E016FBFF8EC15B3CD5D6FA53EA786B5DD281437596B5035DB20121
99EB57D8E02EAA11EB00BB17D53C37679A5B6B3BE23F0C530999FFBC13F67D6AE80D16092C36
E56160F127275C46102AF8C3BC21322FD4993B84082E09037CF590078111271292D7974401FD
5E8963CCA67571A998AB90109F1F574BD23AFD052472459C553B327FC5461135BBECA6974D01
79A4ED967F5E01E5F4D453B55E7CD199A05EDCECA6C082D4AA923DCB710EECC61ABE251CD6B0
56F1F5764BA16E9EC2ABC1EC656F9989B21B53FC7BDBA81B9AD8A4394982E62572EE2915C016
0C30666900BCF4E3B53B5365605D70AC1651E706112D9F062A9218B2DBA5C576B236547F6814
B9B0CE3A1446EADAC59C3F74AFBCDA90EBFEEC0E3BA548AACB796EBCAF5A6162A4CBCE569D62
2BF843A9C991617C57DC0BADFC6140C0992F04B15A23A7AF887CCA716A7DD80CB07E46560C90
1BD984EE07E87D29B602AE6A6FFECA39C6A10FED66CEDF7F39576E222758BD1B97CD9831A41F
23F81CFD640945AFC32B334C0E6CC4C75C97B974705FB8B1F8281E3AFD53B86198C4EFB07FC7
A6C328B5FCB2D842252369D7BC6B060B7E911F17450540B77E3CC1A4D523B66BBC05E8CB66D0
018B484C7025BC72FCF1E7CF428B0246D7A82E4903A63A91B060D78FCB48CB0DB887A81E25AF
F93F22E938AEEDC36C0CE33CC0306AEE691A6C9EF230EAFCE1DA59D0CF5607DF3E1078BA69BD
CC269C7616D78C9C86ABFE8E4766CAE7C81AFDC202A60D27633F10CD25DDC2D2D7E29B043EC9
0C22FE44D928CDF5D891DD78F11E1112675C11AAE26F56332EA4B1B30B9136E45789648E040F
C90F25AC67F5D4ABC099CB04269E31AC06B445F7C5CDB3A00B8D00BC5F0C3D63B60458791913
9340A3239541452FA1040F9E7BA16EAE5C0A6C9F6B488D0D39CD1DD47D90270A7B40EC3DB83A
12019E37AD74D4FECBB759C758FC51F4555FBED8A677C06F63B2F17EA49812D4516D2F688867
C6256DB907BA5175657ED2557BC4A2131D3F87710849544DA3B053D0B657D4AAEAE7BB08FA33
720AAB58CE1DA35C765C49F19D7D76157411457F7F72FE958C2716D9BE1C9A3F90470D7012C2
2213005ED123B31A176B94D61E004D68042D81D34EA07ABAEB52BE37C4D8EE9602EEC6B88E0B
7355E80245EA4B5CE013D050794824234D271B53D3907C09B6B91502CC42EAB7E8FC956799CA
9670AC2B8D813D76ED72A28C14D1EBBB71D5E5144FA66D097EFAACA2DD798358BAB0EF9FA553
F03771D99D15AC5614A31E29B6CA92A2398556E9A268CA6D7A1090A496215684DA2D1D40CF46
C242BA506570EC488D6CB925E36ED2914D0D09AEEF8224301DD8FE81A882CF6CF686FCBE1E1E
F44E3DAF3C40AA6A28FF919BC26B073EC30CE89A180821C75650DA504C319179109FEF87599D
2B1C95050DC587B384050C2FAEDEC784C7314DE343423F88154D989305B0E402D17F80A90E65
508D601EB0D0EDF578857D800EC1BEEA5DEB9131301AA14252BB1C2FF3A4BD2D85867A09B968
1E6E919BCFC7B5481FE72CAD91A4EBB7B31B746234E09798E0967E42CB4C498F14E202A9265E
336E334AB76581618E54005A3417AB81B0B4D346A806469E6E66BA65BAB8D1777D98E80C2DA8
4F09CC774AF6203AC37CD280B4762D08A5CB1D2AAC0A76A62DFC90FD2B089927E782A38DDF09
5E3C0600EEFBD0DBFA23575211A3042F77E47C6592EF49442D9D25BC7C99B46B40A15D3A7B2E
2C53D8C81CBCAB8E38199C3E36D082711554C365D184F468A6012C671CCDD227061941BFEA5D
2E7F281C823CC7973DE92DFD107BFD0AC88538AEEC860EAD04385409D552EB9A9A5688E1A311
9E86F4323F76D727752DC4CE02E87AB4D163A808D3ECA4C51E272360E9B268CBC2E95637CF9E
5F47BDB740094FB4FF13F303321BBCD15C243D560CFE6742852D6A5051037543151FB5CC8C7C
FC3CDBF58D3AB2ABC5D212BB19EDEA6FFEBD88EBBBC57090EA201622A09C55D76EAE1452F0A8
1E5B83E5BAD18055E011F006FB319D2BB9C5AE122BE85418E20C8A706D11E3065E69412AFF63
126E51C4F95AF28CC200C2B5D45313B1A8309A3A57EFD2905228EE3E30AF6BD0C75C1ABDCC08
5F2878F8CEE3551780E33F7A74BC101024E16B19B58D88225F0DEA02EF317B9AF514D59C2CDD
10FF334E26DEB03273F0A5F95B26E945F44D76BF82A7045C78377060352C8A937A876CFCE1DD
6CE26F4AF1DBBF2EC95E89D4CEEAF538D22D2A4EAF64F1E374DF1A345725CAEEAE9964CEA972
5A623924BE7821CE3D9341D845EA61526D90B13F73FFE9F133BB335DE26A08239181ED93487B
8045A8D18B321BDC3365CF214DA1FD35637E7A8ECF575E2002B208E1206E4C41AFB564A62846
4A5A2D8E266A82A9457EBED9582A68D107D1556E73E443AC9BA9BC935E506E78ED453935D83E
39336205680299A03FEF889F303EB7F92777DC20E65A589ABF11597906B06181608A940D2A0C
EF0FDBED238748EC684632C626628C79C620809CB7F4CFFD9FDE58D6A06DDDA0E0AFC443D2E7
BA980765087C9271FDA74952651926E9781513B1530C4A5461F871B8D85CCD09A67FAE4CD66F
F503A344ED3028B86471B5F94B55699CDCFD5D1733D5A840EABABD0220528CF21A46F949E174
2510C3912319DE45423E0DDF34D36FA127E60A6F882FEC83F09B5D8F1ABB00CBB83EC17419A7
A813B2ACFF5D30A0D8643CDBC42AC07F0080E29607AC520CCE5B7B9195985E327A599930CE01
61832A35D61B24C1AFD3401A9296F4E613DAB01480098ED888AA978EFD3516069C81B1FFE09C
919941810BD92060EB479A464ABA054C049E14659667199F55F9B1E78D1295269EA16A894287
3FC8C00411F2517F7651B5387D622CD6F462D4C9CF00D4A072EA7B4397EE05451E403E3EBD7E
9930D3FD1BAAAF2CE252403E12D4EB5F563A9E9A9BACFF34B554E159BF40D43FDDA78724B413
5B83CFDD800802909110D7CF2E712BD4042EC0C50DC3D78EBEC02DE44D727CDE9A3818EF937F
33E5869D1DADE6D383416C3E983247C40F99BA72074549E2C061BE7E6EDAF66BCA5654A257C4
6818DD2AF1EBA21A43ADF9233B3C63DFB25F441F000B2BAE2A28F91002BA72AA5A040D17F920
EEC38E340C01283D176E3A72926271935282C4DC0CF26AE3D7AF3C9B83C873E37DBE00F9BA4E
AC43A29400DA3F870378BE10A6853538FE79C6B32ACA4BA6B2E10A218AF99AB4035895408ADC
1158E5AC6E4B764817DA45DDC8F179C55A836CD5FD9656694C532415CFF3DF99A9689E489404
D07D7A4035512DEA64E87B6B0C575A5D5B0E1D88A2C2D7D3E98D5A21A16007496A3322045E32
6E3ABEC070ECAFC5D727C45F42F4A410F6124F20C3D5509ED837E5801286A307BF6A0A3525C8
5AD0CE6E2DDBC6BF52D4376CF0386BA760FCB482D987A477A1DC32D8C7BB91C2DE2816A0959B
49C938A684C08735E617F338CAD005AC16EF1A818D5A540BF0A8312272295196446B1FBD0FBA
C3215B5EA4ECCFC688F837CDACEA019E5650A5D12CEE637592437D9E4981549EC7E9EC150729
02C67B1795A0D727A405534AE081B2A5E9486D36EC1598BA80157F0D25D6CD211075D651D20D
E24519216C7C4C368EC7D532DE4AF853621003BD9084828FBCA22143EB5832A4BFE7AAFBD346
F2D31B2E1291CEADE0B631AFDDB29C6D1CF752811ECBF2B32F5B22765688B7A7FFA8CC840786
1B5451EF2B938FC4CD0FEDB03234F75ADEA022491F93CE40BD210B762679B34409B9208E9245
97F7E170CF0D98B9211F43C74CDFACDEA0A4D9CED41840DEC7DAB1D3C10637039BE51F47B873
905478AB6F4D46BBAEB726B2BF8F93A13DE42AF2E6CA8EB274B0893A3772033BB5422203865A
0195470AB3EA69DE75B325A77D88D0C12A90AFCE359CF0F3E767CC611ABD3D73F72C42617417
C8127BB3A2DD3C1A111E4474FD03A23B4D3676BF3FB4FDA89381EFBDFF114A741C4346520087
A97CA1233F3F2524307030176FA1363E3500C4B1B8FAB54F9B0F5ABCAB2AA97AB3C0933D3B84
EEC7C9337E97CB3C5B729ED09F31532355890A2A6D662C6EEC064F271DF07C84D0E809DE0A7F
177C003F3C851DEC6E3009447D4534DC8F3F71942E00A6111FBDC677E1C71A2F8BB360E64FFB
C4C26EB095895F135F8B48D39443EDE35B81806997330B8E614207E38526062352E029ACEF6F
227AA7BE354768BF21D03F7E8EC26372CF71670030A284AA8C294EC94DF356C5B6660A410931
D6B43A215A5D51149FE45BB2CDAD23F11B3DB6202263DF5B16A84C5BB8B75DBC662884FCE360
B8400BE9A75BB7CB24A57327FEA3821A31813F09C66E18E491817770E01A5EDB6DE8CE3D5993
BFED6555BAB5894CAD9399C78B9519F4832D858487B4BB17898F9BBEF1A72614078D30C1412F
54EBA90BB5E1C39DDA0A3963124C62EBB6970203F4904544CBCE72D178B4DDBAFFCAF9856AB2
5131208F5582B54F8841D8B15E0BFDBDDC16414C50EEBAE46DE35CB0FF48FB512AC60C5B63B2
D4102979C878C1208CFEF32B5EE434FE04177C1E2DBA6576D2781519621F0937ABE79FF329AD
F391800D5F71D8A2F213F2EFF727C340EBE9FE5B51F6AB7A12CB1EFD988EF33BE49596898545
7AE55A51E7BF8A931C183EACE627D5F72536B6B9A56DCAECE332DD21ACD090EF89E0D5B63781
178C316D0F329AA5BA9A03D5E8E914B9E3493622ED267F15551D7956B5A2E5527664D01E8407
D5E2AA79CC7CF42F0F3831A3C589DD7DC3A6DCF174D092FCB8B593BE6BF1E48A71BB440BC3DC
F84A4D66EF2BFA86D547B4931437393ACEE2C13CF5A4F12775C7F42CEABAD4F9FDBD3ADD7CAD
46D552BCB5B3E339BB7CF27F7FA114EBDABE3931C2559DF948197570AA4DE07AA317A76D5967
F7A12F1ADE636E3D7E79DDF90442C48DADBA4EEB9DD9EC59BA6C30009E0E018A188D7BC42034
5FEC793DCB091D79B7C78E1E12D521DDE7F1F482FE097A2BEE96276CEF8CBDE2B74E8782E2BF
8F3E8AADF22CAE53C08357AC868E3D217EEFA3A7F049EACC0F1025163D22A5C38C7667A26754
B48F6001B499B57A09F023041D3F4EE8AF9FB9473F89F6A8F25E65106C2FC38FA16B5889C8F3
79F1AD39E7ACC0E4C9C1102CA56B7040DEEF114EC911B36D2A8C66D5160E64DA7A03863E23CA
A837D18F4CC0839DC73430263A611E6E65773407635CB3D60EDDC8978327292EBBAD62309460
A391F02DBD90845358A00BE398DDA6440745EA7ADF4B89275BB76B695189485ECD84E4FF87FD
160A85EFA756E237F7825B453117AC0D9AC9E495FB628E3634ECA75FE61F877E8E6364CB5D54
8B93DAE2290400A2056E3410605B182F3C45BFA67B405083400D1E180E37CE74DA6301FFD34B
F2A8231CC06E2768CB2AE7477238FEE26001D8C4A4FFCBC9F4C34DFD0C93EA3F09CF3CA82A2C
295F93F9E98613F9DC5BBFEA7267E20A3C7458892A189F6950883AB7E9FFD3EEDF465F1D795A
1376C907C3E4180B467FF0EBAEB6183C28F14824544E9F5187AA80B90A2CCB0FDA2073C3A8DC
AB5C14D4ABB9B2CF4A3889EACDABC3E3604239F0C9BBD21D14AE8D0253BB49C89A20A155167D
F482CD4E28695B07F469E12C01A87281463A595A3066974EBEACA1DD593C38412E28D6688847
4384DACE4112C4ECC58C3922C354BD8E54275EF9CF0A99A282084D099E5F5542237326B12492
E14581CBC71F9DD6A451C51416269ED96821998B6B4CCF5E1E225F3968617F98B8ABD4BB0736
F771BDB80F0CE60CE1044CA921131CD84B054D21D93DEBFEE173F93F897D8814F0444D102CFF
109429A51271D65CBCFF634640DB0D056DD5EC6D5A7DB00E37F66AB8707E5CC9E0901E6042DB
CDE0038D8E3E32F8FF03758F604AB231EB8C82E670839B27C63A12D8E3B892B34C34501CB15F
3119A8489AADA5E86430A5CCE083ACA0D5F7B4FCABB924163EA676A06599296E460AE9BB080F
8A8C6ABEAC20F0BB797E6DF763B8E892C401CF91CAEF65ABD8824289D4CE9D111D8AD3C57296
9DB33C10BEE9F13D93DA3B43DCA9BC8D9C5FF121F203F638CF30FDFD82267AC46F887EA3824B
7D12B3F41287AA3481BD773E3C95EFC5AA951631180AFC694C53C60C34B8AA53CD5A086A27EA
42ED477F8A37E052A26B44AF51CB48AD39B7BB62FF1B16F051D5FF8D6330D77BF6B63D9E12A6
39FF376B8440F98F6D8C68A61FA98222A98095C1BBFC8CC6BB6ECEF2FDA9CD30562C6505747E
A2E5D1324A582FBE6FB5ED12751251DC8C560E1A0A0AAF29A732B783E4C413D9209B7B1C0562
6EA2E19102F78D93E31B660F33A725CBAD30F9A5F733C4565B344038B50D894208C5E729BA37
D9FC5EBEC645EEE4402C27FF7A1E69EAFDEDCD9848E2D38CD0BBC2733B51208EDF5FB1B96D99
8B2E1ECC55AEDD41B9FC3943E62F887F230A9FA7E5345459292C857DD7693E82F449737B5F4C
75497077F320AA9C36AFA72E36EAF5ADD2EA858F73FBC80D12378F4AA26ECD4109EC7516500D
E736FB830573F139722C8B4461D54AEAB9FC02A47B3BBE236FCA273F6527925F63383B2E2F27
545C14B329F31BCAFF73659AA5F486A43D997647E23CEBE06B4BAA25C180078EA74BB557C31F
4D85C2257470180394A3C739392C9B70196A340EC278859D02519E8A3400FFC54DCE0748A38C
A5B25687CF41FB0CECBF5243487BAC472079B769E2642C290F25F1EDBBA516B2E86A399EEC11
984CAF21E6C6F799AE218904DA51180E4E80AE15F246B03D06D1817BF0FB34211EC9EE9774C0
F32BDDC4CB0901893CFB5AC18287280B9E7A9DE903FDF83A0D62FD75E50BEBA206AF5CA1CB7C
B936279AD263819CC6185DAC22943BA684C22712AE3809D7AA9B4D6F4369795257F03DF774EB
F450129349484EA3105EEE9257AC04C63AC58A28CD0FCA766E4EAF042D1E426D6F68DFE42F76
B010FF9CFAC92B4C43DA45DF2068ADFB8871F8681A16C8A2688E0D0D7CD1CEFFD9F53E0548C6
3A89640FC7E512A28BF6C7C786DB16DFBBD382DA926ED3A6A825553B360B6949BF1914F40158
B37590729BD6131FEAACF75D29536CFC775EA8758162328979CD3E46E4E7E9CFD1E41A40F3E6
C7370967303DCC576347B38A3CC53609ED71175C514DA11E251BC9BBCB4D0701C208BB884CAA
30F518783DE9553AFD6BD1221C2FE5C3BDE4B435014822036C8ED6296AE76BEC4B00390A603D
B50B177F8DE59E89994B7FAC9ABAB633A09D4D8F15D1416F2DAF49F76341FC891C28C94349C4
412A5DFB84123EADB7D06943A4A8BB731FB2C9B6DB943C9061BB52EBCED33BF502BB42BA177D
2FFFAA8396C2033D27FDEC18E97B1EDBE1ADBC8822E3FC0D93EBA178B81E9A0C2E0C6A1A2108
0535ABFCB95ED0B2569BB6B998FFDAE266D6F182569A08E6A17AABF1E75B9978F96AA49D9FDD
85AEFAAE39BFF7186DD3E57FC50203EE6EC6F1265CE1248EFF71C4FC871F2243830B990074FB
5E44A47072D26960AD7739AF4F88799EB9D0B6E1BCDFB0E6D15AABB1A2B04E259539565C2840
93182BEC3987F37CE218FC019231CCD2D72860F931703DB69B947C7CE0610E47CD02A683EA2A
721D6CD2CD7459ADDB4CC54E2CFE5296C7B17CF3AE5433B03C38E07EC69840157EEF1DF91340
EF3F8AD3E1BBE858814FCD5E802BB138DB3626BAAFB69ABEB343B377B96DD5BDC93FAC7B8CD3
0E8A392D5069ADAFB7ADA60888B4FEDF876E1C19DCF72A684B37220AE60B805941040AD50AFD
9740758FD5F83A5E1B74BB916526A7CB9A82BC1DBE3DD0D49DFA8CAB479936223D6C2D9A0A41
573E2685C42B4BD48C11201F35D98FC29DF8F410C6BDC28BE80E4EFB42B0C9A930AB609841FD
9E81484D6CBAB60BA84AF2EA7A6F55D7825343AF2F278B2F33EA43796C3541D17A0CD8E1DB5C
FB4C451D338F3CF9BF431BBBAA5E860577CE011A96CE1239A4E7094053BC4DFD6DFD496C0847
49E3F900DD5FF0B5D6495358C63E5653BC627969A4B71AF74977B14A4905648D13DD0DBDA939
2369197BD914FF497217626356094490EEABFF0B1F8691C7E305B14BBF10E66264FD9E4D5795
A89253B7BFF5CDB20654FAC3B3E0B25832107BBECC4E118A352A38DD66D2F3B86B8891ED4E0A
3B7D43FE2E58D95B107C2E22A596B3B7CC8A889F8050D563109CC3F45E7D6167741A5E1BEEEA
C3AB3D2F569A9C5FE1F1888F04364E219A5390807C08ACECBC1B5ED2054EDECB4C265E0930B9
EA07D50D21C1CB3816ED462E4244A25B8FE5AF18A9196B59A185D81F6B3EBF0CAFF85B5CCF50
76DF75B2B75F22604D380FD357FDF4A61540F43BA08041034AD6FFC793F60181CBFF2DB634C9
465D60D3DFA059C154D01B3281D34A61FBB8F73188BFC524994613BCC3572988393626B047F9
1AA96D5BE6371EA36F5BFA51DD60D5D5CF62F5B560BF940D627981EE8653C8460D4159149CCF
63EA5E567655D6177AB0D4533CBB333DFAAFD082A04126B5E77150909C073D460B4EC9F28310
9A6F38C954F8058DE4A5259104E75BBAD841CBB3D08A1E8734FBC00D38D8FA7B26134CFDDA27
927326684C7AA60D8CE055BADD85005D34713861EDC650E5C491B4195336B8C193E024901966
FAFF3A8C0BFCA6D5A9FA4D18A05926537B2C432B59017E591455A599D316BF1D0857358FE124
D54FD5A9FD318B5CED74BEA721F2D6D2CF72311409850714B94C0861F070A81684AFB233AE63
6F84BBE8AFD5809B5CCD9A584E828AD7177D64F032374CB78AFC6C5933236D30CFA69B194977
B38C76E966DC905EC29201D32826E6B578EC8587A39DCCC98C0B777D06FD28AE08FDE68DB6A9
5FA3FF9C23DCF019B4FD1B5253CFAD6245DF2766D2DDBF3E23E1A1881D77010FAC2F7E8F9F8A
C87CA52BA0169A0F5535BECA3B5D18EF7660183E68C226060B519C6FB4F68F37B13CE8F04B8B
8CC5CCDF5E5FF5177E4C8A7F8F77388E01EF27955D264F710C263F2649EA1C62563094DC30E6
D1D4B0F4160703552967287BC17FFFB71CB101A1852EFAAA88A0B40A6E5308F0A594BAF33BF8
1B601EBAAD18BD9E44E370C6D27D2563DD3DF8F7457B7D0405D38874291455E643187FA4D0BB
DDDE118E8421973C4DC2FB1B20ED74D0337C2F27B634E730C8528F991A684C722C378C31F3EC
0E72124EAD08D71C5ABE8BCF492F409F848C2646EC9F6B530CA69D34DA456AE6A97362E4D7C7
9AD73472932C354E2ADCF3F8C87DF44F845C1FC86E9A7BF52A1E02804D581E4350F8FE18A776
BCB97E637B2FEFA7AF18803270C7F76FE05F5DAA44B8166772FAFA976630D0CA98A1620E1C32
51498CCB2781270060F5E547CCB14AE8A9472D07827AA6688E31122D269DD06EE18789B6FACF
11A391A561380AF543E957D32095E58C0D8C97825E93B7FA0DAAE5A53C6A7A6E3501E3F7E108
8998359645F40C60C4457EB18108ECEFEC777DF8566CB2110ADCC2ED34B67D29ECD0A84175CE
7CCE2836C9F6D2B66465F3B8AD6A8F0EBA79F6F3B99FC6712F3E2A762734B5F1DB56AB43D337
1578B99340496C0E35FFBA44A363C6A583A3A9C2CAF8D86225B8935827ADA893265E9EEC1AF0
37EF4368802872F82E51011D39A15741E6DA8250EA745A6674C71915D4B7B87A0E43BCBADAB6
DC8A11019BAD99B0F49952AE5D67C0B1FDD7B8C4EAE29CE754CD3E6AE0FF82024F043B8A1FF3
C8E784DD09F9946A60AAF416255AD02DFAE7124E5D10C54A4FE0B83F9EA71F8FB4B4DD9FB035
49B9B3911F81101C877BE0AE8F3E6B9FEB551CCB37EB4153675C9B62CFFB688D65A46254CDB1
B80CB5ACB730D161683F97DE363C15B804615C38B1154216CED1E36F8703ABB3C445332B82F7
D6321B01416F7098ED156337D578D057370930CA1E88D99B62936D36D05CCF733C3A6ED94EFB
9AB6C12358FDE5DD2C637896D6D0FD80DD2F045C66B4DE933919ADC8EEEDC64B41EF1A780FF7
4B4F1130436E9CA759FCF99B22DB2DC5964BEA151336168F724232E7A5E8D5C0C19F133613E9
F0403BE41A0A86164AEB76D537CCD042D1AAB33235BE8280860702DB9E62CCBB945E3F7E857E
918BC38124248A5EDB2A94024BE940B0C7E8AFCDB8374B9D7128ACD908743C9378043E91BF4A
CC7A65CAC32082C83AADB9398F743C4F20842FCE0AC21E4D2C823641D5A09C6D20C4E36465D3
37EA22336D1316663C4D2A9C9099821FFD48D4565A157198C1BE3887AC78446A91E08A8145A2
EC605DFD5FFDF8393D1B990B8140BDA08AB893F1711E099E49B75CD2934875B12CEE0F2E1285
FF61393CAD2DA732C500B84EBAAD20625FEBC3D52939E11D15C743E283251CEDA63FBD2484FD
2C0E3631A738D70477C76B658F376F8B4493ACCA73F37E5768F7A33721F57F72ACE29AA07ACB
33CDCBB15452BE747BE1F9F73814499EFDC23C60A6D717349087892499146E7B54E15B9EDD98
0161F38FA63D948DB21487357E5B05DECC6E7B01368793670B341DD720DC6DE08F57C505E9C9
BF17702F61D8323DEC372FCDD142ACCD608E6D21F780119ABF52818320B0DCE24B307CA5AEE6
9EA36E4B73BAFBA631619D345B336ADE490C5CA5C3C853AD921747DBF1AA67C4BFC80519B8E6
3142CB58D92A9C7BCC60B0C2DEE7DA2E80DDBBC4874691A5C9EA41B5AA20674ECD1A4CEE8F19
97EDE0B9264C85825694EA69D77C618F09C3FDC50A55BC8F4D6CC8CDDEF60B9DFB780CFBC2E9
74B5A701CDCC0BF126D5C3F9F5556A3F95AE04D88D557D0CCE13E86B3AE1034557F5D8F972F1
16514603A6068A50D5CCCB4F6E7B5B6B3B6113A41DD14A7CDB4CD401ED373228CC6B86E7636F
2F6205F06A1CA7C62D2452C10B5DB66B1B79DC0A034380DEB5C8356B94AB6D7D26272F42A01E
62362A75B462F2FCB4FBCC53D6840070A5BA3EF3D34303C1B85B3204EDFAB55BEDAC3770D27D
581BF70136247F0F0A6FA1E941833809C2DAA79C9EC014FBD0850379D9765F995B1A6BB4E269
3DB6BA9EF06E959D75CB1547005BC6C75B2D3FCEB22881C0043F6BE4A4D1CA25B0AEC8142243
7F51DD7830348622DD6F1D9FDD2FDE4C295151BEAC5D6C351EED10336A1631A17AA3AB4EF414
742710D3A7B93E6352BD260D6A83424D2CDF85DAFE0ADF58D23F9A639C59618BA3A897BC8E6B
6ECFDD1B1A028CDAA8B90E323C664821CBA37C96E7F9EEE13CC623754821F4D2679D76B2F7E8
810AC4E06DB0D4A20E3E9CB5FAFE06AB6A57154F4AE5FF706B4E2F9AED55B899CE024930B9E4
BA460AEFCA21A5066BD64667527BC508C6EE6B38678C864511A26DFBC0652365BBDB819BDEDE
9C9654440CAA6544C3CDFAB4004AFE9708BC073814BDA5FAAF682034E05E403F70572A847CE5
DCDA6C4643B1F0E669F5AE0646F894143B918AE971627198EC50E61390DC2438AE79DD86885E
B90D0E81E93DE28E2A1E6FCAF37C7E1AE15C5BA7807B3CCAAEC229C86AA5F3261520372921E6
DD44F156EA9242C80A742C33E6FDC967E755B0C6564F21DF883129BCE213C5FEC831639E62D5
F19CA001D313B1CFE6144C4BEC7E42AE6A882A080A2FEA2D88F9814B86A746960B66BC2645A7
795E272BCB744A0821D2424A7C88719BC2BF05CF6BCD0C806CFF0071545F1213E40CE8D0102C
466B9856C597176F312B1E2A75C55D79A82E5FA08E17A067CEF1B435DABB063DB922BA70C690
4B8A70EA972941BBE166E019DD34020146E518BD2AB9ED9ECFFA37139244B667086C82BE4743
F80F7E76718AF745B76408CD4F91A611FE86C860CBFDAB06CAB6B98E4984519EE027D270C269
00A78CF5521C612DA7778366EA83BD381467F0C76564DF7D16BDD36378E74D1C8F6587DA9EF0
60F3113B7F02C07B85869708A947496E06D792FB0FFCB84943BC3F7BBC1E73AF8F6A7F03E17D
91F5DFAF967C9D4605B26B8D83F1349687A01716B34D9D4C5526DCD762E211906C7F82309822
1328FEAD201FCEFD162F2DD43AF151E544DA301EA7FFB4CDCD8E4D7AB2907D7F14805F0F208D
BAA293128E45272DB99E8D1D16FC86DD75FA97417017B6E55B05F75B89815B3B3EA8F36416B0
A58352E03B36BE74254F589FC93BC89B363536EA20103B43FA8BA7048DE455E56E5ABFD689C8
DFAD3ACCF12CAAC3286F26FBA312E5F63ABBB0B522D1B24F47DC7E38A7BE6E82F92295E5DDCE
45D635D3DC715AB0075B264502DCA21E4F24FB5FE069A5D20DA56736E66D332AE71D7BB9B3B8
FFB5E7242B9DA4AFE73FD525A62390800E67B407539CBF0D7301C5B6033CA723AA64BBAD0AD4
77C1D634D66E66C5360FD7D991262ACDD745F8A4198ABB3D913BCE4664F9B74D9C3FDF68D67F
2064FC24F20801C55CC052775E1E8D29965B9B88D4869B5382C4F03F9151FB8B529B17FFF6E1
6126A032DC4BDAD4A73E32CB0042CF9B18D5D29CC1EBE48C1C072A0BE141B3B57AA68B60FCA2
E11BE2266B80E7A9F0D71E95E16852FAB3206772FF58D867CB67DE416F350C944FB1C309F4BC
73B9FBA920995B52D66D730A09B17393BE30244989129371D5F152CAD7B2A4A9DD6B0B7AEFF4
F323BE99ABCB44CAC56144B48C2071E47EC1E1973DB9A94C599C5A3D1D271A122A3E3C9008D5
4AA7846CF97CA609488C27C29AF0DA8E85FB74AECEC33266F501ACD07C1BEA82D7DD15B5B591
2C0AF116FC42AFAB4E6A8D042AE22F9A11DB75A26C73A8E9AB736A7A34CCB313353353CD11A0
0971A9C2D3761F44C2F69314DFE0C97F2E94C66EC7A3FA7F66E903A0C89B0EF64BB36997A34D
42AFE85DE55231EE3E4197B3DD9538840FB83A3CA4C93BFF61CF613732E65E17BDD4EBDBEE63
AFED0758D2573C71CB93FE0A646538FFACCB7E16728CA4873A30B806BFDE26C0F601B12DAA7C
D54BBBC7534D8FC1855CEE9D083CC6B23D4BEAFAC19B5322F631823C0572E895F88EF01FAE46
2621BBAEC4DC9209AB7AF266B9DAE2311E3524A0C82B87708DDA0D370F71D5005B48AD9E7811
E1D6521B1FD8089B400DF012B1413E67DC301987AB3BD84E37DC343B03B810DC9C27117D0322
B1A2CE2B23899C1635C19AC72BED67747F0AEC442A7D976E1B4FB05F8C44743FE968BB8ED652
F8B97C54A3EB9B700EA348A6565FB221E0FD5FEFAC717826889A9332D9D0E85D365D3EA786DB
2950978586D632CEA0F0642CDA07725EFBD57C2B6D2E35F911E996B3AF3F25172063554AB718
A2A98B395BF61F953AAD4838319F51173CB0E614282C9B0B5D4F3E0A44A882370222EB7543D8
319A7C918A57BB18917DD3D3130E28D734AD24779497B896AB8EE3BC40550DBD4758014464E5
C486ADB27ECF8CD325984385566069B0B582563F3E38D4DAA021B26ECC5125B9394361CF8586
6698B03B7B07E0F28B96E343537BFF470364C7349DF1A25BC20C40759358446548DB51AB1E57
A7BD9F599F2A3481241FBBD77521BD8A51542C70A49BB57755777754BBD5DAC8CE1540946D3E
DC6A11F9B6C3F77A719A1AFA129632AB389FEE1EE3DD1784A5E8E935986915960563EDE365B5
5039B0B98F70016096225A2ECBCE59BC4B06E97F50696819CBF067C46A55E5A5DADAF65B2703
9E84F50AF91E16BDC96E95D4A8A2D8FBD531850F51FA3F10D603C13AE0BC2686C37A6C993D69
1F57F420E6439361AD58DEC653A9F3D5316EA9529806881617C54EBE9501430D3262C83F6FB1
592B7940564F299E09E48B75AE4D8E885D0FD525D0C0694E7136323B0FFF3BE8595738E3F5D3
FCC7CD20C4157AD43BFEC85D14001E753ECA1B76A3FA04779CCEF8DF1249AE049E5D62738F41
8BFC1321CB8ED2500FF20EF3ACCD697BD2171BAF725B98274CE16E9181B08B9F6AF817612EDE
63EE9A000DBD3D6C4DF0AD3140AC9CA3736E678C26D854B724E85AABD9C3B1AE55DA1F9C7461
1E4F77E9D0EB242AAF39F6945C8FA7728F13711603D1E0E18571D33B0DF2D48FCE718DE4E0A9
FFC5BE8B72FF30554B031731BF8F90B1B3D21CF38513BB5EE7ED1555F2BF24DD9AC0CD2F5A95
FC286DAEDF1ACD32EFA045A4EB6AC18E567EFFFF4B4820BFB5DACE61B914F013EA243CDE2DDE
65B9ECD5398C9CC6E40B880AB647105D19DDB00D65B68B8B02C4E8E68D2ABF785DE73A3E3A25
75320A1B4F24EB4449609BD0FE79F0F3007A0CE8F36B9A7CDAC95A2936DDB7B9C4D4A61DC9F8
0C27B28318D3AFF01F9D013F5ED45C2740F7D3135503C131FDAA6B529C7D1867E1723BAEE861
CA2E6EA1C971A7941EECCDB1CCBBEACDC7EAE19AA0D75663AF5C7D9274CA5BE884DDE8424272
D8082F2DA0D1943300B3C754080E674B0F107E956A538696750D65701825EBB8237B814FB7D9
2CA577D0DD53C6AA7ECE346BDF4130ADB176D9F6D81F8B0E942A5A5FD819916D651942FDD619
DF9D9B16804B5FFB7F487E51FBDA96544696250CFE8918781815C9DAD4643DC3F65DFA8EDB44
4A874048892C602FEDE23335E8F00EA9A0E5FBB1816357C8ACBA7879E00D67B95A14E7052281
0335D32509941DC22742093DA9BA0A42C1F71D35F6FC786DBBB2C67FE489CC356BE9762032D6
9AD2926BD165B9C6A43EC30F0DE3D4204C62FD62828CC285DFE4461CD62AB2A7C9D7013AAB3E
313FF8C7D82AA62B6B3FC6FCD4740A7AD72395BCA9CA00BD9C819EDDE48992C218F2F58442B9
31D6861E72A38F3742456D75F9BEF69FBD7DDDC5108F09AE6FAD6DB5E68D347F9EFF8B77CA9E
757407B5C04EB66D1C961F4FDEEC1AE8A98EA058C2FE29BBDF4132A4DDC928CA3C8C232EAA03
8983F9D6A8C897D307D0D429368CBA7E452B70B560F540706B3CA82221456C1F896A97B53908
053E5FFD4E7AA470BB20F8B3E5045AF0510B0BCE923BAA19DBA4C59FB56C824C0B1EEC322618
259AD02CDB518B1440D85A00D7D8D4576099CA887775730BDA5BAE9EEB4A42DA779C45C20DFE
6CE526BA62A2E6827EBF1AD78D74150A2E88A1DD5BADE7381D95808AF8F0B8CA11AFFF68BDAD
6448E3B12A9B22813446F34484FDBA8D3DA1EE26DE31A199B2978FCEA142E2C3D8FB82286E89
0BF55B099E93B580FAF90352E5CE80252AC66F50A4C6D1E9CC2B6B5D2CFC3F577A0BBD24D372
210A1679DAB700699F46BB77CCE24C27E9E76BD65476CA3926D0BAE5B51348ADB3D9C7183B8E
0BB6D529A568743C85527C51F435722A7AD3F6744D99ADC6E45BBAA90FB5D641992E3AD1E130
72DDB86310CD5F381793DBFB6C8AC137535BF8C362B4D43740DE8A53B3026A9FECC6BDA4A45B
926B9DEC32D2915672CEEC6A65AF29157C7A01CB9B37A6524B058EC8A0BA7B5030880B57CED8
A4D646F846C99C5720DB52FE9A934FE64625DB32D3A6AD0F4A2C0357D72C45150A2213223C84
81F09FEA678C6032A418545C72BC8E4A791EB85460B43507BF3854A45737220F2DE46E86F4AB
2DCACC433F98D8D85C3396BB48F03B87A828CE5990340CE3FDEE43478EE9EFD32C5A3903BDC3
BC3F6F194090662522EFE138A7A4FEF3E6A077C8610BC2409E79AB9276BAD71F616EE2E50BC9
A1F4F4FC88D86357E312D4BAD0AC6926E5B70C4B622BD3CBC42D321F24CB44836F01F318260C
0E4DB21B9DB87E8A48D133146B592AC972968EFC3778EC1A411DCF24C6515585FC68E5040419
E46ADE0D1A8CE12E9AA3926FD5F510D975F8B541A932E5E543760D72E2F4A09DD3DD2C5884FB
3A004C82926F020BD76D5E36EA479D81A4F7C2197C6FAE2CB4E328458127F4BEC5FC0F29A954
66088DF467636738DC896359AC4D7B224E43616B075FA04092F201D0D80FA2000B3ADD4DF702
D30F5D5BE575D827FECA31CDC29559979850E7961583267FD757048851527BA60D4AF06501C4
D7262B18748AFF9C130A75CC797D0944B349678CDC60E37A0364B4F45A5055655A150ABB2DD7
38140DED04E652CD955DEF4591D6AE8D56640477EC4C5DADEEE3956798CB93547BED68CCFEEE
A0D9441F12ABA9C3F0105286D41AE57D8E6EDB0F95B675E0400833EDE3C9BAE709EC4EA82921
8445E48FEB0AFB368DEDA71F48998FF59BF293603C685101A203AE52F404EF0B12A9138CB100
00E4B19F4B958FC9C413E5FD262603A63AE9167AA770CD04571E4749076C609D080661B08C8C
605D43BD4A4C6CD9BB5CBDF9205C147B2573CF307D04E63AB65D1BDDF72F2B816D52AF7C2424
57E4A398D21E9B5811929F002E6179C56415D8D7AE8E876D129CB3EF02B8E8D10B7DDA8C8FA7
264A973DD80AEAB5E088919DA2FADDBE07B77C1CE53CF2B0C74157CB83B30AF9D2E9E08E88BB
77D098F428E619C8B0EC4527A81CB0867A11109E34CD8D7281E2F8776D036F153E0E570FB7F6
FEF15831B1C735A34258214D9CC4D87DFBD4921915205FF566C1882070172FF777BB02128016
CDAB13EF3C71157349998886DE9AE4E7D9EC993163433A376BF9220444B2B21BAE83D531BD54
857A0436963B97895E81DA0BB973D629FE43A82C5158029DE6661A313C1459A4AFC80F54C369
99E3CD80CB757AD1A91C767AA9A8DCBD4A9A1F72FF4FBECE2027400F62C2BD45070CA98880C2
B18BB246C20302E017D8D13B20A3473EB0088B42BC8E40B898D2A033B25D48FD673ADB331E48
5BF487DFAE4ED64F0FF6F19FBEAE344873B94BF0483D1620297F0C75BAEF5B3B084F5D1A6BDB
174E71D53ABCDA2C242E1D4B5DEE67D1AC7DD0CA49B8AF2A67ABAB932E106054B258B15F7E1F
7F2EDE5E1323DB23B3E84C7EBFE3FF21D6B5A9B085205331788768B178FE952CB8D1577E45EF
32706245EBF26537835AF0806BA6C10A10FFECF692F73C9EFE9DF45EC5FA91E429324DBBE6FA
6F6E8CD3B1A1F8CCF827FF8F3613B1EAC6E499A6DA594C0D58EB626BAFE2023EC5722101819D
B23E5952120E46D11305FBF4658AE81AE0E29EE81FD572E2F0308651237E3AE64D91708ACE42
738F3260A77959C5C09EB8C48D77BBC54565665D2763D765F0883B8D509E99DC819AE636DA0F
2CC97C981D1FC2E711FF46A79D34C51D6DBBF91F9243B33C1B42F70784070674F6163AB5FCA6
D009461BC9FA67694866375BCDD7D4A3F32AA5089F94EAC222E6C111F54B7CBF0E44570DB7DE
10BB3A0F8C15B6F2EAE1AFDFC192AE094D3C2F0806680CC0D05622F84CFA52A61ACCC7A45439
F68DA0B5D92F5E1CE47A765BD3601C65C0013B6E3C692A52A64B37736E9BAF6C465990133A8A
B7F59D3D83867CF35F691231D89FFBE84B152B9F5845133D56B21B815912C894A771711D1076
61F76A09E80881A08C8936FB8C2F213ED9F3E26D1B631AF76B0E70A6A236B97B57CB2DE62A6B
2BBAC86D04D14DCFD05A1B583262E13B3B61F54B46D1DE5D400000FC0005D3B29CE8FE915435
A98801722F16061E0C6BE2DACF4C9A95E586D71C04102E2B1529157C1E9012D4E1C283796EB1
16FD58DB78A5E776B237E04A115710714ECCBBEC6149CFE785FBA569411563B6A6E27CC0DA9C
F3C760AF5D4683A8914D95369B8281833050D5993C76FDDDF41261FF02C4B04A9CC6B617AC1B
1163BFECFCF4100120C9DE9A7690D38122EA9F8E12B00E899C6425730B93AF80F4C75475B3AC
9CE475619E9A0A61722216EF9FEDB581708BA0830CE500465AC278A2F6E9DA3659E9171A9317
7615E57FE875B67C26D06A35A0122895ADE6A49140307BDB0DA71C3714C0FC218F34C9346521
BC1D9A6A700AF327120AC07ED9B2294F5052EED16579094EB92274C3E9C155FAE0CE973CE9E1
D5EC7BC2E55A2D4AAC34895F92D2EB850D85987610B21AB824388218EDF15C37029831FA3729
035AD228BA9BC1A1A89BA107805E39397F9C6C39E280621C5DE23D284D2FCEE8E4006362BB19
3DFF997E8295C33925C3251488F8607F62CD5E1B31DBA8B024A05C8C08A494C60BF20C1C6B0B
49AFF964A5D7EEE70372FCC7F64067BE78D35B476403FFAC8F2803764E01D95CA2F09718C804
26D456FEB6E0A5B8985A5DC0BB0EFFCF2B6D1F9AED5A069F80656B069905DC124CD97A38212A
3936C4F4E10D0C31D7F65607E18A56FDA33739307613DB5C6A23A7ECB2C6963922E41B104F2B
FD66E04C09553BFD0F53AFA4C43495D1990ADDB60D3924A55DC881D2D9A0CECE4C22345AD38C
B3E7FE1D138FB8C7CE8EDBDE5FC343C598976099AD62CA8C8A76EB75D6EBA44F58B5C770DFB6
609598427E545C02EC89C9FD8053004F3F3AB91F693CE3DE7B01E583D4069357A75D76F37C09
635A26892232996D5764865E8DFA7175EE6FE95017ACFF302F452CF4DAC840AAE747E22177DE
87008F7CCCDB92B4DBF12F6C352FA520E6866C05BED7950062B05276B4D96103969B9CF09D99
A8AC9C099EB50BBDF794BCC45E05496CE09A6F403998219565A555FEC536F4D5BBDA517A090D
0B67BFAB57F922FD0C27CE96E1AC02AC7FD7B88B6DE2B40458E319C3BAA49ACE54DF3DD618F6
310EBD4306E2D9D13CBFE4F9F2DE6C0C39024844016EA07D23124FF232EB70B53F0B4191D325
7D075B20A31CEAF725C3427074FE96FEB9F6465883008511132D7C46885A07E5AF39C4BA7050
519E65B4D38780A48AA704786DEBA7B4B330EBE158AF624AD254A1A749456E94C602EFF0A977
2C870F557EFDDA6EA8A10BE9248B48F5FBC0D8B393D379F5872E223B677B8CE32363578FFEEF
F69C5EDF1F7E91438D973E99768A134407C02B05883DE8FAD81FF6C27709905A5170F25E0A2A
431FA40A6B018F59C10B18D8FE4D46D2C63C4E60A967608532AF681D2DA344A6EF71F60E4026
103B9AFCD9690504F3D5A350098CC25ECA8E12E92E22A70692614C33C588850A185E079875B0
23BBD0F05261BA6361EE012EECE6D2E6F7BCB18060AB11338759959AE4743DAD5706A885B611
744B36A85783822B11D724571D10E4016B3C3C136E189CBA8580563D9E5E569AAF11EBC0CFE9
416DDC0D2A29D8B08BA1CAF0880C095CCDACB2CA4D7674E578ACC90D834BFBA7EB5C4C8A40AB
A549CA42AF6180A5292E9850B1E071372B6B6297D850E03E5FF8AC2D91642D390D82B001D730
0E3EE7A86640CEF91A8D99EB93DB3F5909D032C4E96971E635BB7C91E90D83E592EAB38DFB58
F1AD02BE7721D6BD8385E33064B2B22D4A8DBAD7BFEF45014EE987DEDD0CD66F4FC2787802B0
1C975DE69FD86A1B22C2B8786128691703D15F2FC1E2B6DE0C8FE861C3B9182E43F66BDBD0F2
41C8913B689AF91BE5FB7109D9E29B05BFE1A5E5BAD52606E85D0A955EF5B15A5BC34D645B7C
B2A403B12986FE7C3C1DD42449DAE23846A62B0658AD2138677922D75C0BEEDCCCBC3E0CB7B5
52FFB89F1126548D55EAF1B66DB7452BE40DF63CD57A22FD8A6EB38EFD4546922F9355021893
FB4144E2511935E70B7E5AF27B5E1749A1960E52E64E369B282D56DB767AD7C16232D05E0596
A046C2F4445A28E07AA168291C01D1F0549C6CF0FC5D88A218AC9CE92F33C70E3652FE323D0F
88B3A80707721B2B54DD4191AA609C54C91B2344AFB0255A91FF86BB6D9F4AC84B96DABE42B2
489F2271BCC0B4791C8297CC690C5C68B8F8C3D95331500A66E66A3E4600A10E97246B70DEDC
0663C9C67C4918FF523AE4911B793C0F26AAFD5A26C5998A97DB03D54DD837C089B58904C39C
71F4FE95CB1F8AA78894575AC14C8D10C2840F56F2C7928510E7D49F09C0875B2AFD91E07F96
70FFD34A14D9AE40193EB68206CDBD2E31894EF7600482F202CB19E77C6D330F8D16F3CC9B10
94006D096D482C0436C8BBCA4BEF08808012FD4920FF8836185659864368589AC9E94C9B9F6E
561731B93C0838EA90B14FB4261561CFF897E42523062911383F9188887951C53E96C810478E
29C223A19F66940804D41E01B4E7EF1AC847B51D580706B9D7D2B813D4D0DE97D7EE997577AB
151C6CF638019FA597B64A9992580AF7A16CE6BA589017D1BB86B43B0ECD592F61E794ED14AE
7675CE054D9519C70A80A9B3199BCB038DDC4DADDB53D84576822DA07B00CFED311EF0DC82B1
D7511BFDFC4779F91B3DA36D4F585B395C154059A2725613A03F7FA733F7153E4885B27DAED3
847EFC84F5F49568CB9A58BB21C8E73FC9A2A6DB58EF10E7EDDF0AC9B28F0C452136238125CB
C3B798B0F1259BEFC7AEAE5B3A43FADF533BB5B708B4A54EBE510BB6F49313264D81124E701D
8015B8187CA6C46B9BCB3B0894777E12F77989AB72769A040A0C943DD014024BDF579B4B5F1F
EA1CD54195D526EE609643ACE049319A7AFCFCEEF372011B49D2449355B9486F8C44849149DE
B6E8FDEC097443165CB754B387BA951A3DC565F94383C8177CA3BFDB0BCD398EC2B5F1C534D2
C48AB6BA61F23676DD7B470A0C8E8CA77EE7C39296F5FC7DEFAAC9759C04C6FC4FB87EE1E607
06882D2348E3069139B41423F695F83145BFD5203562BFC3D05D24DCB51F8BC14CAF104D8990
1A51CD4CE65F9DC6AFFF54B81DF6DDC0FC7034B199D92DB32A9736615BB727C043A2DE9B2838
DBDEA294CBE4B558F8A189E30F5B055F0CCF2D9EE461C6F07AB6AF85B878B1935FBA429B443C
4D4B967F26B747F7A1086811FEB6ED5407B80ADE7BE5D3F77F00B27409D627FB00B7733AA1FC
7B0FEF5FEB7548E7D829FA56DC4EC38DB398E0F490B661B3583D13B57CBED4A36F0D6094398B
9F2E795A003B98533D3797485D294E5AE139CFA3C2AC3A46DAD7BAC762807FAE98D81EF9A408
354E52E30B9DEEA8716CC6434DC852824B36B479035456839B1E7F31E6D9E14164325589ADE9
6A629BD38F692790C7F360DE1758419AAA309E7E1CD97ACD8830D09A23384FC3184ECE9F1B0D
670FC7CAC734F84E2E13982B9FC96AB1E1500E3E5FBA0C9BB691689138A57A8669DFF340F8B4
88CD9232A9BCED68B568DBD5604CBE576C3B85945EFA0950B1CCBCA38DE5F60C6938AB8FD48B
C0F31D5EC69E91C9C297C18C7028C1D5480780DA896D4757E67074DD421CDC875A0943774B73
E72B409C6E597D561D17F109FFD2F15A75057A52EDCD4036BF79CB480785EF8DED48BA747FF0
8494A9095B1403A6236FCBCB2EAB4A562A2AE5D18BE4C8B439005AE9C8508D18CD7C4C021715
A78CDC33D2E0CB490674B48AA723FD53A8D9D52B2D410EF0B8E0564B33E51547D03732B98814
580AF4A2FFA21648F3E80D344B5FBCF881AF31CF08FA4C78D5FA9CF7EF6B2A7CB27E7C2091B3
BBF544A28CF54D7B80C3734D8129358E7D727E3E7C6415D4A3027DED06DBF8D25BCC638451C8
CD2533B51A974066B16954D701710DD121DCD5C3E23313F8F55E0D278D7BE11A66700D30C111
037EB13CD00AFBCCDF3112E3178804D8450784EF2314086080980836228F5EA30D5E5833E28A
948BEC11AE423B4D6C4EFA2B376A9177ECE133A85EB57BF2E2EC183158D9C2D70103E7694909
E0D465BAB98EE8BEB4042244919E4F6A7B575D397FE3984347F0500B167B4911978D1230EC22
AC03DFBC9316080B309FDA31F34EF3D0423B07957A72A2E255E306EC3B3D628A366C6F10D0C7
8A18804B9ED697607E3DB1DD6F3C39627FC30FBF62BFC04373824696C5194A3D735EB6CC2CDD
FB427BF1E77C891277AF960E70B9CD8B79C6DF15F2217AE881C320371CBC68CE6D0742D70BAF
CCD6D72632CE3D0ED26DA6645613059A88E707BA64B41CAE8F959973F7D4934CDF36C0EEC2D3
0EAB74D0CCA12583201AA12DE9B27BF059984005E410786A131B165EA2FB09E96B495DCE7C91
6FD8BE07123B6264AE41B6FF44225684B50F39CD0BE72C7C9DF945791DE9D64B53E5AFBD70C8
35F9EC4418421534362A6D43857B651B45C009EC06604150A7587A0B058F1E8BF0A5FF1B41D6
C3B7210D3219B3C001C7064A7ECFC940FAD290486816ADADFB3E992D2DEC4FCC3B65C7148155
A0674C1F6D8D1B6DB30D67401B5C25E5C0ECAFF8C7132D0255B5D58DD96E8C619F6E2A7E6C87
21BD60904F41AB8A1E802380150D8D470A84C3BF1DDC92B11BEEF01FE5D547357B856861ADAA
D8DD81CE7A03A1AB5F6A1E9BCE448B186153A376198EB6A6DCA45D3FE074A90D6FE5B42449E7
3A02AC5E7B38C720EA43646E8502128B76A9216F1484380CD40CDC1541002EE9DE99A24A0093
2498CE9190ADA5DFC70F3E31CE1310AA0E7A63A3C11D1796C50258E75E0B94CB05A49359EDA9
21A4E12A6A3F801105A77651F118539136B38824C542EFA9C47ADCAA6BA8839C41F1A7EC1457
A0E367D7559F656D37353A8AFFC427840474C2E9A2A3891B656CC5330C51DA3B9E316CBD96AA
020C9307B8476B218EEFA3AD404292C28E635A0D86012EAEC5BA7A84D8E733E7F42AFE31C7F3
E91F91BEC1163F92CCB7A9BAA30C700FEBB2F265BB9E6DCFD42CAA36F4B99DF5AA650C2474E6
EECF00C584A3C6A182563FA829F441205C8ACF53F8460D8DCA81D7DAD8CBA83F0FB75AA188E1
89492C2CFB2C521B52F86512D47D40392CA4869832C254D5C4518E0B323789CF51D96C2DD808
326C7EEF19427A925B40A5CE2730B239C0C3CF8D2878EA50F120AE0B7A8CD4B1C9D8FAF8628F
4992624C157A255F35A1663D0CE06AD38E4B11819F5E258F5DE09588E0831B0ACD4B6274CBB6
585126F5302B4E568090C4FA6342682474E1AA6DD85642C66A04F0B057ADDCF1D46F960CDD59
685756763C2786FBF465849841854194A3AB88A6B14ED26DC53D22EA8B92DC580692C3848A2D
22213F5D286855058343943C663F19AAD6A5F139E9443E015A7CC6AB71D569635A319BFFF835
CA9B72BD5C8F90C254AD98B277A33DD77B0550797FAB37EA0974FC63A9C18CBA1509804E89B5
C8F1E50106C765C93514C492C91B105605CF7A49D46500310F10622CD9C068120CDFDBD2935E
0C190CF26404714A62A9D33F143781BCD1E7F64B99988FD3F09A6AE2BDA166FE05490C8D620B
A7826036B8184378838090DE5604DE48B708379A9ED26C39E53B59DF689B91C1F8D184B4C168
EF37FAD8A144054650E035D2C26787F369DD8CFCF6CC1D2CEB3183024768B524365778FE6AA1
0ED72511761F8140B11ED569A36DC5B55A040C2803847BE55761CDADD0BFD227AB51CFE11309
D3D41B75453F38229C4E011BDEC1B4408AEC5F4F29F4F5218651F83C3610125C68C6E95FAD39
2027BDA90B78BCC09C8D0B6477E753A0B5D88A6CFCD86E2036648C2E146BF0823EAD7C780B7A
E01CDB4B4F64F646725860CE57C7741A98F81E3B7E614C15A04B26440FCEFA605388927C2BA7
8FAFDAB30D7A2B849F8093B8EB1916F10A1422E72A76924F999BDDE29A7D4F67155046508995
89F134FB86B97705E70EB7DCEE54CD5767B73596C643CEAC575272F3BFBB1457700A23B29EE2
48424339334712419F418E02936158427D34E4DB691153DB2B99D27A043443ECD7360455E0E4
38F98D58FAEF92D24209E19D2C8F4B5EDBAF08159B69BB41975A5154EDF54EC7BA9FDC6E1E86
ABB31CE68D27F99368A9F72CE4D4FE2CB8C603C8683A15B591ADCBC931D36DA70916936458B5
24154B3CABD02411EB7E9B81B6FD9024C75860CB44A02B8611FA623556CBE4ECACC1C466FA3F
9E511406DA816600AA4C02EB94BB999B73A0DCB6EC89406794ABC37E29D983BBE7A6AE48C913
8BAB3F4BACBA06A1D3DC9508D26EFA0FC7932A38FF991619D9D4FB0464610041BCB7B66B5DB0
C2AC15E980C17D87FB7239C3B8BD586CA44D125456BA17D87CFA4EC799B5D161FEA0309F61D5
C51FA0B7169432AEC362BDB0B158A60B4B7BE5513B2438E6EE89AFCA620CEE8B2E68BE2B2D0B
65A3508683294E28B114E6C27AB1BDCF76AD0A3B2A8781C2D7283F11AB3CA17DAB03C5E75414
DFAD1DA1D9F16D3D28FB783FB4DBCA823F3CF15FBAAF2F5B69683D5545AF3ACBC50FCE5E9E71
CAAF5A17D59E35C0368D369F3DD25978D9763173E75F27CFD3F5FC074CD3EC3EED8E4B8C430A
7040E04D276B89AA2008C15D078DE4841FFAC5754B478114000E1F9E96B1564E6FEB1FD7855C
6A51F778B4BD044F33BA6B9A492FC9172D810E408178B3F6A91D009EA78609B7207B465240AB
474FD84DBC15CD202FEB6F4A5F3AE9C45720CA21CD0F81395C5F8EA9BFA39688BB222A81AFD4
43D50898EF2213ACE51A23F802B016D3A9286186B71425D1920AC92C859963ED32D04DAECFAF
C9EE138A26F989AE8F6DE3B790D5BEB715169B52824F6C83CA43280B681F3357E8390A7815ED
63AC0BC505D94D10515089655753FB91FE221D4DBF216A43ED71F390F08B3A58962E219B075E
630C3156D2D187DFD49AE508670107A1E9B3165EE4EDC882154C3625B9EEE1DE0883BBC5D8DC
2A7E1DFCDD347E0EEC3B46B2150DE67F61BE54EC04C2D4F25E66D5159ADB783C3CE51E7353E7
958626CCB5E29AF6BC546A68515F3C30DA79F0E2ED493D7CCDE675557DB696BDC0D6F19D5F57
3E54862DCC9ED6E61142CD0F746695CF73F9447D5CCDA7E52038FEFC67DAF3A6D852D3B05449
C61630615A88CA92A73177F6CF7B837309ADABEEE3D569BBD40D95EAA15F2C293B367DD5454B
7FDADD4829E27C16A66F9506F667EC98C6DBA1DCAD8D28D02054767415F6A0A8B3727AFBADD5
D1D7F6945E76A448299CFF82F52D533C8D82D49E3EDA5F4A46FFE58C5A853D9128A30297233E
26E2853118832FE5F85323BA553DB4FC96FC35EC1B1F3596EDEB811FDA9FFFDC11498D15F4C1
E6CE4B979AE06607578866B63B42D8D1417302106051683C124E19BB491EE8357AE52AF76A1F
95B20C29564BEFACE6D46BEC2970A8CD2F910AAF75E1DF7811ED4EC50583FF8F699232926BBC
F3626F202607BF41C3EE16123BF1C1DF5B979886C2E2E8D9F28EBC2B328CC835C19F229E6B7D
686DD098BF2430D68C0120674C9964B0E859F99656CC242149FACB10D8A0991D46819009BB11
95B99552D07949BAF2CFDDF8ACB7E42922CDD37CACA1999AFB4F065078E919E015BD66C1D775
18EA454B529867F2AB90EB5A3E0D9F64D8030F6AA110EFF664FC6E5B59930BEE02F24B348405
1261DEEB7D37FBE433D816D48F976BA9223D667CFFD8D5C89AD1462EBC1D3C330EAE52C8152E
335B9B257B74682269C5E6E9A8F9819CDF94FD235FA60A6368658C0C67A3578589A939A0B92B
238EE837D62CAC4B53D20DF16A9B92CD5050B7008B1B031ACBBCB7868BB61E240573FF1449A2
761271E7B5285A14F56FA42ECA9787F26EF8E2793D9F2A6901C648DDFB9DF67C1FAD3F1B5EEB
7F2C73F4839539627AFC8B8C592AD3EBE317E357A5C83F909C4CDBAA7A5188A205F9BCE94280
E11E0CA78FF634B8BCD69CA9C639648BD4CC38D516C85A554F7FFD5C1A78DD75BC28971A3572
CDFF0303C5C2E628FA54222D3F56DD9176A3F0A434650807BD81A2805FD3647EF4B59D2CA97B
34D96CABC2B79BD39827A50ED89CE6919F44173B600961602CF335F7E52E0FF37EB353AB9C53
B210B0A92F4051B512D77B6E69D73264ED1B399C92EF215FC771884907D476D0DFA1FB924DF6
DE16177E182722A943271C9FC80E848EA168189188B478C9289B37C3ADB960F61F3A8BBC2A2B
F6776C711330DC2F5485DDE4B9D40F634D8D106B365BE229AC7559925D863E49C58794AD4B7E
14FF038714E16E0214CE0413ADB392D4D3ACFDF7115ECCF27C1EE100E2A59A5A08601E3D091A
526511EFEF8731FA9A31F2918BCF7D7A2D3454D090364258FBF7D947A05CCFE84D6EF721A392
52BD2179FD32EF4B88E6B855280D14CA4F3AF7CD7D03C67E5C90513D97CEC4152FF830F8BCBE
6A902A96121BFBC38A606EEA49821113A21DC28082BAE270949817C228F57243880161AC2B4F
0538B99BD4ABD245E8EC2062EB3A766F57BFF8BB7FBC43D68A2EF5CEB6423FC9C6CA67831748
401EC506A5395D10EDFBCF67CA51F12947D48064A5578A11031B79DB599768C417223E36453E
1EEC14D1A5E01ECF91F92CE33D610535EBA8E8FD64F61DC1C5EC1FE52329EE2352E14602EA1C
10EE3E7314A96B745FC2084F28511C65B874EBE0E8F19A0EE5154C6FFD01384242DFA3B1458E
A90D6875051CFE72CCDA82035973972E8AFF1D6C17B375F4788491991F0AF5C2EABB7818D2E3
D9302913DB34E9E671CEE403AE0B6697998B83F50F132F423B2716299B3B509231960DAB656F
98F6FC045882E81730DC444287BD1B1B0BA4308AB9D5818DF12AE4A31618EE4684D1211290C0
FFC2C3154DFFD280060E3B09839EAFA4B9F8D4FF1C45816B9AC1146BC2D6EFEA59317BE0BA9B
2B6C4E56E8DDAEF49C98A53949E5CD63585A1DD0D497719BC323229481BFEBD819847B08DAF2
DB7652B33D15857A8D832D0844B1D55E8CB5F250329AA92ADC484890382EB77497BF8E8843F5
D349C100215D74B899165789737118CBCE5536957A0729DBA4E1425FCA2B6C57E5B716037460
72C9E2173C540B4844A95CC09E77408CB31432928DE4D7E535FCC58906D0215129B31E37C724
F2588B51A642E3954E0ED4BA89F1A26BE138D360EE19DF0EBFBE94AF21527F96BB0B859C837D
FE54A5F62572C7777BD59DBE7DF1484FF30A6016DC673377DD64DF72F99EA0AEC9709E21F911
CB76361FFA0EBFCDCECF6323F6F1F5F32846D6DDFE87EFBF7E9524D1749264BD792F9A4447DE
3EF0BD70A2CF5947183B797CA67BA1F2CB4098179B636AC63291F95974FFC9D9A0ADEA305C8A
4F603390828389F0AFDCAD5B7EC51FD9885E4E81138456068D2417FC52FB6E845035E0F59C9A
D04E7471CD8B0A674F790D5F0A8AD2741E4A4C778E311539D08492AD03BABA27616044BF8C25
B0270CDA37948982805DFE7EF9A9D9A604B7ADEF559A37786872DD642217FBB9D103E5A40BAB
2CA8B4F445ABA973E598B8EFFFCB29E1DF2FCA560A0A34998B7EDD72AE90EA4AE7BA338868A3
94DE1B9E5FA06490123ADFAB332D5A94DDDCA79B60F842038C10A34FD7DD94192E5AB40D1DBF
F6248483DB1EB548126EB2248022631FEA52FA5962A404CBD3B7E8F87B8CA34BA34EDA78C2C2
87675D73158FF098E8BD0F19A73FE4C99447A359F7C213EB28A4FA8602A55C75F584AEDB192F
38C1313E9B725882761EDC85C898EE48C642129A027B78CD06D1A7739AD4516D112A47536ED8
C92185269AD4623EB9DF4E709089C7AB958804803A5143773BABBF1503D6AF3B246055CFE846
77942FAAB4C6DF4E0A8099C89A1EAA0795D420C95456A3914DCAC80B2A2EE27C792247F066ED
F65325FBD4B2A82CFAB80A411CF1E2E16C66CA26EA8970DCA4F38DAC85EB0B2425068BE9A279
450B5BE475DEC61065D69A58743479E14680DC750AD200DEE277EC79413A2C1F7CE23A46A027
B0BAA624749E1DE7FA6FFDD4C4213972349C8BFC1CB6125412A6672C02BC6EDECE55A961D9CE
0C83E3F249AD409BECF3A90549D901A2E37E4651AF169DE78EF396286AD9AC3F56187C039BCF
1DDAE5C0AA08FBCE8B34DDFC8785D5870A846EEE33AA82D01B40E932F07E082A347B04B37F5E
2E2CD1BE46F1835E62DFBCEADBE627F18CC0E46E8B488DB9C9C4E597D6C91A5DF0AD1F1B6E72
E7289A66252D58FCAD0361AD9D06A95D103528A79957F0CEEF0C60CFB9F48E5733CE1757352C
98B41D28974481A6F16B37444B65FCFC9DDAAADEBF359BEB8694410DD103C23AE1D012A58704
41677828EDCED461E891E5A0BAF35231555B70B28854F94FBB362C191858E5F61452C5ECC782
0A07C62E2A1EED7C4D0B6453670B7732E7A550284A2751B8BDF1E81F9F4B0AE91758E381CF2E
D8D90E26ADC3D1F64264C6C6FD1675A8E51AF360871F21C189C9E9C3BBD1EF03D40A7A8C3AFD
0F2590682FC34438B01FBA0718B72828680284B5591A0BB88043EEF8FF33139EFEF9342218EF
6E2D415B1AA7327D078FD392A8F6702921F77A0C5EECAA46D863E3E2FA2106F299A58E48D36D
325BD229AC40DB25AD9302B2940768EFADCF493A8A0F9EDEBB178AB7210155E75796255AE185
F20581FA7F653131DA3FFACE3365D9AE2A65811A3CD8B0F25B0FBF27B8A481EB30B3F7DA7EFC
0B8F6083C9B5F1C99AEC62848D06066CED1E8DCD8AC13FF293921D96099D8E27196F11E5427E
ADDB566CC697B66F3035E295DFDE0929318C45CD99221BF7521630C5B86475887186B3215C27
167C347041F3F3F4696D0760BB61B7B5BFE5AECBC22AFD97A53B0A576EADD0051E803F6D3B71
89793D359DCB18C6FFBC9FDAF24059FBB3B98786F82C1F25E7A89890BC1D32360ECFB378D1BD
D30742F7CEF90C568C6AC55691EB66E437DF0012A6E448B7BAFEB0F8646B6330088EAB2577F2
5849446AA7BE23C438E7C6DBF7F3C01606F054BA2DDE742C44864B9DD827AB3114C1496816F5
0FD37D9B9AEF1418EF44E7AF26F1E7EE66F4F9C0D4297A68C4D0FE3BEA4816F9D1FED363BF08
779C31194CC6E43CBC93A24FFC973928782826982E2EE69633E948396D4C18A224726B7F060C
11B251870E047CA409DA46AA6B54BAD3ABB19507D5851608DDE73F16D7ECE480EDF991592EF5
057998DA0D8879CD08DBB52AEB2D5B2272685CC5103920D868D54FBF37AF9AB039E879B8848B
9B5DB12F70B56108F312C77B51D61E7A60E58DF12AC8FE6C9E3BD8E97E700B4127B6F7F75E64
872B4EA60641D3B889C6E75368DC12F346793830D2D6B6631AD83691BA84DCA7B010DBC81B87
241F0483D5285DF448C6C2A4C8322A8F42EEE43A1ED59DE042CDBA8233F3FF18B2523E31E44C
A87C4E5FB79BBD7D6666D737CB3B0EFA10D1F1652674E24838BF99B0D654020A3DE4F69F6668
9760D851EE7F0F17655A7ABBE6C3A57EEE23AEF62829AF8BC9C61D67B401D91F38E5D5906A30
FF3FCF82728941963518732C0F1E12BDFE656DACD2149183BCCBBFC630E9C0A6D21FCEB551BA
9C3E651FB1211158734DD36EA9EFA6837EC8AE4D332BFB36BDCB71D37CCA1A6BECAB601CBAFB
C754721764759E3B07E478860F7449EECECB6308FC93F52E497A7DBD5191BB3756BFD0E7C59E
9216E9FA72F40EAA78B2347E4A133A1100EA807B788590F6F52CFD2096C33E600E67B8FE7908
51B1D577176B41090040A49E131404F3CBD322DDDDC4985B2049177FD4F98F3B297E5F08C4F5
A36E17AB1900D4744E39B9D1FC8A84673EA106CA4FB9A1FA482E9E78645C4DE785DE5FC17B87
0914E82F3A90F112074A056A9D5C638BCDE995C6D6FEB32A24EAB04B7A03EFA1BDFF0C2C8D69
04F9D22EB4C76DF83665DA1C07C6814E363F9EDD83AB0FB6A57A8D3546BBA181DE68D39F2862
C1A4DD67AAD0D31866A652F178C329A30834C87D19B8F2A7DC10ED02573CF15129533BF7829D
C5BAE9B19BFBDFE9813ED78FE9B7AEB27E5D7CF408578B61D9C545CFD4D996B18183164C5299
7064C2CCE2740AC5E604088DD4F7CDCFD178D25FD38F1144E158078DB691FAA27D368B48A61A
3B5D628974CA505D859D41BDBCC2D40B28BBA6FF40332AE88EFB9666784C1391B1E8172C9376
8BF36A069C37632D362C37E700ABC19BC41E33A1F66F931F9A8C0DE2DF233A8BB1EB300218C3
536612BDC142FBAE52CCE9B456939308F30AAD4FD24AA60C1331DC1988408BB1092AECBD82F4
5F3984B0D2BAF91BCDD3B25234B11F2A8E7871F0460C983E6B2ECD098B3488A2782CC2B1D8CB
A059CF2EEDE6CC82C15A8FCBDF2A88C52082426548E8363BCEF01B3DCA2A55A9BB6E785E3725
1468159CD601FA67A977A245BA9F9B645C58873EEB03B20C43BC7D47CC2647F4D90D58EBD6D3
192F349EB8C0891AAF352F52F75B68FE6E3AC5E14A25BF9820534E8DD94539C69CB501239B80
87F4BBC52DC1BB3AF39550471E65D1907EF416316B13ED8499F0CDE8AB8E12EBE71F1D12BC25
2AC66A4C5475D6E16880107F196FEC9E008F0B97498E06819BF64CD2A28D8CB034F525997E45
EA82F25EEACBF4FB40D701CBBB20394BB12E5156DF6053BEA6F92A6C828244E6FE909110A9EB
1A56637783CAE12C29C6BFA7AE03C599C96EE9C2E2283049379BB09A9740013734F69D53F624
9EAFC7D4A9761CC2F083EB471ED8C92053A9855C3628CEF5C871DDCB3F5F5A28AB6B3183DCB4
D539D5EB043743DE628EC9B1CAFDC8942A54BF81FFFC3A1E2D7FAB2C7BBAC771D2B554C947E4
12DE48244B9749BD59F9A694702703938679311906378BA2FB534D6E92B4EEF296709E0830C8
35F7F6EB912F6CAA66C71BA9C1D5AF3EE3E4F3AD87FECB4CB8EE0FB2EEA8E6489C9ABBB26D2D
5D0E9609FEDE622CA57E21F3AB7EE46972F94B4FEB6C5A47FEB19FE995BC3578880F225107CA
224BB765CD0A397541A25ADA016CB9445005F12A0D15463867A7D3A4F1C9347307D50A85CC85
5B9B0E6CCE8A84AB0F3465A01594F9F8746A07D9A54C7F37D97D22AF719128A3451D0F590675
ED4BF59A5470B2DC674C740F1DE15BB3DFE2657606A98BA86AC92EF9F0586974528821AE57F9
65FBE57E238E5A0896DE594935D75659BE9ACC8DF2DBB317B1CDC88078679B8131638A29BB39
DD91C1DD1B22DCE5335C7AC44DA762DCB07CF6B8E8C60DF812D8CF9F07F4981E79A5B6B14CA7
F402178495E31D0DA40B026D1175F0C023FCD30D409E705322479F68D9DA883CA5BC60AEA820
4A166BED2093C73E8DCF1DE0BB5A811823212556673BEDD0AA4DA9445DB40729496E6315EE48
6DA70900574FC341C36CF82DBF3AD8736986745BFAEC9CE9FE9F78D4A22328C02DAE418B3F03
AE956E9BBCAD2750F996C10A8BDE3C20C04BBAA0F4DC782A4E51D93BEC8878ADFD6AD6F1C906
53C938D62006012045265CC682781766591FE71B645B5B29DEBA407449573417AD77C899FE86
E5B74F4B9E917441891DAE48167A30571795B584969FE6861B83C49B3563895817097EC43486
96BDA102272DEAB512B5A5BD09F0143B8271F9595DF064225F241CECC4E8C6C0554D720B6266
4440A1DFF2BE8879C710C48D75E9B14DC4B1058F06CF514B2C7990C81AE7474634AB330C2C7E
E35D0D1CF317E13DE06CCBE706ED3F5E1479C3146D047A3A719AB8240C2FBA04FD2420A635F4
0D6BB22ED55C6F43A7616D7561954477F484E5CF75E9DC90CD3FD07D4D917984FFDE43B95108
7F1A94210A1ADEAC955E80D30A98393F42E7E94C99DFF7EE07BF7C92F62FBC098BB8F6874DDF
80CC38EBED99F5F64D2B967080CE6CC6829F2A3CEE28E3E47F6A87DC7826D5862C618DF8754B
D1FF6139CC1C3DAD575E04A332A41411E24D19301047E9A6D5B5EC65C8D63DFC323D8B44F979
52CD9FE9FF7E828166AE1CA3829EACA58E3C1B2C43CE568E3E0C57C9ED05AD3D1E54E32D9E75
81D407EB2DC29D5E72F1167BB87C8F46047DB1C0BCDBBAFE2B52A168D79A95D6E2C48FD0EF9D
E0AE1E34A1C295BFC336C42E95016C5BE41228690B167E751E76BA1504E0C5181E7A29DCF4D0
54B8E0A7E8141F4B17F7756A506380CE00F9C73F31E2BF296C74ED375CDFB5317BDAA17BEF52
4A7E0ABEDF705C92B665017B2623B082F4BD2E194F5CE94CDB2A2772AD0580BC14CA70AE63A8
BDCEC1069F24DB0963FD6D0312A873407497D58D5351BB778CE6123502C5140929B1902F33D0
61F6270384195F60847B065EFFA3008181595F52E0D4A827704B2E378F2C2E447CAE54595CF5
3EADB388A47E18E241D85016E9E68CAC87EDE0366857CCABDE10FF78405FAE23A0BDA41DBCA9
68817F6E175FCD441F6C52C711AD58D67D34102A25E12F043650BA339CF0580A6FD2F0BB8AE8
1FD0E623CF87337926A4956DFB4B766D6DA606AFCF210A8DB955937701C0B971B7429E0ED75F
628E28DD052A3D221DA00A4E591F4A77AF08CF96918883D4AE867A7503C7E68177F3DEFF7EF2
3F86781FBC5F8A9BEF28A11624B28DD3E840ADA704AE19CCC47751FFB6A51CD554FF66292D0A
B2DC3D90B9CBAF3CCC70C2B47FB7CBEE8CD82313CC611F427FB16BFFBB5BB2D52BD65AB97A28
75EA98943794620128D14A29EB11EB6D2050CDFE8EB349879B3F3E907E43DA92E8A91147C881
D18342835CA6DD096DC948FC2E1DA214A8925E9D7A22A00AAE554FF07B061AC68895F835FD9E
D15C05BCE07CFCADBDAF286A005CC75E182CB262161267A633346BF725A9A0A04B8EF94C217F
32C1D32369484B1011EA7C2B330B110B64727D0CAC6C64F94AADCF1524C511E42005FEBCB553
E2A74540129A8823224D1FACBA76E9319C8F9FD603A29FB1F94A6BBD96DE40F4D60A1FB21DF5
3D60402BA42B8E0FC2D285C6B8429286295E74BE626765980412800110B5A1279EB289722E98
897DBBDE4C8235AADBFB2AACC84BA5981E8DB24F16BD13794036FB00FA3781F4CDD0111AA799
DC890BAEBED6F286A64108F4324C63853056F8B481B1C1EFA0C90B254CAD693B860A940AD23A
F903BA06774AF7EE2AC7F84B6D28DED16C69052A5919C9EFF59C50EA308D8F513DD23C603068
2BAA4FB3DE5CB8138358525257C3F9805079ACD9212636EC7A14EE6C636392FEB3E8200F1A2B
012659F267CF4FFBAD5E515E0B84D2CD1AF4CCB0E80E0C2A040C122823DB694C5A763EDEEA60
47327A7C6DD6D27EB911871C2C631CD3F9CD6F5C6B88A7B184F1335584B658A104D1ED06B5C9
26B36C8111698E374FF3F57A17D298DF41285F39D9094586D3BFB479C2E8EC203227ED96DB43
08CB7B9F09153360F74A0844EBF54186F9DCAD23B1E43545A250E98CCDD7FDD43E834C1E31A1
55D33C95814B0266BB2EE2BAACC2BC51A82CABDF8D5F43081D799BEE94C8B3FA4A344E10351F
A06AE12C2C31E41F2F497ABFE826822A7BC55AC5B6805F09BF0D69DEBBE97794261542FE0A5B
F91A3D1FE29A39756756A688AD28233BCB01B66B5077C31C6E80263725F2058E4C2502C9B1FD
F5B37F6C938F508B2FAE50037FF264AAFB15565B6B757F574CC4BB3BC9B6F7A1F3FF533C9FBF
104825F998693F151C027210033E8548FDDBF9B377E775D66E1111BD3C9A813E6E92ED4E2A22
036CC2EDCC38F1EA7DB9C1A889327A3FF08AC9EDF551E15B26943083CFD7B0DB40C47E347099
74784ABB5B24B6573B3F3E20CCA4F2DA3A567C5F2DA5C1B3077A4DC373ED8D462CBD31036D1A
45A61EF33E4120BF00B816A6E11EF5E8D92CBEADCCA93C35A46F3C2BF29A76AACADD4359D328
8FA4D50CA3B18687564E9F6AA92E24B8CE880E794ED254D0416806225C3D705298F5BDCA3B08
7B00E02B3F650927CCB2CC70628C2C1995EFD5471B7A2E074D65E07527824648FB49397739D5
49DC203A36DEEA4087D174CB8DE80A86D95DD097EC18FA5F5B46B341309348755BC11D281ABB
5F05E7989CBBC6CA86168CB794E82CCBB29410BEC68F0CDA748729553D3F4CACAE0C73471735
AFB7A279D13C2A55BD91260337C71BC4F95FD3CDB812CBFCF66542603DFE8E15FCD860B7D4E8
22DCC12AC4C662EC5F7B95BD0B8F9B0676E4A87DFE73FFA75DC03FA69D109DA3FAA5F23236BF
21D0E43AF41D4DE81409C03E7F60D6B60741C951474E295126241CF9923A851E60AAB36165C2
2AEEF0744A898173286689F4BF68F8C6056D93260BE37AE79D83EFDE31F3BDA46EB7D9D1F8A2
CA5A6B6C65EACA53DD625AEC471AA9D8B171E42CA2C815BBAFA1042A56DDA5970700BD64BC2C
9DCB9C54B0E5B0D6A1AD3D770A3ED7136E06F651B1EF628624A3347C2FE02947D22A8E0965E2
905FD32DF91B3D0D6E79725AA62F63F1737F87F12E42785661B2CB4D5C15AE6DEB82049171C7
DD8E233139678149A4E57C79D4019888F504D2D815399EC1E0AC02DF325BFCDDD1F2088F8666
8C3B776B579C8E01F78005B9EE888A1066C53E38038E81C4024E3F49A7391E4C026D2CDA3EF1
46B1746FF6148CE490D49973D78C080F740079E6D1B312B28675D082C6F2EA52A26FDC7AB2DC
124A1689B34528326A73F07F85835C65A3DDEB5E010439F28C6934D37432B1CB9C5177CAC63C
39088AADC5CA4F0EA95CA7EDDAEDF84E50C507AF7CA15E742BDC8EA5842C88E7E57F46254EC9
43AD2A4FC2F932AB954E7365F4C351F7DB3435E1B6E4B943030D8E4D9D4E6DE43E14A76A2307
30512705A48E2E502A0BF9A649151718CF6E91A2A668936597BB93471961F2453987170443BB
8AE7E1C6B2712AE465C742BDCCDE5196A55BFFB7E820F501D1B21AA50D9D071CC39714351533
9E7EEDC62B913F5B07B53B494DA42E06DD5572612164D333AD0FBD00D70DEECD4714BD8B1C5E
E30191596E94A475F669B174D917CB899B587743D9101458B789E97AA4778CF0F6FCFA1B7EBF
6F454E4AE912A9685BFE7527AD4064808A326CD684ED278A6B7B710FFFAC3D9FEE59F5A66289
0CB56472E3A882584477012594D7C0AB8814AB97FE68A61D4AECBE0A4B0588E06CB839415603
789BCB941555E0D7470CD9ABA93DA31B0DBAED80816EEEC8A34D12EA5B8EE95EB3C66F4E07A1
D409EB96E22224DB74C01CA2EED1EB0985ACAE003B980BDAA10CD7B07F8CADF5E967FD202728
E128ED8FC717CB9B352E4EDC67F934903EDA4185D8F650F43A7579A77E4D0E5D7A4739098D36
402B1D5B8786F82C1F1E0288274126D2DBA06CB803B055D6D63E641F462554755BB9B0CB6839
CCAB4E3100163CF3A8C83BA85B05D9BEC3D8D5078D5ACF552E502AEADC0EDA45C75C77C40337
82AB66E9D1E76BCC6A0DEF719E10536F73073984B320D76C8F37A58EE2C194E0299A0209DC23
76F23DB1E88AE7BE87B5AEE85FD2E92685D0C4E4528FFED2CE9760EC9E6754600A62CF6B14CA
027DDD8AC31F5B7E0815F3E5F6AD831186AE1C5B02CBB6AFE6E9EAB572171E86D9FA6997EBB0
7BAFADFF3A425F2BC7AF37DFE5EEEEC52C7D27C8ECF8D6445A4269F1E952F9145637A86DD5A0
BC0A529A6CEF1C0CF080AAD6D64332C602A59F791EE82ECBB475B82F36157A423B040E8040CA
4CFD8830E5756F92B84802450E44D5AE4BA759578CBA4742BD319550CB3513E2C0B4AB2D0401
AFBEAE94273E454D557823301FB80E9F250935A7F8190B6D9FD15800338F3EB7799786AA5725
325ACD5D01B2D317B461338A5C1FA380E0BC0C10DB08C89DF3C59C5C135951D3D5FA8848C9CB
240F9BF7C5386159780C092FB231E9BDC19D581D3BD3365662AB0A5ACE9FB20AD21EC0BF566F
5463B20034BCC4C4260B2CF2FE438A4A552B0CD3A6ADCD6AE767B67187C81CC2C7D01131C9FB
758CC2DCF329CC96E9EE943593378AB642D1BDA9AE365CC8A4BAFBFFFA8A5464EB3D4B6C4CCF
E4056945A2A4BC2EA6CB6868AB239B55AEA85CE08218197D7F5AB5FF6BEAAD68EEB3E09A5BAC
D4D40F7DA27335301F631D567BEB7833B327E6EA0520CCE262FCED078601A90555FD58788C5D
263E29310A5FD9C5C68762E3335996A7301F35AA1D302B4C4CC387C2DAE1D2AB2010795FBAF9
42BBFC6CAF22D6F62C50ECEF8E3E8CFE90CA0E831FBF8D18DE72EF2DCC8E7190A014E5C683F6
89F1C851D33A6A13D014424AAFDB5D58F4F20D8814C30FE886E3DF54DB48AC89C1BEB7C242F8
A443CE95B7D6F2AE419D663A36ED78994CDA5972410AEAFE23AD531FC2525D41DDC70BFB731E
E20793785A2C7E32A48C489626DE56E01BC69081497BA0944CB01F7969A1A432509ACD803B38
71BF0FD7C35EB0D4C1D223A6089EA5CF9D66282514909B0D6B53FBC19121C57B0488DF664468
49CF39FDB90E3AAA3B0DC649788CEB63E8ED9DBC23E0E15EFD4354580B802BC8F251A6517A72
20716972EC50CBB7649E6F943500E77410A768936D1F02A8E973C2324724B3820AEF63E269AA
F0211F7841F31004BC113310744F2E8F187F3AB8E1827AE0485B1F80994BC1331E5F9B9AF4DE
A238BB2CF767AF0A3B02626897B8E160B9AF3E2450DBDCE19CDC45B489C5096CB6A17A087D9F
4D5097FAF3D631B73B469EF9113F2F8C15467170B9838C88FBF8FE47B56BD608B18CEE0E9990
F88E22030FBF3DC09F57C308F7A0FA0329303E2A3560F3C8D6ECC7517F3BF4400528850C6636
F2D815FE04E73CC3FF3E0AD94EE8D5FF4A3BB88AF81B4B83142ED118E18A3678B297A357DCEB
AC141E9729DDD097218CF0CAF6B28B02F9426F4E4A86D3E748B3746B0A730502B04A1569E507
2E01C26424F5FDE3731C61F71B51E44DD2570C1B9020129BFDD96904B7F843C2506CFB1DCB8C
5F362425EFD20061277EDE6F7F587AB40ACD9D64FFEE4DCABE8E0DAC925EF636C6EE2DAFD640
B3C05CA8BA3E0A1F10B57B3E73241ACA7CBF0F888E1FBF1A7039C20D641BB183BD6C451F0B72
33ECCCD2C17C45BE5D880CABC11C763F5D97135F322D81F7560E51F0EB90EBF9122BAC1D5ADE
C39EA1FD8E7D6476B1980E4C2F8E06573D4825BD182F485F56A1E1189F14FAC45711FA1549C1
A5973FCD328F50E4D6563D5A1E869728397F6DAE520AB8C6A50759469EA5F8BC846D9E5D2CD1
F561B160792EB7BD1E9A34BB11318A91BEF506FD5108AD9EE611889F99E78DF01D0BB9FDF01D
010EF2A53D1518AEBE00A930B11DEAE4505BC2F7FE07C8323CA3F5B28459FF91195E611C9CFF
5D74761CCFD186420470A5E9F4F17823CE457C5E683112DEA7DA9A2FF466F630F199BF6E4BF3
3B32A3949F2C4316FC238CE6FB4C206D21E2A25AFE2E95AE04AAEAC6773420966CF448DB3E42
1F40ABABF86F3881CD9EEB6E95C7F5761114E27BF12D717AECA2B8F2C5C895D18028B26352F7
A51B7DDD9C4A44F82B270B453B4D1A7986AC1529301C091C38AB06C802E09AF4972C18CB7542
16F615A0BB81736D7177C8B8DE4E69503405A417F06AC56615243C3829CE43A4A463F22E939A
9FA40866F54056862A647F6452D2A4A2049B990FD72F97A2091201C6648ED968D3DCD86EA3A7
FD64FBB09E02EED37DA03DEDF95F9203DC98350479C4E0C8375547C2F40E04AD9394A0269287
FE92804810228945DD1B2DA7C0317C77772EC72A8959A746AFD5A76E3953A098B04DD9B25C9E
FF457846F4C0EE304A4FD5DFEDED3130DDFFEC042F2BFEA6C59CCA7C366C89CD96D6984D85BE
FE42BCDE78D5E2CA34EBD362E5755A6EDFE7EA9AA03BBDBDBC7F5DAE59CFD5ADB9780CBA062B
10DFDE111A2AC1AF1582527848E47F88E2D87B499D3BF14C56BAA1FCFA4E6AF8EAA7877397A3
AA6D8BEF55770FC45DC45A094049D144D809223DC4B4A98DEAD0A729AFAD4AC3C04EF2C8F70A
0E0187B0D69A4F972B64C345087F6B77C932131AEEA7C9844B7E51A30C314181428F4C613629
31A069A462168B82A54B010D15DA6C85DF863D18D101280A786CDAE1C7F67BA1FFF7E7073F01
63910BE47AC47FF1898949E393AECA6F3A5AACEF6173598BFB0F4DC56374CB5AF1EADA100712
4E92FF222581CCF8150B90B52078FB8E27E16268CC0B8A780CA46B530DD0E05BB465A0234154
A3151D9628ED99459C5AD24176B01BA55D9AEF48F090489E2D93FBD3B916F951C932E27DC61A
8112EC9943E4D0DB32E0F92FE775936C74E9E62A9D1A41FEC65E402F13402BF661119659EC3F
D84826018B4F4CC6FBB7A7385819F05E8B2FDFB3684F3905A849AEC9BDA45B7164374D00C28D
2BE519C9E253CEFC7DAB1807F90B58D4D6CE89E3AF72CA25B0C523895515658ED4E3E4A9AF0E
3C323405DE0ACC85D3642B002EB444CA69A38ED7EBFAE2EC1B2B043FF2ED130592973A81CC68
99E75440FE2706A9CB8D291E4D9EC29009E1351244BE34E09B0E085EAA647BD0861A1E9942B6
FC848E527DBAC887628AE3539994558676466554563D4C2E65C7CD5562613D1EDE0004F8D61F
FD8B06518A46D6A5C09BD4742D14618D95F3507923D323066688593486CD5140C1DE5509B5BC
C2A7B00F144B4049018006670FC4DE66935B6884DA39EF87B435D6DDD7A8894FBEA38B5ED717
8544A3D7D13598A43698CCC27B170A4F82A14A8B8909626C101972BC86E33959E97BFC366E2B
CACA0E43148BCAB457B26C6C7E6746A67126E1BAAC4D47FA29A3DCC4DC33CCF32D022375DA32
3EE7A17A5290E717C80D4AC06842943423B8FE749797FDF92A589969AC26B493B41170777061
775B613579C780D195030389CE8CC9D09F20A98B5DA20103A979575B6D5E3BC2F3E1E7AAC4A6
CC8F46FE871BB471758A9C27EEF4F15F6077FA9C8CDCADF6AC7A61C62D718121AE02595105E3
ED477405422CB32B20396CE3619684F725E44DFA47B48223BF4C60E4813A34DB00B0BE904E50
E5C91BC8C2269AAEA750334BC02CDDF2512CC6932AEC98EB3D5C92DE319AEFEE5ADB2076D7DA
6A7BFDBE12D31884B1C10E52591B16F8552CECF63C84F805D02AA162A6B51D0E7F1F5618E47F
279CE922F0648CD35B1E03827491190695096F93DE854246BAD576C518A4979EB30D2BABE688
958EB49410BA7A742CFFE71122125D07A9115C5F987F9302461774A7843C8B47D1451E8F2282
CE63033136A6C5459F728BE90EF0AD89ABDEE4955621A6BDAEB535B55E00BD699C42D4B20000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000

cleartomark
{restore}if


%%EndFont
%%BeginFont: CMR5
%!PS-AdobeFont-1.0: CMR5 003.002
%%Title: CMR5
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright:  (<http://www.ams.org>), with Reserved Font Name CMR5.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments

FontDirectory/CMR5 known{/CMR5 findfont dup/UniqueID known{dup
/UniqueID get 5000788 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR5 def
/FontBBox {-10 -250 1304 750 }readonly def
/UniqueID 5000788 def
/PaintType 0 def
/FontInfo 9 dict dup begin
 /version (003.002) readonly def
 /Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR5.) readonly def
 /FullName (CMR5) readonly def
 /FamilyName (Computer Modern) readonly def
 /Weight (Medium) readonly def
 /ItalicAngle 0 def
 /isFixedPitch false def
 /UnderlinePosition -100 def
 /UnderlineThickness 50 def
end readonly def
/Encoding 256 array
 0 1 255 { 1 index exch /.notdef put} for
dup 0 /Gamma put
dup 1 /Delta put
dup 2 /Theta put
dup 3 /Lambda put
dup 4 /Xi put
dup 5 /Pi put
dup 6 /Sigma put
dup 7 /Upsilon put
dup 8 /Phi put
dup 9 /Psi put
dup 10 /Omega put
dup 11 /arrowup put
dup 12 /arrowdown put
dup 13 /quotesingle put
dup 14 /exclamdown put
dup 15 /questiondown put
dup 16 /dotlessi put
dup 17 /dotlessj put
dup 18 /grave put
dup 19 /acute put
dup 20 /caron put
dup 21 /breve put
dup 22 /macron put
dup 23 /ring put
dup 24 /cedilla put
dup 25 /germandbls put
dup 26 /ae put
dup 27 /oe put
dup 28 /oslash put
dup 29 /AE put
dup 30 /OE put
dup 31 /Oslash put
dup 32 /suppress put
dup 33 /exclam put
dup 34 /quotedblright put
dup 35 /numbersign put
dup 36 /dollar put
dup 37 /percent put
dup 38 /ampersand put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /less put
dup 61 /equal put
dup 62 /greater put
dup 63 /question put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 94 /circumflex put
dup 95 /dotaccent put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
dup 124 /emdash put
dup 125 /hungarumlaut put
dup 126 /tilde put
dup 127 /dieresis put
dup 128 /suppress put
dup 160 /space put
dup 161 /Gamma put
dup 162 /Delta put
dup 163 /Theta put
dup 164 /Lambda put
dup 165 /Xi put
dup 166 /Pi put
dup 167 /Sigma put
dup 168 /Upsilon put
dup 169 /Phi put
dup 170 /Psi put
dup 171 /sfthyphen put
dup 172 /nbspace put
dup 173 /Omega put
dup 174 /arrowup put
dup 175 /arrowdown put
dup 176 /quotesingle put
dup 177 /exclamdown put
dup 178 /questiondown put
dup 179 /dotlessi put
dup 180 /dotlessj put
dup 181 /grave put
dup 182 /acute put
dup 183 /caron put
dup 184 /breve put
dup 185 /macron put
dup 186 /ring put
dup 187 /cedilla put
dup 188 /germandbls put
dup 189 /ae put
dup 190 /oe put
dup 191 /oslash put
dup 192 /AE put
dup 193 /OE put
dup 194 /Oslash put
dup 195 /suppress put
dup 196 /dieresis put
readonly def
currentdict end
currentfile eexec

D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA0E079529AF9C
82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA9351BBFB7CFC5F9152D1E5BB0A
D8D016C6CFA4EB41B3C51D091C2D5440E67CFD717C56816B03B901BF4A25A07175380E50A213
F877C44778B3C5AADBCC86D6E551E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206
742D1D082A12F0780FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC54
3273C01924195A181D03F5054A93B71E5065F8D92FE23794D2DAE26BF1F487876AD116184ABC
A7446A2352AB37C36E9C9BB67CEE105C612D36566FB459D6ACFB1DC37A59448A06EBA21F8824
266BDD0ACF9E356251A897A920C39F1AB236EE06C0398C4C0AE55FCED464E19AFAF548D454FC
F73F6087102630AEA03E622AF25968701353925801642BBDC11F09963F4ADF037671B73D48CD
9C209DB4D5BE7F4CB38194887E8365D25C45D1F87EFFAE360104ABD3235E4D2F4BA163408448
E814D49A3E7C171B8F1275D49937C3255326069007B302844EBF2BC1990DDFF1A34C2770A262
ACCE874DA1E00021A2E0638D08C2C7B48C44CA1BB2AE63697C682F5322163B508846991546B9
4B291339EDD0882C34ED0EA8764889C36432664F936C093F78288674290FC4AEC1C4091B2D95
C7055DF7637A703E0C81E446F64405679C32B922FBE9B159A0D351825D2E882740AD32B673B7
DD9E7FDEA4F81937AA7B8DD04C8021557F44580A92176A3C00F45A8B881232864DF1068FBDE9
C2F0E2EDB4914FA4AA9F35F7111E7B256EADE0EACDFF276F905C2802599D5991CDE49FE4B516
2BC1D7541678FA8351E6A220FCC496215ABEE14BEBBDFD37DFB9643A418A2EAAE140946752E0
A315207AEF85E5700675BE42857C7C62D366113B7098CDACF12DC9DBD4D1975FFCECC21F5207
425FBDF8A14FFBA0F43382406FAAF38C098422069C1C74061E12EE50EF8CF32E1B03C01783A0
F19423DC0CD6D52DDC1B292FCDE3CB1E50115A6C3AB1DE91893B946C091A3FF250A7C245F264
5EEABF049FFD31145862E4BCE1FDDFE5432E992563F2E844B1622880B3013EB9CACB1CF7D5C1
FD52972330B348B9BA40CD97139F2FF3D1CB3D4F8B049CCD0F6B68ACDF4E5CAA8BD270C11736
2525827CCD3745168EA00920515FD85D4C8EC818176A31B487F6A2CA5F1E542AAD7079DFA972
0B110E8AE32EEEF43B13075A5BAD9A2F0976C2BAEB873B8C5C0B2D0BD6DF83C8E7E2800A03F2
940D3246604F62BF5D453E8588D6834D7E4DF9EFCEF21988E67B79F5EAB2C00EC0335FBF5AB8
21C88024725FF83EE1708143489C69009FE16657E68D7994B977B90D7C788AB97E69443C94BE
DA4239C5DF9F21242ABFAE5EE2972079A3DA3BBA50401A2AFD7F27E17B1C1BF9C1F78BE8AB42
3CE63AC997A298207BD726227108875C00FF343FE3AB5624D1EA7CCC63C0883027B809012E23
666F46782967760EFB665C5072455284CDB7C487E9F1E69ACB9E151455161DFA55BD21E6A351
EF8E4C5EC585B5C08B28F60EE2B6E47E903594F8A9128F87652B18AA33A7164EFEACAD24E6E7
C29618D9C64B5491DD846FD612D3F08EABB4A5ADC49248CD0B40DB5FEBC4DD8018909FEDDCE3
49F07019015ED89BD0935FE20A217B51B8ABD37EE122AAD4E281BC77A94F964189072A2C69E3
6264DF36F19633D6A51DFB7642BCC7CA0E770696F2DF0AD634CA0881EF812190858860D56012
0C11B287F9B3327016827FD254E10CA043F403255DB0EB8D42176AB5D24A0221DF534D8D6F27
5A5A978CDF967C726AFB9D51052ACBF964D8277F86EFB4E18E62DD5687E60B53B78580D3E866
8B360E6CC38469493E739E46403C825C60262CDC07D96DDDCC2E9C83EA858AE2BA954F5CE3EE
7B2E7F8C4E9D0369FBAE54F3FF2479173E513BD9F937E96032C889FECF01ADD890846911AD9F
5A5D695BFD70CEB309F5730FD5064EC2804A38FAC3BEFC94373233B7F0DF8E2818433E8543C6
7EAB1AF1E42F0CCD2ECD7AAC3FFB2A97FDE74D040CD79127B5603662C7FE3D6C12887281487A
D1DA96CE2A7AF590077351626B200BBF3DC951A6E026AB47147211AC0A0F933DC679619324A4
B8C108F5F554049AAE7C08218DE26A4EF77923E1473C687E913D9F1F6C2E90C3F9CB96D95A67
4CA5960FAD304C5F42B63BC3158335F6D0A605135C7607CA2A2A924796EFBEEB50E484303118
EF119B7D680143399C82113B6B62DF0F8FACA575A1BBC80BD412753BE04EEEEEBA74B2D516B1
4A725835E41063E767712AA45F92684831253E0C9AC02DC1123F10D933943EE7863FBE50D0C4
C5D0E03256C34C96FB35D47D98117F3B88AA0B135C05C39B5C260A30AB58F9A96B579163E00F
9EA908818387BF2DE60A4BF02009270B809368F45A932A5F9DA3F239CE0FEF28F1EB0C784925
EC9AA50C795027B76D900149EBBD6220E2F6FAB9DFF31C108955C67EB935C7B6CB8A349F9D1F
1EAD64CC0138FB208FCF999AB3A60F6E8C47B0C55854989F3AC9246A1F417F49EF96BC8CE21C
12F1DEE9FFE9AE1677C1439337D4F8394C7DFF5AA3A811D40692CF4CBFEA54B399D6D65A6CAA
B530260F6BC17ED179ED11C1B7E0CE73D338006282600BEDCBAA83079498AE258841A0C8989D
BFF21C1D31F5CEF48C0FC4119727AD39D692FC4996F88D6C7A4C43FE9994956F767B94F45F5B
9AD25DFE0AD0DBC070CC1501550ED44D34EF63638305888F25F2832DEDF2CCA2128E16923FFD
F8D4C30DE48EC50D5DA2B28444E182D7DBD7793DD2D08E182F07D76DAA6F26E669FE5A5E583B
A0CE2FC92E9ADFE47C93D5789CB5FD9A143AF71B9A65F9FB1695DC5D42CDE9C1EB41276979A1
6F2B70443942BD0C0FB94DEFE3C82BE6C0BB9FE0E00129061E8BA962F58C04B518907ED93991
2998F45AD9A0B3C0831647CECB89FD9F28108E354948B4738C24D2E6E314F752B2FB3BD4AE37
3ECC2C7B37EB0F90568410DA7ACDBA586611789BB3D500F7CE8EA9AB0AF1A47AADCFD30805B7
034835DCFCD9DC44E27EE756F56F5415E7B7538E966F8233CC97A4D1CEDDA4647F760F8EA47E
F54684AFCDA5CBA6A162009D628BA9CB0CA73EAFCE3E77996A6E385DC998D993331842EAEAF3
C2561187DBCC02AD4307408170406255F9C7D0BB5723E94670D782FB999228B5EA232B87D377
C00B5DFB0C0D8F5236884BB37FF1E6C796B63A9F04870DD4F77107247D3A162A78AA0357F995
3DE741A762ACE8302CB3C78E5566B710C73B597BCEBC26E98D32545286ECC6744820B76E4AD3
4B54A1669DBD3EA7E5A4D1D456786BB04827C990431338446107BECBAFBA193650FF00575273
39C29A51DD0D88649FC697E589EDB3BBFA78D62A266C83AFA0FDAF2879E5486E78A7FD4A7E87
6A3F440C1D001A773B351BA1A94B832F222EE65BFEAFC123FE55D5AF04F8BEFF0BB08BCC1AA4
C9DB53EF5F2B400C64EA2FAA0E9CB25F58CFC5273EE3BAB3356B2187624E6FEA12411F082F84
2D75F854633B972CE70546806E6F4D2291AF47FA06E239606C03988D3725C3A780C3DBCE8A03
99F4851DA5FA8D71AE88D975840096821522321AB43FB55884FC4E16A90720EEF4BE4A77A5D2
7E828013D5470F50FD68E109C418C805102714E419B6F1563EF8E1A8E8BDC59FF69D21DFAB9D
0442EB6E3AC8B03C107BC9B2F037D895ADC7877AEFFF3B83056A55CD7270CF83509A52E114FA
351B43D513FEACE3A028575995DA5CBC96136640898C8CE3017E63F5841BF6E2D042AA9ED131
6F5FC3AE92AF04D626EF040E81D9FEB8F2CDD4805C1AB8D3962F513E04663125A9D71320D691
8B1D632DAFB8CB5F584833C4A53E24BB3B173C9A9EBA0BC248118A48F8C22F3FA6A33970828D
B927489DF2BE7E7D55EB12D32BAA6DC828E2ED05F7EEDA472F4025B71B3D39C2156598D8DFEE
F5918B461ED60472A54BAE679BD1141116040D90B14EAFE27C8A6614EE3681185ED77165B625
B0FB731B0EB733ED4902B58A984E7B8176FE63C8A803E5754299604A382A1252BC3FE16C672B
F4E61CAAD1A7B62F0AA08094F50404E43A86A99AE060EBFC063B3137DE74CDAC7C90DDBFA90F
6B93BDD8BC997066DB9DEED274D41F2421A66B65638FBEA46004BA5719A2E2DC7182A2BF0B06
B41641CE1F3A001D15EFDD5D7D821C17AFC8EF5B68081C52DEB30ED20A855C9810A25DF333F6
196DF482297E593A7D37C347892EC03A7928C7F572009B7643F3C6C8AD34D9671BF63C0FB7A4
0DB427303C6EDDFD60CE6FAD9F175EF53B2A648046FF232B971C19AB6898006511F30C1AA6C5
AF4B1FEE106540F26C220C67FD3FC505FD01A2A8D6BFD3C4D9C99E930AFCEB148D2FAD8F0464
93B1937C692216483C0A0178712A71491B267C1D322C9CC85B39CCBAC278050F0ED76E4D1D55
DD0390984571AFFBE96B5758D990A9E7BC93DA40A69A6F1C84E9B01D55EA1B9D98EB8EF45EDE
FF096F57001810CAB146A87E8F916F1B0AB8E29DC0740BA408D3FC66CA6E608C7022BB84CDEF
47713EBDD950C28DD08DEE3E84542988D0AE74FE7B24B384DAB159FB6221D9495B818EBBE521
AC6F72631863D95635FA333978A71EC7C6AAADC1C4F2AB8D40F75D8DB8EE3483ACA96EA9B0ED
257559FBB0B79BE9C9DEF007E613A44D9279F252857AE57FBEC39B72FDEE244A8A7F9EDECB56
24FC4CB8113E6EF92DFBE6FE37501CA18EC0CF189DEC8F64DEDBC722AFE96F2CE5CC16AC6092
5816073D1407BA934E3CF9921F397053C7A3ACCE3E1BED145BF3CB678111297F6126222056DE
2386CC0029F9D0E07BA18B69DCB284FCCC2405EE88E6C473FFFC69C172E2A56011C131BF6CE6
7FBDCF3667A1716A54B49445FD4466F84F5DDFD87C9929924DEEE7B9CE23C3F290A4FF0BC76D
95AEDD46A23C7AC8B77DD1E407C2C2F9E1EED7605077AB926AB4FB885A7DE11EE3A6027D8DDD
C1FB3538809CEE1AC85A291320DE6B410835833A1EF9195E095AE7D5587AEA4A92086859B586
C5A7DB0578AE0C2D5796CB6BE032EDC7EABFC29BE03B49BD75359F790492CC3F2210E9A97705
E58F60FEF5DC1A22D735B99239B5FD857C68679CEDEDE878908D8BC9EFB28B6928CF4FC1B3F5
DF2774961B934CD7DFC8A6266A3B704A4B34B5A49F547EA079C1BDE49B6BA22D4B23B8018ED6
B52D1FFB082FF7DCA98380675E5DA4E622F4E2F1AABF7B86A1E98836507AD0494EED565DE1F8
53FEE08407618A8A91E745AA105E2A53D1812C8682D2D7829576E7B8FD177FCEBBEE01019CC8
B1A38924C3F0326F28B3CD50431E4CCB0D7D24B0F6E38685A5E08A882401C41EF8AAF5F2E67B
9F56041EB8AD5B3989621112CD081EC96D56780C9B409D18060C26AC6BBABE47929A685FC42E
282B1422E89312AD8821A9E8DCC6CAA267356E257D1A792E567D5B9AE9E32041C1DAE246D307
9B38F750FEFAE84EDE8B3300C4E42DC66C435C678C2835E2C65634FDCAE2F2D5FA3C193030EE
A5A57309EEDB36647ED06000F31307DFC04F82DA5E1B7A5C22783EB18F39BCE972680CEB912C
14CCAB78212FB1AC15296266B81F7736E92C32643A854F063172F1F8E1B042F8C5CEDB29C3A1
2BA00A4FDBB1958725F4781A00525BC7E6BA2CF7156F7AB6E6CF319BDEFD2DA06A8D396268B2
43DD5BD178F5BAA19B561D1DCC073D4213D64A7DD2BD4ECAF67C8702BE8A523999AC6EAEA01E
8DBE66F28B842A6DEB5366438DB53E642CC4F9E7EE7FDD5F4F3A99BF0E606D38EE091DB4800F
6F4D02282CF6FC46BB7CCEA823AB3BF6637E1A1CB15113815AB64BF5C496B446C0F3B0BF9FF0
D5A021ECBDA12B90343935A1F874B91FC18EC00131E77769A109B9FF2363C924590035F59A77
D8421167A9EA77B289DE21CDC4ED41C844BA7B805B9FFB3B0EE0F8ACDFCF2BBAF1C7F849CD80
0AF2041D01E4D78491418FFFE57F2C6A8E67521518BDDCCB75CBA17529C588AA88B230325D1F
3838BA1DBCA4886700D7CB029F0101743408F92DE6A7A2D8D2717A51B4CF4E7C192C03385F37
6C494A4615D909C234126915434D774F1B1877C0B954736EF66DD3ED8A37612D686569530C38
C558139D3714557E2850C5019AFE316BE55F4ABA054C7312EE987B39B1BE88DD29876A76FBB7
EB50670F7E92BFC4D66313A7726A13268FBA8C65725B6528C147F4B68B884D775EB346E43790
E5D1CE5883EEE7B2C153F967C765E5251FFA97E5EA1A46BFC83064DFCBAED53BDE454E5FD55C
F18D209818F965819967A2C0F55FC75B41C1091FB885894CFFCBD5D8A2B3B44730226677DC1A
A5228B7B1D9DF467C5C9CAF044A859F8B3DFB0A4738A380E01F57942C549A13955436695A7AC
60C195EB90B58AAD5C4CB6DC7604FA31F4CCAD888163D4AFE234FB5B5901D411F97714712055
5352C20D8474A28148C5AD23F6EB8D600854D76E50B8A11D02E37A0750083C2B5C3E936807E6
31D06CE9CF621E4795C8762F9D30F396165F37DF5B6CB27DAE5E498F6B650471D0A48D5D9B6F
96C5829754C89F0822F71B705110D8B6B92CBC3CF8E7288B7ACDD80DE6F3950966BF9D316C03
D8F5457874ED82FD9CF7EE0CD0425FABBAA79BB6F962D132DB2CB5A297582A75F3C61899B3C9
A00048EA2E8CA75BEE0DBB658D2A76A1539D7D8269150E145A11D0D9415777C781530FB9C766
3D995AEBAB6DE69735B10C6A27F2781737A5CF5D2CBD4358A67EA401CCBF66C7B55BC5665312
2B747DA0CEE068A72FEAF4D7F2EE2DB90250F82F1E866745BD6525941118C6A115B844D12850
37671424B3660B5489F5B18A4ADEB823A5FE140ECA5D8975F9DE7E403FDAB642AC41E9631E66
C0006950BDE81E1F2F231CFC9D5B9EC47020E15DA99663699DE7754A03E61F09FCC78E4D371B
D443A8A53114072DB9FEB1F7FB3B792D9C1E3D39D85C8B082825C71328B94D84D4E36DC35604
AE05EB976CC333736DBEB700323E1C99A784CCF520EEE9555539F21D1010254614154E2650BE
6D994A09AB5A43D714DAD5F34C36FF4424C71C179F1C8A7CC756C0CC96F98757183AB3049725
74EB9DBCD9DD5D9C1FA8EDC90ED0D2B0B1FF3E9BE33166241811F807453D3FE83898DB60FD87
37698CEDBA2C8F3168DD45162F8B220E25210E566C3017B2E3412A81EAAC6CF39426FD76CA31
21E781983711D047A884E9216E927D904A2D9C7ADE4BC1A9725FDAE941FDD53C1F17B55123AE
D7EAFDAF6141327D6C8A67BAFFCE75D762789CC15BAA477EFF015541E313421F5CE04A3DF7BC
CEC952BA69D7BC142067D8AF9D6D030805CA40C8E50E806EC4308B7238108291E6F483D9AB9B
A2D32393E443C7E4F09FA561D17A81F22377C0A6ECAAF0FD101979E8B1A721381CD60771D8A7
E04DB961F60AFD68CD280675C1B310B0EF5288B34A306D124D8AD8FB395760D7D974137E6DDB
0853B98030DA48B232066F4326C8CFB81FA77329B4474EEA59C550753FA6C4B91387FFC0FFB2
99222F7BCBE70B41DEBB674E1BA52A6FE541BFABB4AFC3FEA12B5F6ECBC280A0DCC50E7A80E1
9F8F28548C96814189DDA6F56DC4D255BEF55CED9A64541B3460839F340041950511C57BF335
0A35466CB21DF5957B44CAED708FA1768781242F9A9BB356C5E871A5FB025285B1CCCD4B937C
63E7470482AA236A31F7ED500470A17523EF10E16C2810061E482500FE52218746DE0B59E6E1
1543E53BD00CE9BE1EE5F7B1EF4F50A3316F91573A3998B8EA16D3357985B725023D47FE48C8
B68E35F7C92118DF7B87C7D28279617771E4D20A0D050DB0D517E695ED958F7FB98C4E8E6BED
8CF536C312090C521433A0EFDBEE69DD7BF92E9A0949019235A23CA834A3F170A5FD7DC16BAF
CD3B9F74A6B21D04D3B8CB4144D65D16E12D578BE458CEE22BAD05261EBF1C64CCEF0B4600A6
0BF565987159433410D258A3016BF7A0D971D1594AC915B467EF3D699CB68330A5E5835B0DD4
BA1C6A538AB48C7CF874F7614562322EDB6B87A370504F00A199D5825CB5DB62EFB77A4DB52F
FF3511991F1714CD4537F864E99A8A989C16915E134AC73C7BE9D665DD79FDB53847C25EEB9F
F25C316D3874EF480622F5D6FAA5A61950143B9FE1D8CFA559C9391253EF61114976F07DFE05
5E807F684941E191C7EF3B511728A5EC5FFFE4A314C365C42793B52B6C65508434AD05DFE57B
C74E0501D20C6ACA5133FD194750C30CD1A96A3131E15A7C504CF38327EBE4A4D71078F63CCC
EB147369BC802AC4C4FB3950B212C37979794FCE652FA38CDFCDB3156401AA0F045331EF0C76
45E73FB110AAC674C22DD333EDCD976F48832B508B94625903B316F1C5BFB6D1C1A1B64FF665
1C8064D9033EA065C44DF0E54324AA45A41C5B8F6B4FFF4D4D861FFA955573EB7179D999E8A9
0EAD740A50991B18E0EDDA172586E85337890ACF32FFBFD9E8DC3A12D5A1C71172A8B2C70458
4AAB5FFEDED1992874D51E47B635991116D6F2696FF7F7EB9B7777F27E45171B695648C5C52B
1AEB65AC9389D561B469BE5C06478FA7356BA4EF81277BECA960F5108F4D81379382F3D48679
52726A878008ED69589587A48B075271CEEDDE82ECEAE1721C799A1D1256B0C71F39D4B212F5
0B094DD0C66338E42970A9E6CB6F53710AB2E9262EA54BDA54DCA8E3C5A91F9D321F3C6EC5AD
0B89E277F52CBF744DC096FB6B2CE56588D1C055CD8C44CB7F67B4E66A56F7066EF0AFB220FE
1F5B4B3CF129B45BE307232F92F3921032518F0F79A7D89859742E40A0AA55F4575419B5DF45
32646D559E715697C9AE0252AABE01EABD4B76CA8870194167FBE4A28EAFA97A587301BAAEDC
56945D411176AD85A5FE81982744E6F1E94AEEC93B11C343D336E1E328ED3E3E62C52D9B8329
E91644DB1EA96DA11CA78CA9E1CB491AD747F60E3FA50D475205B50FFE41E073BE45C88A7775
F5E318270B633F38B4E695917E8381D74F1E4A6987556E82969337AC0CCC210CB0FAE62C8BC7
2845D72882ECF01C2BEB597FD3993F9AF066FC0585B071CF0454074929222F6EB9ECD0F188EE
A24F4E69ED04990757B819E97A02E63F8B303EAFE9D892C3ADEF1043D5DEF30F9123139E848D
7C1D9A9F4005743104D87B0305F5E9D107146FAF0D3518275EBE21E6D9ABA0987C5A225BF68A
32594A171F5DBA9213A1B191EE63E416CA1FFCE18639822DA7192BFB410291087B61DA7055E3
6C5E21314D989FBA9762226EA338823106B045F84BCF430E303F6BCDA3240CBD3D64642DD11D
BE9B4C0C0FE29E6DD2D62D396AFEEDBF8936C41C97BD040D6732141AA6CAF0FEEF2FAF879D09
E3F72ED0B12B37B971B1C2983CD1DA428A9039E736A722809FA7294E9A32A4DDE6C1F7F71037
E98361CC4719A654BAF9952A32526A7561EECB77376376F32368526846D687D107F43C30A8A7
460A77277B8DC8FD92F739F15F01FE3C1C0E89BAE30C094B3A5EEA55CE4C5273387C8A5ECC3D
CD9A061E296401A1A706319FC789BC12F8021F4B50300258B5172623046E47BB515C18C0F1E9
AC2F142301A107D92CDC69BC7F9BE65F5BB161540F2B371823840FFE0F6DB136C5CF8F8BC15B
D881314AF7DD1286704296419D91D7204450B52E98F5EA8EFB9690CBC047268E47BE7D3C743A
014D8624AA1AA91D81C6D92EB99128771C3CD45B703E08FFC3EDE4DB64FC188CFCDF579DACEF
8C2D02806B72FD8E7E34ABC838E23EFC09C47A62FC90F93FB3A9439D9A69D86504D8DBCDFCA1
940AABAD08C1B1B2BFADB3563F00EDDD99DB53EFC757B6B63BF35C3A1F424BD16F1C8FBA1C5B
0D784EC83FB33122C8E268AA2BDD799B2DC6C9DA3AE9507719900C9DA8CA238100EDA8CAE604
5CC12A0A6D5748677E4060E093AB056191B942D73B9C47E58A0E5014E9120857E169772268FA
25DFADFB7CB010ECBB3549AA1FE1211BA36534A61D41567D139548AE15BA4D318C6E0B916573
53E86831D4F694E4F1E8FEDC02966775B9555215B7F5506D60C82BFCA387F5AF9CC73BEEBCC1
8EDD272DE62E3732AE102FDE34DF3F222E2BACF1E11EE9BBCAA579A85F4F8594EE7A476A8846
FFE58F64D6B888F8B73154CB904D560BBE1746BC9CE4D7BF40D8D021A53C519BE5012E0D85BF
CA5047E56F2A50141DFD367B4F167A184F46C06AF01FF1D4789F9DA7AAA4F0F88AF3730D42AE
9BD7D001B8DECF3AE616D4F7F03AA3E585144150160D903CB666472B21D686BCF5B17AFF4B9A
A6B01AF2BC2C5741B8B5CD97A8FB621A4B306558BFF1FDBBBD61665E9849FCD61ADA522EE353
836C9A2D3D8AA402E20F368E5F723F46121C439FCEEE392F9ED5F8BDB82BDAB2BFC9F40B774B
06BA68B25E864CE0D11899C62DC6D4DC5F3135B57C878BEC71F35FBF8467ABAAC19B8030797B
8449C8C945587695FC0C142DDB52C673FB5C387925B118A5B8F0920B5206A576489E8640F97B
6E66D0A2B26D9BD8E4317437F65C4D8A8EBFB2C83C0184109C4C66C6945A952B9D1E1B691BFA
0DAEF5007E716039E8206C6547DC9417A14D15BE78104715DC395DCC260F4B140472E56C0116
BD185910CB61ECF05ACC78864B2DB66D961047758A7A9B23897513ADCA46A5499E0B239DCB23
2DA1BC12B5FEFBF1396BBD2E828A8232ECDA1070C1988460229135E56630162A77305BB771DB
269B1C131D256B59C4442EE82F8892357ADC38E56D613B3F57C092C3354536211EFDB516950E
8EEE1A285E9A71F9447FB0183D86556CF5F95F9608810AC3933A23D4AB8CCEA252BBBD8CFDBB
D5A00715462CFF2B5DAA1958A7156BA8E4BDA4082306E9A0C5E8F1454D6A4724A314E55E88B0
E4E61775C5BE7150B26A67325F89CC43B8AE8F63425E10369EEE53B79486CCB2FBB6C755EF1E
DFC2E7039B457B7CD3249AE0C8737316341456768CDC2BBBE326D9959C45EAEA0D706B0B320D
F49FF6261558B2DB9CC40AFC43940CAD193B88454FA02AD964629B85EDA797981A614859347A
F4AA455EE7FC1E70A383C96C9B260601E70F139B2C0A49D9F869A79D54CF4115AF8321F62594
2158B1EE56FE09FFA03EA38241BFBD20D345A23E8CA151E93D0DA07EF629AA0482126817A20A
7A0740CBF33E3F772C0C698595E53F63AB76E185F4BF7D7A8DA0B56CAC36CACF47639F4644BF
1FDEC984F711828B7A8AE7E11ED7459EDB9B9A4A7892520AF38DA7229860B79000FFC80493BB
5BA268A298E67F0C6A6F4C60ABB9F4E643DEDCF021B593F414A2D64032340248D95215B02E6E
BDCD75F2526115948C15AC6FC6EF52DA99AEDE0B013732D3E4F71138A377393BEEC5B924CAEA
5B99F83107283721C62B8859C0182472B9172451223809A7F43AAEA0F8D45B6F4089BD8C9D50
03E63A76A894666DD0B07B7D606C7BBE13F1B5F9D013EE5E32F1E55AF3E9C462A5CC142DED32
1951CAE245150102B5B3DFF5B4649BD9DF955B7A7DC03981A57D4CAA3B267F0798036AAD4DB5
09D3F18A76C92982A743D5F0CB635359BB14EF0E6B7E30E392F865BD2A06F2E1285B27AD2FF8
988A220006DAF2DB851CEEC0237CAD93CE0DA0E93233DC3911F77865D8C1AD602BBF5D18969F
9E6D5811A66B72433077704C0F8D2E5A36A25B232E43BC37FAC24391B5730AF441EC919F77F8
DECB069C57B0C207CF5D9F219D3080595D481B19BD8076BC1AFFBB244B6F1BD610EB7476A1A0
3EF84A3549310C0148EEA65B73AB5F9AA8EDC8A617887A77C638545C251AAE398BC44E3BB9B5
9E35ECF727EF1AFC79185E6BCA0BA925EFF382C2A7F84922A8CD0F340FF5806197C196A3FA4E
638A4B70C21BDC5B76E4A277D956F4BA1CBD92CAEE46B026F0CB12AE95F59AB8D855FBD80ABE
AC2118D3BBDD6F3F8EA16568CF529CE61D945778A8877A16C146624A3324D45874B3E249243A
A8C1593114B7D4B78034D28E427CBDDA2F27EF6F7502DFB729300708BD3239B47DECBAAF695A
AAD3BD9BBFF379A958D0174CB594ED92A3DF45EC690DD4F59980E9CA44DDE7CD999CCB089F9E
4BC79B2FC5166A5D6CAF7B83E57298C38EEC32CA6071D97E938879766B6F58388786EFB4576E
309BE1892F8DBEC7205C7DAF44CA941A11F6AD94A3A0C52EE298D68BF72538CB3F5F11BB09AA
6F606EF724516F5E4537E24A350B1D64AC31C545859F01E21DC66527B13AC57E7ECE58ACD377
D6B7B54A7403CACAABF2A4470137468A4D4D6C6868ACAC3B10A171F7C769D12F4DBBE47F8A8E
67C7EA92E47BEA0550F70E2707E50CE087B87AEA6119B81FF52432B8E302AADB7F0C1FC2C8C5
82E13D3963B7694F1F9FD852325E2431DC4618F9C069C18534FF9FFC9B30CAB5F2873830F84B
517CB3474472B6A8F64076069A54A1C8659D7590E1D69E40FD68B76D756772DEA8EC1D379163
98FB70B1AE882772F780AEDDB8C7C3BB1A66ABF0EFB0EFBAD93160385C628699C199A8BF060C
B38A8D15F509D856862DF8AE69FDDFC869A441BF07DE74875CFEAB1833BA9FF3C675CAE1D5D7
1FD39FFCA0B44A703789B19925FD7395F8D0FAA6A668B2585A3D87AFE1FC82195AA42D79948A
2038F38184D283866B10D7AA03D8480E4D13643364FA996E924EB8AA79AE3243298F6B7EFA98
C41E4E75632CDF1B2ED61A80DAA19E3F31DF05CA312AC9B1F177305AF0D519E5741C58C04556
6D04832DC346D7CB0FD75903EC2F5D49A35B7705A68AC8D2627E4E5AF8C30F0A8E1FC4A87D42
C27B40157950E851949CD4799563EBC0DB5FF5CB13D0CAA298F9C80430E1676CFC609EC76FB6
2851ACD8DE7E01E4B8891FE915B49E18B64E6CB825EDD536E2F37153E530830BFB5ACE74516B
D7A104CB5E0A35B8A6C33825785026FE57C8F8B3A55265A0EB3433556F1819C704F61C45C6A4
823E707494D38171E362F2961574C9739AC5C881CA1D16865F3C7ACFF667C0DEBA5474FA621A
E0453141176A7692EAEDEEBE1BCEC47E4F2FDA287CD54C36BA557D622E12AE61797E86542E15
D958456F220CBA8B25F8957ECAD0657994F41B10DEC9C983D4FBB02DCC081619E025CC27D292
4E7F11B74299E1024D1FEBA0491CD3D297F5FB71DB2989CF15330B9ABFDA1218DD625B13DB9A
55A51373B6F36FB396BEF67315069C3670D5B5AB70A1B5D66E54C3BAF6C7582217948CB6A0CF
56A27FA03F30284F04A56114BE8A1D81810CC6111F6749D099199C387A3176866EFB459F9F8A
6E4A3EA479EC66BDD1DB605CDFE8664EEF0E5B9AA0662E71CF54E380AFF620A9ABD268B61BD0
5E6001247116C57A9CB73DD4EB3E437DA8C01D173053F7442FE4D0DC05F98F51E80BB588D630
F35F4365B3F0E3AFF6A1AB5979B719C0C1456E22C49A34045A5CDB81E8863090CD294BBBF4C7
4496E037D73736F5824BD7EEE618456BE93B82353EC08E894091969215364C802007EE00F8C7
DFF107A951DD1F851390F5533CBC42406C334F8A7D406FC07C39CE6E1D3BC3ED8059C43D8A01
308FFBD3BF44B1FAED07F1C0F9FEE1A3F8E9D2684FF010A32C9466DFFAB5447E3829C5B80D73
276BFFEA02211A45CCFBB34F0F6A4C613D0303D1E59075C678CAC1DACA015BE12D51416C0B74
9D6F0B10BCD386D19E8E17848E202406ECCD38E414D54AD4BFEAA6B0B50EF7A83F94599090F0
98314D5C3145705E20B3CA029F994C5F38B3242DCB23AE3810402E91207943A4BC12CF80BA0E
95E504247E2B5AF8FA4ACE8FD5A7213BFA7C9B253402845826835080FD2AC78D340BA5EE7269
8E8A11DBA5CEDDDC37A3E00D519AB7565F9B042B4780B8459E209F2578EEEFA75FBC3A5EA201
71C46BB0E2152369F63EA36A3FCE372B78B19BCB2850E921AB5D9DA99D9EAF0C8C4513B33EA0
0BAE0022D8202D184DACEF5CF81050C127BA0E751618F45C3A8C41271C6E9A41957A074CA7B2
80CCB27D620F75111CAAC42712A0294A5C9AD7439AC02000DEF0A1D895008819F83E7209FBF2
5B6957EE791D8A82608700D29AC24CD58DA3E99EC706EC34827FF92496D3091228FB09AFC0A1
C042732B6AE08A3420BAAB92C4A80CE9AAE79F06AD8BAD789B0CE591F4631B14B2E5A935A303
2FC96A47FEDC8B0B95A41D7E36D4695E0D661B4877388F0B8E18BFCE223F52D8A924E431A067
A31F1F9C124568E5213E2909628B8D112FF8CCCD8C4435B937B4FDC5A71DE71B23652617E7FC
4063329AA908643FE5EE4BF9AC17020089E48087E5B171EADA18B0E9035F90F9923D1CF4E54A
70AF161BFD602D03D0596F9752DFC39DF843EA9FFC62C7F1B86EFC98C1EB2D2815087B0DDC5B
D6E789FA612F6E34B58C478913D58C7EC5D3B30BA408972623848C19F0F3A7687895B7A21B5B
B90B4D6562B5091981B21B837FD736BEB65D698F452B7BBF72C32FFFB6F9D44B1DE1DAF31CC2
7C8713A22DB917B162039BA7C5962CC40FA1722AD01B55D4B1BD95C0B5D8EBA9FA132093EDA4
0E9C12C1464A8B6625F112EE6DF41372CB30A3162E87C71B14516958E3B3DC4FD8DBED51A997
29982E72CAC4DB83EB435972C69203E7EE16A872D820E86C4051B819AC1FF0D6174666AED94F
324B4803FE56B7EADBFEBB67DBE3E03096DDA340403CE602751E80A68F1423C7479DB65C540E
C8D8EFAAE444DEF43FFA10B03226FF8FC14D0B094A363AEBC41CE5555918EE36EB43C72816D9
6E1761F524F6D526FB306A3C35B711A23728B36AD92F8F24DC896E75954EB0E0E35E955825C5
0A24871C615BE26D414E0A49EA438B7D0A2D020559F3DD4170B705315D5B98F3A36685C4390D
D4D1B54534988EF3B7F6A7C72936933F8E4586D1350EA756FB601E34E85D339E21AC0AE80F5C
38D7D7B6F9A9D731958F0F018DBFD5A099EAC7AB30962AB2639ADD71EBAED30BA27C929DEFCF
01038347CC863BD100741E939CF2E734F34696F12DD49D0D8AD851A6188FE4B42E238526FB22
EDBED947643CD3D2E6B6253325574FDFF7F9C4BE4D2A642A93B24D16A64AC23E936445F1CAAA
467227D9DF562B48EC8E9084E34BE236D098E7606B23C603CEEE3829D7ADBF47FA1488BC9CAB
9BE01B33D4245E6BB4FB4A215E1235187B3BD57805C9E73874ADB750A75F1EAC135B7B390535
A4CBD93FD555554926B5ACCF6B1E9F971314D7475C2C1B28A148FCAF2E6F8FB86C36B41129F3
B9A5F7EFF1D74D018685333C0BF62E9412623F43BCDD758FA11AB488A654CD347D4CDCB54DC9
A68E0208EE3B287F753B775565506F77DD0EE5E56361CD27FF9E24E288B2654B16C500B80C44
37CB74526FC3254D6EA1839F4DD5170EC065C54AF37034831FE78193EE50C5289E296FF63DA2
D6FD2555C0396CE48AFE2BCD262DA55D4F75F35449C0D522B855B5D5A0ED94D35E409EA7F2AA
D5C962BFC7FFF1C4AE212EBB593EC515DBB0E43E3C434B998113615BEDFF9B6568E18017EF55
6F3C2C260CB7EF16E2E9C5BDC29D689173C084D781DE710A18D9EE13910E461966DF57EEEE3B
96CC80C07FDEE6CCB9FC1D360F47994FE95C90A3D20BD1090A8B5014769D53131E933781AE0E
FA245F284EE0E5610E687ACC10F13650B29EF0D4B975F602C44D9E35DD963EB1AFD6F14F0CF3
2B101FBB018B06889D1F519B2A50F1F0BF655DDE776D4075F35F42FE17035EB2AFC381D4B890
6A737F2BB8E2EED84F0926303FAECC288F0F7A7848133AFB84B2BDE7616CF6F999448C70B039
BC8910D885B30FEB7824AF997AFF7862D885C507F9307C53084ECD1FE7865CE1168730A248E1
58C1D01CA1B964E4491E9E7987F2F015DBC8E214C8E436619CEDA77A5F85574D7A19428A1056
6B562C960D5854257115C10E11D7E11F829CC621B33C9A53E661AD1B266748EC3DDEA19B4B36
7536B3A7E81506AE00AC3369395D1596720DF6E485D435CBD0073BCA0CD61D64CD7396A9A55B
9717932D3083B662936F047FF50364A61C74C2D377D4023C3E39CD3E9BB1DFA14FB888508DA9
1DFCE3F5B84ACF3F9761B812B1F6448EBFB5B3B79B1B766438767D6B3DC0D64413DC26FB3B23
5679E5E8B0F50E04CBAB07C041A0E29BAC570372ABB54F53A20FF4CF8232B17254A327380799
B5820121B55E521AD30490D3AF0926D2EFC7CACD2E9BC6FE0DDBD85844DDC0A59B2FA6EED077
9DCDDE30EC8B4DD2BBE50036DE40CD1C7F87174FB0605BB97B787B9BA4431288311213AE8EC0
C667C0134D4546997C97D2D7985C2B53A5D912D05A1A2E0A0512773CFE49DF7395E3A1441511
DA226D6B90A1F428881B238A9327CA2ABCD5B93602D22F89E63F7F95B6D19E9B3DC98F9B3EFF
9AF582CBC27E7EF52CD1AC981A37B1C6136553096351942786BE8696015BCAC20D43E7BB80F5
406246BF945D30781E4222F75D2A8B2D6E2AB5940CACBB619676C22B83F0F7C4884BBBB0A639
038D0DE2B0402D54C7AC88392A79FEAD1243040B641DA5940BCD997391DC832C768386C3D335
CF983895CB58CE0463D2EA9BDA5B5AA502889EDCDD324E112DBC346E398949E2C5B6B46FA04E
02AAEEE72276F8B0AEDF295B9C8C2ABF90A414F42B0AA93D47C1F728E772776856447185F1EB
1D34B2AC15B0FC029C31086BA37B558E80FA8DC9DEC84AD54B3C0B3D69FDAD7633E2962E4884
D79CBAF3AAA087C217F9D1A934ACE78E1EAF76B9610A37B3BA9CE8545E3F9122054AD864777C
F27404CD8FE290658E8DC9DCB26EAC4F95CA8287C045A87342FFD8EEADC798100035F7196B56
B2C43041263A81E60A58A06B2566BF8EA3E564BD405D1A41E5EF9219BD44B86A43690F9CB5D1
195EB759AB9469AAD75DB03EE1879F0D0D766C3CA6187A9AF2DDF615985116F77B2E114A0B3B
5AC5FEC13321720AD5DCC32A83395C410CA17D7A203EDD67A416DFF8F587FFFDCD4A35EC9FEF
150C430321CA4A1D6F8CEB5D75B2922D8CD3E81B7738D2FC9BAC28847357074D4CD53C012316
84E5EBEF98B6A96FC3F6C5F1F46BED95008BBA43917120A51B0564A09D805279DC975B55F4D7
CB39227A7060BD4D22991AED74D2794B52CCE847B701C587C403336978FA399F9E9E22EEDE83
E74EBF6563A4519A8F5CC3E88AB17DE4E97725107293981EC1E956B6CF7BE2EEB292385B3F57
982DC715FCC0817BC5F63D3A401BF9C923DBCA74C87B8CCE44BBC8234D3FE5926F3FD7F7C965
D706AA18AFB4FB7155E610CACA73EAA29E12ECC35F38546B2DA71CBE12A24F91FB47B061F239
282FFCB584FB8C32994E094EEF9B5A239B02A2C10BB2CA96A7BB7A0178C2C0F4F1C9915B63A3
E42F52FBC8B9EB5E9DACF7A6E51459A6B5160F95F6DCDC64E33797671E5D5283A45E2ADC43CE
F01A0018281225EB204CA4EB161D989855B4A9B48A613FCAE5BAF476F295FDBA6466FA0C6C76
F9A12C706D5ACAAC65A10B38E2150B2F0E371796094C38070BD3D2057C94EF15C923160C24D1
30C84D998E2FF4A2BB336397B9B9C309C1235B9D51ADCBCD3C172D8766F2FF01A70D1BC699CF
A605431A1334E3E8E4CEFAC424FB496FFDC1C569635FA5A16E752EC65A46326C69F5A3130676
878700656193AA14B53175B3B97E2AF23957DB4C74E8B06BEA76D8ABC98EC190FFA2CABD64E0
38C338193263C08D817FE8AC53AFACB45739B497B9E24A65C218CAC5B5F46C2E76931D8AE121
384C91626021821EB6D9EF10B4D5BAB0A091F57AA482D25FDD0D67D011A0B739D4F397FF76DF
BE3381ECB3E9F3E0E5BB505E06D45456FA34556B0E40DA97E6D83470905482FE17BE29367F67
88D081CA48D845E7814DDF923E3880E1BF81F457E5B4C457944AB2B2D0D84E4C44E11A69D7E3
3930A3EB12243AFBDC099835158F690E1E172E7199C181237C6C8CEEF93DD4B4B5800E5B7427
A8EAB0E5D5D59A2C556F3B6D98E6C846F7857446057804AC7C59F19265D5BEBD982E51C4C000
EBD6F53BF8CCEE3C4985B079BA9D7982FB6EF90E54472717BE90E851470A799289C8F7BF0884
5747ED66F6B518C673F2797D6B60F875E20D579C41CBB311B8E4C48D2FC83D5BEBC610526D0F
1AA096718F069E9CF9EAA113E56128DD00DC97B4B12DB57C978E635083E167F83827555C5FD0
D55C6B8AD93605687D03CE6D8BC997AC7ACD49FBF0A18F7072FBB59DD603A530060EC8B50008
86B136DCA1ED08E95CCFFFBEAFF4623BC8C775CF9D943EBB4A6FFB4BF0FE1C0E088195824B5A
44A1C615AE32AC3A63767F1C98DCCB833A98B60895948DC7AF7CF1BAB2E62D589A43224C2849
2FE0FB21371D8E1F05F1DCAD677F1FF002F6A5D405EE37AA826A4772271577BAA62D55F81A3A
E1D0C0547AD53610150CABAB86160C5EEDA8FF61FEDEAD73C846B51F63768B17FECFA7C2E7ED
5E480564C6633E7D7D4698FAAA533F590803C379646DC618BC7A5977FD55972612C75D19383A
434BDB72971C65DC2F16221D7E76C99E9010E303C6E2E4C51C0141B33FD58122A7049B782C4B
878AD2CAF706877ADCBCC848EC26AE601B4B41374979211B056D80B361F6C2D835824BB3C75E
ECF3BA25013080568A00BCFB7AD1990248D9EC7A0B08DE40D719079D0E365AC4E0776C9FBBDA
C1439A86E5E8F82D1FD21632A9ABD42C2A00FEEAD66F855C10A8924FC821D5CEB40D3B70A4F1
557CD847704791EBAE88786846C65C44892CC975EF201F4FFCCB07596D33D83A4C6A818081A2
89279C73FCA830781482E6527D0E7831F7C665D15B300E6FC931536C86780E3B54FACAAEB670
E927C2798F7D247602A7B763F5490FF79AC9C67917E919BADF64657C715FB6C476C2C5E79558
467CE60E33B9D94A348276C6CD2C6DD7D44B615A6CC1DB8844E21074EC2E6A6CFC1AEC1B0A01
10406D47AD72EC6B9DCE11AAFEEC7C43DA5D4EC9F96BCCFC43018A8C00B7FC8DFFF931071202
DE556707EFFD23117AE0F75B0EB53CF0F8A6430194D85D51919D0EA35D4BE263DF98F8237C97
62EF15A653BD59F5A51DFBD933ABECF52A1C9A1D9339E111237DE286210D8C1648EBCF704290
C736BA6AA1478D9F5ADFF3DEDF223F604661BCE7965D0E327A3B64A5FF063E8D45AA32ACAB86
FE3A90A4B92CABC417FCEB31381353195AFE8460A28950397D632FF570D2278461E72AB61917
E25A3000EBC6BB3B312888E865AC3E76DADFF44EAC1D676EC977B270E572F6A027EB4194E8D1
7F538D7E3CF388F032429F6B8DD94197894D5D662ACB1AC0BC47B6FBF5131AD7F0D7B0505439
23D7DACA36D48AF7A37DD6F37B6553A8F5C4A692940A44296A2A54F82ABF302BBDA2D242E2BD
9031BFFF0213DB92A3756F6D7A16CD8DCB53175FDFA8A6D20104A15BE6558EFD11FDE0AE7493
6FB0B158934C89A0181506AB524B2533084FE3B1BFB9113267AA6F715B986179B756765460CE
C9448FEA5B9EB78A2C920CB8BC06EEA4FDF010C2035658170D7A5C0109D0FD0A391ABF6D48BF
D3273A2B5EC11B0FD7221F3D79D4AA17D1FB24BCB6DF5AAC501B7305EE4E4AFC257CCF742466
1A8CED5BC8116D715176BC51FE3279BCBBA7C20FFCAC5169EEB1535A6FA080E6D2C7637451A1
D5694EBF2FB243F6C94FABB191FB35D7CB5BBAE0329F1631FEEF33DB3FA6BC2D30B1D8E9E52C
C0EFF0EE132AA41E4659DE57B3AC6872C5740249A3F583E5D7C4BF16B480F45A3E106AE0439C
45D51BCB3008A9A8AD99AD1FA06A0DF931D04AC0592F5EB4ED8EE3FEC3F52AD7BB3A2609E18C
854BDE1AA82EA5A3B188C0F5D1725A05E317D2ACA7193603C7AE9EF43D30154B2B6A608EAAAD
29FDEEED10AE0D970F773180E6AF019B362682C1203409970CB01B9F93A71A5D1CDA91E087D9
4F45B85F39484773E9A6633B1095D3A1FED6F22135B9F917672CA0F5A07D2F2E07C574CDBCBF
A836EBB9CD4F583472747D98E332AE851F2C1E83056556E4A1905C1E169701870918B70288B1
25C74797846663054D8970BE56938A6754E7C43C01684B9FE3555C3DC135803E9A9BD20B11B8
0A91335361F0F3C762080EFBE6FCA55687C4AA1FE6557DD4E74D07806D23DE8A3D5F0D4DA340
C836A3BB347CDA0C2ED7621BE2004C0781F3975B4FEFC03399202AE93BEC90BDB3F7734D07A9
07855AFA7049BFB34BE0D69C7F0934D0DC6218BA84AF0413CC2D2DCD874C5A58362F9D62A163
8861B3A1C3C694F2111A8B28C8580ADE210852E781D720DA46955E017B1C1D362845E0B74A0D
A44BB5BE190807B901F7FF068D266A69EF3F09C07DD7F2AD2E237854EDAEE9800EAF415D8B46
0E6DC13ED3C77A576ED6B4D30DD0839F36073CD4053F86CAB24B2A616355122A3DD38A85E5F9
545258F13D4D19199EE10A8ECE8BBCC01F8EF78853684E0464F54833BEB3386744DF48A46AC3
3980E23C9D7D0EC221798326AB068DBB21170ACA78D07D1F3287151C0136E5DEE8C6859CBB40
6C81D769EAF0AB91BDE6086022B2ACFEBF574D816CBE7802E9168FE4905E9940A339734553B5
5B6EDEF3915FFA5971C9A5D0BB2416C4D10004F54752D307265764B474DE23BEC455F9D22A6E
D427B5776144A8C1ADCADCA15274FCBDC309AE866D76D3A0260E3E8585BDF6AD551508E768C2
A7FB86AE93195B874FA1EB504D10B63923524E126555F5D89A1C02F8C4507890CF0F8A4B01F9
F16324F06B7FE2597B492BFDC5903A07BCF85A6789711A99543B26527687F53A1E99A1D97859
5D98DE343A8152AC4A5C6822FCA260A601C26CE22BA24CAA8123F7C416776AF14F4CC465C0CF
FD563ACBBA95F881FACADC6E5C938EE8F9CD3AC5174EB01DE9108216CE0928ECD0794E65F6AB
67864155D8224B818A7652D9CF521E2A92A5534030BEB136E20E6FDD211F02B94CA91CE2AB76
DCA55CEDD737FB69637F27591A074865C80DDA25BF3CD27F75378BE56CC1D84D12C3C90A915D
C71DD999E0B569BFA2845740B6BB9963D146FFDEE33E5FC6961CACC6194E4988C1AE22A513D9
97C5A22A02C237FB6C63874223A6B24CCA7A6B4006DCC18ABD6EF1DFE78D9BCCC0687F3F971B
0775201577D2614B2BDB94B5650CC9DE99FF5AE623D0524EE7411DD4D2C23A6DB6EF4E16D152
10568759D8B715348A3CFB1767666FC868C9A109AFA0BD5B2B82C04D26D84EDC3381844E7298
9096B70B923DAD856F3E6CFFFEE8369F0435B481D4AA62AAF4028E7B5F6A4AA2DD50E59B60C1
9A7289C5B683C27C440E5134DB116FB2222FB7B120851D0D0DCAAA667789B5BC7728B249ABBC
69BE2F8FAA4C870E307D2D76A0FBC8434E7DE59D397B51D95E40E0A9688E401BFF120EF41E48
301B3D151068E21489CFF2727FB942F3EF9CDAA962ECC380A1C77646FEFF290D6053EE7BAFFE
CF140EAA2E0D08B03A114275D20198490133E37FBBBE696C3E4B6BAB02AC72AFA5A47B3DD905
1FFFCFB9228B61682CB10730716A46F1CBAF906618FC75B6CA2FF8E54126281BD048A50E4C40
D8AF182F2CF6A7D11D0FDF17D5E9460EECD3C75BDB5037BC1119FB4F532B06C963E66842D72D
3CBE2985E8EB0C7D4568D99BF8A663C4B88C034A692A7DF50730E5DFBD07E1D084B6DC7042DF
6A21DD0630EDD2873049D87274D7FDE18BB4182A22C71063EB0C7EBD69EFBC02ABFE59863261
B09BCE05BFF553CD833322BD72A8EBEDC6D553BA848BB5EC9DD87930F417E82A0FF5315F83A4
F6AE11DC513F3F23F4EF2F8F60913C774F94EAAF1AD9CC8636AE749897DC22385D1C160C575F
49E6CD8E5CD681CF5DC944B4812BE544E987B4C84EC09C8BD63030B18D60CAE3915EF7BF2238
1A07EF2532996537F5AF2ECA793B28F512B66334CA8B75BC6682F335C098D94E030AA9D4864E
E9CCED618BDED39142976AE9DC82EAAA0195327F02B86EAC9B6B0BD3C6DB7BA643FCBA3B9AC0
43273FF0F7E5F45FB51EF362FF4B010A49D4972B89861AB81E235258DBF9BE541DB7E29ABC9B
B33D3C396C5672CE0F47D2FD14ACEE7BF3D43FEEB53016EDFC64E7190DB7944D4515ED8866A3
7D6C190D50828347D2C3A8E4C0AF49A787F15CDE5FA24BF96758C6D09D9134EAC6AA38F358CE
8186694D267F354D52296CB5055EEBCA30E9CCA18222DA2251142877EDD264124F14FA6AF7C2
4253C2BD3B7B637623E2A76DE369D7736B8B3FA377C7E8D9BE896F34BEAFC9A8B80FEF8F122B
5ECDF3C28DA752E489CEE638CA2CB950AD5E0261C1F5A847CF476E089E788E4044C6A84F7FFA
5DE7B0DD367CE2918F1E392EF9350C16861BE36BD0D0775CD987E89BCBDD0EA4F9CD01785FD4
0C49B2E24284A0A7DBB76D276D949DF262208FA7CCB9407DFD6EF2C15385E9971F6F14CE4AAC
EDBDB8A9F31E1F8775D0069A96EBC409E5D9F5D914D111F16FD75B637DDE5D2841AC5E220081
CD8373F6E42C33AE372FD5AF4559C4BF7260ED35F34ADE816A1BFB6D9EA63986B8F427AD1509
3F04AB15D9322CBBD9368C8FC0FB5251E656B6930235C41C9A7E02588845ED6BF996CC8B66A3
E10B0F31AF257C099E90AE43CF32D254A3C7B5D70A5C70E9C561705ED47EC8480D041148098A
63977377AE12E21DFDA9ECAFEC10ECA86DBCD6ACCB189F98FBAEC14AB601637F732D281AE970
F8F7C2623807D8D44BEA23D16CD340CE011540102FAF0F8C4EEE393FC282966D1BCA19B59DC8
E4337D7273B3B8556022AE5B85961159ADF98463405CD932D0B5E72EF822F390EC01142435BE
843D2A5EC01DAF9378A3BFE87A27CF5E9BEEE9BA43522A2197E17EDED239B4066FC974970527
30BDE7FCF0FADA7FB81CA321B1190A828FE31F59140AA30170805C33F413720D089083947ED7
C366C8653FBC23B2BBA685A9DDE4DF4EEF8A5486B6A5ACC06652D9C167421DD5668E4E00A3AD
828F57495C2067E4206F8D4FD34BB1C42D3904D446914FEE933E8E15001C59FA4BB3E461CCB1
294BF876C6C15F1F2216BE24E0AAE40E41126CD78CF3F7E1CFA21F071158C53CFD4E017C5DD8
4F255085BFECF262CB562F8545F04E484666E488557AE6629A33EF9D79CABE22D72213F97335
540DE2C2E4722F0287085BF449451FDDA696C80ACC221A10835FA7713C13A28D044B3F6B470E
4F103D4414559E9EE9B11B1B3C178225B2F7C4E1FE14F42CB8BD9EF08ADFEF8B29074FE32B84
C1102906FDB522736A49CBC755D3EF01EDB655B9A3201CD74D79DD67EEC219C9DBC2EB2F97F4
03D9F4BC014CA7F97892E16BD0BDC3FBEA6D3EEBB8AF3B3BCD921DD8A67CFA0B0D6CFF205643
51B69E33AEB8288DA84155B054992CF950C8BEE202B67ECEEE34D37616DD393253B8A179BB8E
8C6145A49DC468C59DECD2A4B570E70B8E8A79859BA3A16EBE79C0033B75EBD9B8B56C979AF2
A81560E976DD14FA934D700AA27F72E25170B986B861D788F1DCA1CDD8F305E2E66F1D2D452F
A8FF32379117AF7A0AD92C5274A49867DFA9FBE88B4B987E9BC641E74318B8057BB997B19EA5
C83ED7AE367C834EE60ADBE08110A9A4ECFA0CBD10394C1178F6D6E7B59E5F053164C5E6343F
1379535532D4BA41EF00D26BBFC6568B8E12A5FA54A82DDC065BE5BFFF3705B78CA20ADF206D
F9EDF063AAFD89778C57CBE17A5C6E3E18197B15892A49EBD67FD46DCAFB6DE91BBA6FE7BB30
F6E0DF38DEB1BC03DF670E4B7EDBA8B0BE72E214E7DA556002EAFBBE1E1A7324B37A9353783D
D8B3361E1B151601F5BDACB4B95039DB5B2B670164AF97AD833CD82D4173C6C7B26C716B02D0
F867A368B3F15DF83E0185CBC6EE967D2DEA9951494786C9D9E68DA0F4DC566EC6AAC25890F5
BC08A727132C52DEFCC4C5C7CFB2DE3D21048101CBBE542381BAA8D0482092A9E127DA0028BE
55922B4714EC4F8E265885B2C0A03C6ADAC38E679E013029B336C1FE7EB901CBA88DD1DD2F26
63E2FF7F3ED051DF738C454711B0FAEC0B1B67A13BB03D11A46E41941530C565E5CEBD2521B5
DE833203F00A3E44E18B12705BD578BD8FDFE82085ADF732D392DB1854F135C2B69D6F61A015
E6546DE0B6B9A1CBC1AE58902E563C7A19AE8D6C94F4F4FECED2808FB4CD4FCADA1F8AE22A03
CF9F75460CFA3D3B6EBE3C8686C6F34140E4AE40A8173CC48E0942D902EF709AEDC521C3D180
30A8BB113F40F31F94C5E8C12E97C265E9A86C781351A4516AA4168D4F5D8F2065488848247A
48968AED14D38BA8AD7E16C40E18C0C2F1BD7A39193831274A9877370F613E5079403A3BFBE4
5FB943629FEFBBFC77444DD4FBCA4540D8A4772F607B4B812E6767308C7A0F51FCE79787B133
312569A50FBA889AA2D3F7E63604909D3371F1A87A59E83853C7EEDCEFF60B21868EFE4D48DD
2A4430A6E4867B2E2604B588B68F515E53B3D5310DDFC078ED6D7F48DC7C8EEE63429D2BB55C
9F9507B1F3104212E771A3EF8D955A0826019B0349B3BA4A03010E581F4B11BB36210AE90B77
3821985528FB59CD3BB31908847D52A3712E9625F24740D962ECFAFC30B0FC0C08F62E30DD85
6003A6C73712BD171DED4B7ACA64A5EE508C3CC300EACC940EECE122A3A55E709B662BB7A54A
6BC9F04155714C65A500D24F0BD4D60D3F02BC061DAC54A882DF12F8C79AA49710F4F27A62E2
051E946F7F4F609B7EB3A2E09FC900CC26D9523B15400D6B77D5E0964761E2CFC85585A432F4
0E3453770B99714B441F82276B3925AD507D437CF4C3834FDC5A82B786ADD4659203B36F7B9C
8C3F8774264688B7459D9DF479857F35144EECC22E9AAC40E7870E9168DB9735188634402334
567DDDE265F6FEDC5790744F701BB7EA01E8978FAB4F4B001387DCDB6D09410A9C2B35680AF8
8FB21426D3C08A811FFEEC5F149F0856EEFC25D507BE322717B9FB48091647D13B5A3DD2FD25
AF833D6BBF96DFE571D41D5BC532144C890575EC4D4EB77EFB534D808BA619D2554CE4DED901
71FCFFC7A3538348143C1657B6ABB8BA40669F1D38CF8841F99139B5B5080C2B766A93F097D8
26AA183116ED1AFE50F8428C8AFC9159943C35603178252B7EF80457C6A4FC913C9166EE6B60
6D2D11867C89600F76D36586DA5BF3B08EDED4976192E8B34CE6402B3EAEB431D204C49AA812
A0A47F6F1ACAB73AF62A8DCBD3C0A5F0033074D9103ECB52166511FF7B646E7C5CE9989A08F7
DEAFA2534A1FAABB7DE5FBA7718E1FAB5C98EEFAC2CF3C81D9C7423918B91D26F19532D5060A
C9CAB78B4722C06CCFF3C4AFD8C3828978727FFE067EEBE32DDDF18774AE45E47D49825D1951
9C5EB5820224255EF18A01EE59236FB094F9F1AFE302BD46AFCEE7CDE1EEA79DDA40EE2CA8B2
F1F4BB87867980C7F9F0F21590D7EBB2CAB98E5175012FC72D3136C6D7F005A3986F0913A373
1249F8D44E7C9C451D8C2E154093D456BCCBFE008AC98519BB9424266D1F4CE29D77DC5CADDB
8B3CF5ABA1DBCCDA40E8900B728A81A31C59884FC1FB284AD5EB7C0D3D652AC0F24E28FC8C41
7FC5C0E755BE123BE03587E3732C02F009EC5B544ABB57C9720FC3F3EE4E041260DF00D71A7C
64BBC04A5B526E4BAFED9FDC1AF8F87B4213B2C6FF52D3F21FD0BF5B799BCA43821933C7FBA4
8E7368FE7E420312A14BE34F16434C47F03CAAC824561AEA737B63DCEFB61BF1497CD74FD348
722865AE00269AAD5B472E23D74FE7271D948BC58B70625D9E536F35B9FA739A073D34C64D62
8604CE0EBC3F4749A08845FB9597B0A168C5BCCC6C3FFB5C4B56B45C48B3C5C8A8B5C1876D84
139EA47EE99A1A6B98AF29F0B186DA93CD764F773BD3B2436504F66537F96FE0CB856FE03784
9F8DF1D6F0FE94D51A15162BE6DDA73F79F473A99F4D2B02FFFF91C78DD4D8B5D7D7B7A14122
F2C47343DDA1CD160B093F257539A327D9A989FC8B84D6962119E01048746FF1F5E4B6495DDC
2642EAD2940901B87E802430924E6AC90BC6FE4F0F1EE67021CE14B7020D79D543AA5D684160
114392713DD5145EE0BD3618EEAADA0C574541C3B1555FD14692D5DDC374D13787D11C3543DD
531F90786F700257284774D5E80C72F30E4B6CAB75F3C0C21BBBEAC17B502487D19D0FC31C27
A470879066AB2A9A5DEB4679CE44A65413FC5245301CA3A4CB0CDD012FFB1D558CDC676A86F6
32D209220EB11B47F3AE4668D060505729088698042821A5F98BEE9BAAED5A7CCA4AACEBB294
98C3B2C275E2BB2C8CEBE02CD59B837B8496491EDE1C0648CF9384AA465E14FE498FF5747B4C
7924E8E9A12E08B7348397AFD22D3E7FEBB2DBDEA8DF71E8C0F7BC435EE4B92E4C9542D5A1D0
124CDE7CC9CD53DDEC7F5D28A579AB990084E06673D8D927399354368E7287A3A2F656B83F2E
D498A547A4D06BA3F7E6DB25C469A40077AFA966CBAEC7A5E75ECEE30FED5C27548EF22C6E0E
D931B6784F876D4A61C8F49001B018521953043A49429793EF1FD7A1A80AB47A75C6B5C3A4F7
640C00E7C10F8CF352EFC94F791D8C6BC009713E2C4A0955188735FDB5DFC29E967F95170735
4973BFFF9B3B7CEFC58B7B52096960DBA7B2D108D1FE274DB0DD38E94820DA98459DF6F353ED
B6EB7DD04EB2B2F2A182B562B95CE46D2F3B32048AD9B98AE691ECA9193A55D17766E68015F5
F6C815A79FF5D9E2FE97C15AC01B6506A6FAFBB7443A7956C639512BA5103FE7327EF8B4E1E4
DB0B63C2E57D0F8C296581014CAB77A991B73B176619205E683A3C769AD8AF59AE020D403643
269E8ACD6D71F577FCFA951317F0C9410D7382B2184D6C1CCA6C7B65F418E4121BC5A90CC203
A05F62C76AC2D0E0618A1FA5CD75A088E98A4F01AAED63D9B3B551926631A3192FC7916947F0
6CE70B8D2305EB488E6430A70B4B8DF0A3DF4ADC44F4506BA6369A85D802C0D6117D6D055377
B2879B912FE73DCA8612BFD70EDDB1D94603F95A0561E50FC8BD66F611B8C70AAC841A14412B
04FBE230C25C4308BC7302D38ACF0B8BA5741DA84E5982631047678177940B3D1B745BE2D656
CEB4DE9847D2AFD9C1E580EB2B7FF427A76E3DDF107DB893229F376C37F96C1C47E4A8593AC5
4821C9744E89A18B631AD18CAEB4B7213EE750220D61E6301A7C89D351834BF11731A6200205
10FC06E6768B84631CB857FE4C180E1E9A4D6DBB9456ADADCA19F49E1753F815B02A7F623AB5
670E29CEBFBF923B5B0BAF534C2A7133DAA8F19DDB77E6FE7CC0C2559F9C8F4B6DFA3E44E8A0
459524B97207043B7DB8237379AC3B2A700A4C9C0FC05FDAF486AE3FDD7D15CB89782F1B26A8
CFB281CABDFB2815FD7E1202BE2E8E8D04385D65AFBB8A5E7E066892E83DB21A80986E2A4FB6
1D5D601F142CB82DE438A085B21AFF08E6B95C21489A0E290BF14D1774F8735A9D34505AF59D
454D0F743DE31A2726AF75A63404A4DC3E200070EDC49AD56AC94C7E6D1D3AE50264E9A7567F
9F14223B823CFE5CB13DE3CC038BB17DA1B6B8CA924FD22E20224266E339A3DFAC66A0B22931
3AEB5AFCA919C8109BD2AA6C3842222ED7E9657001EC3DCDBB696C3DD89E336418325BA7F7A7
2D178BEC47545624A20A5C13FFE2985179A6662085057DBAB774D2DC96C47E934D0158C4D1A7
F782F0C3B03BB95EE5EA33F1F48676A58E83184CF39440B910FCC5518FC3D903C78FABF234DA
AC4A2EC5C44591FB988F15A4A134422137E240F2FD4BE0FE48570F9656015061A8AF936C4292
71F937D303F4D9E45E547C9BF2BEB24D44A349E5D5FA29E445DFC15544CB9F26C064EC261B5D
920C87BC6AE1B7ABFB7264DB2A4B5BFC7DE29568EC08E3593F97D0B96277E4A99776FD632517
5A4A3FBF4B7CB1BED02C401FEA4E478AC2E42FB6487909603120D8DFCE1D55E1CC46359793B4
9DF96F139BC03BD33C4B83DE13B5613A10F5190C79BDE5314F5189B766E7DD60B5822965881D
F518AD2FC20877F30121C6D090F91E6132D2D58E6624774601D5A267EED2B5CE131DCE3F5B17
D69AEE287E40BD5BA081770022384925BC55DBBB52C128797D88550A049921725884ED9290C2
57D9724ACE1FE6866FD9109E9F620C9F238506F7BB33EDC5C20992BCD83BAA94A0F3FFBFE422
B86405CA8A8E1487456FDF9F6CB1D330C5DAEC0E4F4F5CF4E5B54F243357DD782372CEF66CCC
804CA661D5D223DB3609E373DAA5031B68A5FFA1FC853FE0929D852972CAAE4A9DDE68825746
5F18C1A4BD29A59D54EA09C0E2FCE885FFCECFBBCFA6838AF35E929BE487863F7FEC6ABFF11A
C02622888EF969946680021DC3D9FE2A18332C4BE6E95130CF0EF92B2BE7612918D53434AD7C
FCDC95D77E82EF62572306668B121A65114EC3DD70E479D0C0DC537FC72391A8C3F40BC937EB
FC63AAA2988666F46808404F0D44971DEEDC5538E88BDD2C61F667C78EED22E86C33C8095114
F65D108A0947E48347D75861986158BDBA9A5E488D3A54D0838CBC37A8FF06545701C0ED732F
D8CF6AC06ADEA2DEEEB182CF2BD36AA979132D9D5A728079D4FAC01409650E70010CE7E4D894
913734164F93E296778DCD927C5F950EF5936DB51D842CC0C0B8B95227DCFE6AA2B72E9BF70F
EFB8EAA4B5F9102915B07D8D8207033FC91C757B96187C027F8DDC5B7884F4BEE7D77E40494D
3E59FA2318D4E259C9142DA86F05D381B3FE37CDD192ABD94A69D6BC2B99A09E0CEDC90945F0
E08E05501457342182F8A0A300D18E81AA9C7E15599E67534EECEB7B867DABC7350E738E92B0
71DD305BA1EDCFA8C19554085CAFA5298AC4221863B9B7DB5E341F3F56C1DFF8131ADA65B9FF
C989750BE5BD6543BE72AC171D9D8CF7A8B17AB372E9081D8F242BD983DCA60B04A7A5C26C1E
E0CF439832CC8A20D9B8EDEFA6500CA6F9BE6FF313C0F41965326475348BDDB35C8B87A8E89B
DE599691ADFD8EDA29B0FEA48EC58D2D7EC447629C4344BA4AA769F6F36FA89C208DC604A5ED
9F9925E9F888DE676C431ACB12B542139405ED6E67342D835B59C2742E2264235E50AC54153E
78DFA51BB96756DE6BDD773A2148E1567D3DE4555A9F670EE3F13212809AFCA4797F16493486
6EB3B828B63CF53732654D4B2C6BC046FDCDB40BD650E6FCAE57BE5F95834DDE1EDE67E805E3
CFFB1F5C8ABD6006A9BAD276E134AC9EBE102744C13A5D439AF238FA0AF42E9703FDD6E2537D
A297F3F80AC6B259E521F88185290ACD898876937DE5792EB35644361A22E95DFAFA98E1F641
F32ADE26CF8D03B42BC0040B99EE8F1956B351E8873A4D7DCC0A538FD3EBBCF5DA93E7DFC091
BB336C3AF715744529DFB8DF31DD04B50F03FEEBE3A37AC0F5304824A3DCBDEE876608E1FA6D
3730D37B34B54ECB643FDA634991FA0B65BB6CC9FAAF13C349E99F79076F0588968B1CE972C2
0DBB68E200E1F4CE694F35F2B38D0F9C11505E8021D01F1C73A931120BC1F4D14AED0960B72A
00A1ACC7F35BEB325192DC6E1DDBDC6A8E110B47F57F86A8F1D2325C0BE4369FF4387582DE7E
A941D4B672825524FDB99F2DD8DA4AE0168BCF9C0E242AB0E4A7B417C7489CB14FC4CD7D746C
7F0EC6E505E7791D372AF123D42BFAC8801560C0D65B84E098C938796BDFEC6BF4325805B9A9
EC46C684E4B6E7EDEDAE60607179BF8E6DABE1E890D790EC81C93C4BF037B1C47F871D145AAB
B2107FAEEF6DB1DD8FC383F147C687139F73D0BCB8D1D34F9890B2BFCD71925EEA6E3452D58B
AD1742BDDD833FF3120625430665637CE1BDD115BF2E43BBA4BB6583196A09DF7987390339FC
8B6FD029D3F333BD220DA13E5ADDE4554B565C2CEA75F473F8584AC1A4A47B13B2D494252558
13E736189FDD60EFED4C8887AE32089CB7A4CDE3FE5F9B982DC41AFB5B82B0D5E1A918EA1A99
96D2FD3FE064EEF2C4FCCCA58D0044C441258DC6417DF1E61E52F43442BF1DEBB3EA7510C277
AEA3DAEF4FAA06C3228B555578A5F6372CBF64FBE17DE2081848D1250735258DF0A3C5F82FF3
8315F1EB66C54FDECF1C2CC2412829250C8C5E55A74F4FA51E4AF6263FF2ABF32355D2EA9FE7
5386E53068261329697557307112218E11E91AF10694F67AEEB775771AFE293E28AA716E90D6
7728D8D733F1E61F3383364538B25DF815E0EFA3428CD87225C7FF281AD4767C4F30AA80ABE1
FA8BB308E8B7B45224F59035438EE221FE9635D24941D2A02ACDA08D424C28E2B4E0F00AA375
39DE9D7A3056DC7FE8633F9BC09DDCDD20D2D4A4128D1DC3C1A19ECF16912392C4D4381A9F8B
F36A40132ABD1B4FFA125DD0A952AD6B252DC2290F8B2B3CFC3CD9CD8BE6C90CA2AB13E4A6CF
F9DEDE7ABBC2BE82BDC4741ED711CF111481843B2BAFC6DADB5FD1C8C764F920E9A084FE8647
304412BCB29BF39C3FBD8AB4AE22A0BABB89FD722AF048CA5AB986B8B49E612B84EAB18FD538
B08F96AF566F62DA33024EB1B59BDB145A94F6382EB3632D970ED6EBDE6EB2CF0D0DAC050A4A
F7E13CDA7952FD2A0DD7C567B6EC1638A7078449FB88547C6ACE6298CD03FD1CB899CB924C9F
CD47F1C069615730B45E7236E18419AA231B0910955B6ECAC9DBFB7638B0276530D4492AE7E4
E337D52166F55185FE142DBE186DDA969E23C7B9CFA4B648954A149066D4CC73D03736C2E5F1
4872FAE229428594EE8A329E98F09456EBB8407F87A969E7DF76703FB9AD278FCCBA0BB99117
199787F116BFF226CAF5A8FC9676DAF03C38B7DDEDEC709342F14A9D695C7F1378AA828FB9AB
AC42B80FDBB6687D1308E19813F497D00FAEA79CA88523A7CE2E0DF9BC64B0A967FD26A02228
34D8F7A81389974D0CBCF8FFB1675EDCB6CFA4247956718B3EE48D27D8514077ECFA33B31419
B971AAD8D32B19413753FA91745AB4708E37CB9E1B55C8D62A1D0941D9AF5A32F830CEBEE00C
4E0E5D32EA47ACA717F1B7A50A8E8CB80AFDA8F32A12529C48D6D44F22A8003C236F2229E4A3
E37E49FC8831E167933F22B42AE502552BCC4509A5335D0E8EAC2C1D7F39FBD9CB1E28F2260C
B55EC962A19E8C6732B68FE4492788B01917582FF19D25C9A835EAE7B83A99906E4D61941010
74EC3033C9BC3C80AB0CB58DC6A20CCE67DD7010ADAC27A9FB320D5A3623B924770A604E3FCF
1B5226F1AE81D587B2BD867F3E689483FE789D9647CAE002A2D9EDF231522F3ADDB7F309812C
D0F40923BFA395574CC2F7F893D3E6AC21397878DF0B9CC0275DCB1EB4787133D4FFAE9DB7C4
E2417FF8C6D175F95725994265ADE06634316033357016B51DC75C7BCCEB102955EA80221E44
050A3977DD93B9BC2F3A5E9993C539476B2B12BFB3A1A0626975AB0FDD996743E24C397E81CC
9BD2901BAAC77CA76193A32BA1EDDF306E118BC5EC26F9987BBDBEEB2DF5095CB7644E7074B0
7ACE6A90D1C6CC1CF4E1FE3C8BA8C5C6D035AACB7236777F98026139B9A0D8E7D3E26FE1768E
05DB3B1AC57CA6FE38FA88D2256AE610D7791FE6E04B803591B15ED5A2F564B150E741EFFA9F
A5B33AF5CD4DBF351AFB48434F3460C508E7A77F1E1BCC652E270F16B2C3C7CCB046ADD6A2E3
1DF346903EEA8E9A9476A2D21A5D8B932EC212248E911DB1EB9B4BD396F4A7A884B712152E70
A86CBC8DF67495924D6364750DDE68B2479B8E8720E2A8126DC62D2AE63378081595235F72C7
CC80379DBB32E2E5F0E486CA52AD1B9EB53ECC038628D98600081CFE2E49D1EE3B107D66FADF
15F838936F570F064DDF932A588C21AC355F4FCA294B2EC7CB00FA9443B39F41B51D53C2F5BD
9616D42D0BEF7DEF510B02600537C4651A30F9D782A90409EA50BE1FAE8E06AD09AAF8575DDD
478125C4B43516DF2890C0FF3F1E44BDE5E74F96C82774756F2C29DB0E5F98BAF3009086B618
B4A189671825F7D898FAB04F72BCBE5AE2C9C89C782D5E0D5636D56A18E7227D5BDF55A7AB9C
0BD2C24E888BE927B69CF6B89E9FC65EBCD1303F578D9677F7ACBE178CBD1B2F497DB744A183
EB5503F8A54FCEE3139BAA77D8C2AD7B0B5FEE1A440A19165EA57612078180E72F4D99F02AE4
DD6EA22C8F190AE95B2ADBDB14E78E366984ABD7C2CAA6EB3E992A11DBC1F8AD085F9D2252F6
FD65FCB90078F42BDDB808594F25171C44B30DAA65D8F3F80EA9682F08CA352184B8F232FAAA
3D93717D9027AA85CCBCAC250797E2062F272490F8E21044CB044C00F3A904E9EC8144EAEA40
9B344B3DE799A2E4EDD79D349716E989DEA2C758EC06538147E8CE3E5A4CD30EDBFBEFA6700B
F0AD5F9284105906B1C9FCC53394554C0A55DB2E934906484D6ADF2DA5DADD44054A6588E4B7
0FBDBAF4AD458FD9D728919D1A94CE711D60B711D6344CE022FF1AA27FCA230DEE98A6E3097A
B013F482F0B1F89DDFCB5CC101845E42145E7CC832FEE2435335B35953B36A3083A7B1421D49
8D5608BBEAC252DC43FCB439633479F2AD59E4CD0F21B776CEAA45BC433610F60AA52F893F9E
4D533A8B7E798A7479D8337B28BFDBE304EC8AEE6357F68B141C24A193E2E63F94F9632B4C65
E25D08DAFBC67A24440D03625AD1D0617D86F68D00EC7D8398FD5DBDB910D11FCC977FE1974C
C0EA4C12EA55A6CE3FA357F8E188360E5C8B56D5BB2A86902FD4AC105C76C1F0441715C57EF4
DAF526D64966BCCF30114E65A4662F905BC1FE04E0D16714E9D20F5A1F80E67C6D91C853B14B
9FC77BAF8480B1578C189F850D7A79D3BC46388A4544ED45FC7210F5A7DD9A9A14811632702E
C88C4AA55E52163FA903DA6B74BB240361B00A0E7541F78325CA190CBBF3273EC67EDF71EFF9
DB0EFFF16080547E6A0198B55297E23ACAA6183E7D91878961C0F298CF1968FD4712DDCA3E9A
AC806959345E9C2B7FF3A0C052DE42B58FBC7DF85D9FFD53FDFDF21733D623F4FE0B62724289
7B775D9851FD35E6F24604F3411F22562005FB6D33D58907353F76098861653F7A5BD0590903
110CA5142044F25FE1DD7BCFA27576320CCD853A904F6E3B3B3EDF9B3C37FCD718B1EDDB9CE1
904956C5C9F3AEC1E48D17E826F6CB2121D1815FDD3390FA41D37A80C14FCA8E6176D5CB36C1
24F2590D9EEFBDAA4C5451D78895AD923C86D8794C54C12C8841119DF3354A6100E84108DC54
66FC6ACE56D31565A9FC0A22461AFE81502A22081B7FBEB6A6416973E8FAE48A2FD42171F1AE
443337CD92B7BC79561F1F642F2D184DDE2F66C70F503186E544FA5A8353427A3F8DDD21E8AD
1FD27E898F6F59A872986F66F2179B8F23F4781172504720A11310938B7D361671BEA8587495
B74DDF0A4AE444BC3D64924FF1B887FE2F64D5E66679E4EEC5A5FF8132E009832D2401099743
0C0533CE9944BD6C619468E5B59DCAFC1FD846698DCBD8E342BBB91F1DB4C0143F0309231B03
03B57BC3713CC555468D7ACE9E87AA404263B09089F9B06603C332BE82A7ED4D626129EA789F
38D2128FD5641A4BC132ADADC92C0EBA133FB4C6D7061FBA3FEF329E58962CD8E8128D18CDDE
F23008EEE69BEACC6B285902CAB3A3B6CF1F5AE23AAC84CEE4D048F40EC6CE70908F7075FB9E
B7F18F44DBADEB5B81A2A7FCF3604E57D252074B6D04C2602149997F5DC5BD5F390A53466226
20BD6BF8E7E10DFA38AE1A5A09EC408AACC9F109FDC292E407ECE592120C70C898DFB5AE7F05
5CBA444A398009BC2DF4871B65A5D97922C08A6054B416CD4309031AFF72A96E394D8165E0CD
F566A9A222696408B3A69E40B0320CE88EEFED49858919EB585C615F8A6140CAEB65FD87B068
914337F04D1936D0879623EE5B3B510AFEDA02A479481326B0459231F74E0825E5DF7B3DD5B4
F6EEFA308A320C4CC5DB2605E1FC5D055A8029DDCAAC5EB788DC34741373035FD0223EA0038E
88B0CE610907859875C23697D7ADB17D25F1712C18C16844B7A86483CB72EBB30A06C27E6770
C207380A1C828668939F51495DD1923F58D3CEC5A36C964EAD242E979B8758FE93123E76A86C
B4420A02E0D67A46117EAF7D82BC6E2D2AD04833D56A60A2E8ED2B4B7DEDA8349F439A3E0483
57076B27F79FBFE79140881EF56A9D3FC1A5A59B65B170B71BDCB51AA8210D542887CCD6009B
66EFF5EAE6933E7166A5944C260D468B9623BF81CAC27C2D4720A5275DDBB30658681D87AC5C
18274E0027C2FD698518670FD106408FA986A6B53AC35F988B2085D00938C94FA281CF2960ED
419EA1D9A87A62C1BB73AF984C9D5FA1A697E579D3440E6C246CFCA6EFA023103624E2E0DF23
0482F22182CD300C6E787E0DE0763BB63E943FBA7B72A8132B71DB7ADE105E01E3A8D191897A
4208CC693ACA3102C29E051174B14142BD239F48BCD14171571E2E19E4B239E1A64ACEC7CAEE
BD3857D3B68902EA156B4658A64BEFBB43483207C3F3C1860C815C9C13A101C93AF6676F7038
E1B63F5D3397D88F41367EE5A8C17415898F0521DAEB3DD5021EF694A58339F2DA389303709C
FAE5799AB1BAB0186F4BE8A5D566FCA1F8EF476B5F646BC165A37E5F7543DFB9948677AF0CBF
D7D07383518FFA3C98B9BD7CA8BE91948B7905EC7073A5C8DD921F22CB8ABE1953A8FD70E630
325D630D840CC082165E9824AAE93D6B97D92C3320A575229CF8BEBE8F7FA37E80256031C01A
737BE85A064295B2A4692B19D263D2806CD905743B3F9D24BFD291C8328FD4137FB5BC3099D1
9CFA9F3D18AA654EE2865F3D2DB5E23FA3118D9F18DE1EA61CB511D4F74E2D9D969047C6F1D0
9B5EC7038FF682092364F8845B60406673C7F69DF44A360D7F6C7D9256D2A525B5891BD8832E
0E2EE836DBFD29263717919708E3D7D69EF8C206137E26929AC5F8021CBA5E36B958C04E941B
18E3B23A112B1AB86F8CD450FD096E185A992A71F42CB4148DAEF537C18887D716A31321D7F0
FD0402434D36A2701194614421CCA7CF305D7E175929792517418268EEFAFFC8CFB867E5C599
F8B6A1F3DF6912E38D9200AA8FFA5792983C375E57CDC47211A89FE0296DA99E372D3BD1B7E9
270EC0E9000E0F3DF87ACB21D87F0E1F24640CA3C33F00F2EF887B7E0D3FCF1DD66A83FD7DAE
4BB9AF5A830C517200CFF8ADA3FE4233F34AC138C482AA087487A2E869851058452A6BACCDC2
70C1330DA0A1B252A7BEA3791492C22BFE1CF559231EC386835B0FEF94BE19E65ECCBD43776F
D3D1E184FE1598DD932D687BC1CD79FEFF5843FC4CEAE1D7706BFBC802561B44ECC9B6097F89
219016800E95A3CF2E5163A93962583F5C55432A1E3E87374288ACE5865A89749F35FE3FCE4B
2955A9C7950EAA07E2663FAE01761CC68B479CECC0FA6DF0BDD1B91728E720384BDACACAC585
92159F22A9CEC521EE2ABB09819CE296F17A2B20F9709F3A12AF5E14F564FF7A17D4E5E1364C
7587C096EC4B95579AD49CDEC8DA103C943C07B7E9F791C7E92A15BF9892FF9C03C598ACD671
583EEECACA0DB0F9AD593028F3E4B67ED141CF3AEEC9851F30CBB28F337A2496A1CB81F4F28D
B6FB8E14FE5A3C5E74FF5DF4E00FE8BCD741B697E4E5DA8A5D4CEE179C5787763CD452A8B3AD
094ECEAF3019DB9CED994238C39584C4EC13EF69C9EFC0EA5D8DC4D5E424550290F55F6FC1D7
224BB4A165864800A90876905BB26C7A01B78FA0CC34D0515CC9ED9B68F45CBF2B69DF36EABA
FBB3BF6F6C0EAFBD4424AC6059F8AD2C3DD8588F1D343D0BD67C3929557F940BA3ECFA1C2AD0
32CD62929847F54E6F73C4092C1C8F439C30278766F3A6AAC4FA45A2167CBD9DE4482D76D747
FF269936B1F2FE9047B988F4CAFD4842F0310B0C07DD6193D23E552BD37773086EB95E2C477D
890C3E1C4BA67BFA1A1A83ABFED0E5995DAB31DD5D774DC76B00492D8E57345DF144731D1A6C
1F5D4C8A13F6B7E4456C47D8E3B99D2D9D97310F6BA26D521AE68A6C990B45979AA51297DC44
6D0D41E73F24CE98A97EB0038491ACC1C381E4751795C6D6AEF5F9FC39901EACB2C4341D547A
4AF4A2838FF87D67F064C584D30518FDDA20810BCA4212950E34B84A931B4A545BF3CAC3972D
519EDA830ECB545B9ADB922C8D629609607C960C497963DC975FEF89CD710D305AD070676EC9
557E1D519F7A63F38A4C7F652A63C20ABCC00541D1A5411697C5213A24FB49907CB8934B05CF
AC54FC694EE1CCDB924891A11719796BEF90928E66F14FCF1D18036B6F9C3D99D733FA5462AB
51CE50E8BA8DE286855208CB7C2C7EC85F2A1435E2C33688BDB3C322F19D2FF52DF97434D0E9
CC59BCC57A4983CEC2FAC1773CC8DB019AACA669DF70F494319278A1FAE18DA2933A3CE161BC
45EDC9F34E830403FAC906D64455F8ACF9F0332AB8EE657C8417EB1331DD34E4B65FC578D212
8AC4AAC29E1CEC711EF59A6C7C65006E90E451A393F854E332B8415E648CBE5C313ED38CD5D3
F70FA6F667E0CE63EC9E786DD8ED81DFB8AA707325282886CCECCF1FF1F40681B68202D3BAA9
949E8D1088AD3C530B3BFB155BC76BD22770AFE11463E945FFD5CEC5A6DAB8F6E4E4535BB7D1
350B668C4F6C9129A97C8C952ACDD64DEFA2953EAF47330793D2E79B5ACAE2939726C3557CD6
0A151A4ADFD4C23B29A41298E86A783BD5E0935B9A54B296290F6FFC071F4D86A9766104F7CA
FFDE1BF707A04F41FAAAC8FCCFFB579CB309056B043737B611D70E8828C23FC7718AA5513DA2
1BAF8583B9594FB57F9A1009FB6724EF6D843FB7D502C1A7A70B362C3C66F729038E6CB24F93
6468C869C95230BD510255FEF6B412025F2B3A245D7319DD9398323B8579437C981983CD4B3F
EE341C88E0722133AE760274D1A805DF3F86BB57792627EF8596D16FE90E6B0EAE250E137819
2DF6FB76D8F2865BC1D2FC570DBD50BF86A1C25F81290CE37644919C55836B916929704F7EE7
8A6617869B0D88FD7B36D4140406FACEC874A00FCF8A9ACDEA8CC1C8C6899E85C58FBA11538D
A853987BA2F0C786CEC851D06E166AF8DDC56F17C220B5D90F8995B99FD3C95379E49149E957
B125E4356D6C05493AFFAE2A511835D7729CFBBC084D98AA00F0715C1AD9EFF1BA0B2FD815CB
D89F68FC190651A92AEBA7C9A8BF03A53C1DEB914585B4DA54EA89298569C187945272D78E43
9E7DD313FACEB4FDAF4D34B391AF5B4CB0A1348F8B05C039FE8E4E8494DE4976D55C7FB4D5A6
466A24817531F51FA979E498C8636BDA18F80008A8FA22D56A892A99E73657C9174AC05776A0
53569F7BA415AEC6DC28D0F210EEAFA5F3F2A610C74A26A1BAA2F33DBDFEB5BCFEBF6F65A0F5
BF046A7FD7D863A65B9270B561B818DD591AE80CC387E051FAE6F62F76D1CDCDABEF5F647A73
122BAC7EEFB5D00626AEBCF7D78DA5FBAD7BBA6960992A992773E42E14A4E33562D05E75935B
CA47611AB3AD50CEABF1F8B3A8B3FB114296BBD64728D49F9A4531B8BBB2A4141D6BDC128726
C85F87A38E4D5803F59CADD5796E8E4D452414B0F7ECCBC74F3EAC9930FBEC7306EEE38A3338
5DB222112BC82AB05436FAF6F0EB86BEF5BE6FF234E9FB20AEAFD5E292B382B08E7BFB4CD276
CCD9ED59909A04CAEEDB34C5BDE998E153B9A6339D5B4AFAE11BFEE66694DEE863E71121F5BD
3C030AD3CF3B84B19105C592937331D2E4748FFC7D2A95E3A9821AC60BB39BB060ED645DB8D7
B0E6758EA09CF572AAE37EBA8B0D7E06EDE4F229F4B15067E8DE4C3B15AEB1128D6F5FFB18D6
9A2CBF941F40B570BC386A2F0905304FE823AEFA3FDB17EE7A8C91DEB2B769B0CB2DA41FDB82
F27D7BDCF2EE8BFB17011638916F7208858515D8FBAAD5A9D3FECFA2A872B8BCCA2BED1C6075
3E97CE1C0B152D9A0F9968D91F9C883771D90B3B753DBE5550E38A42BC7C77F24F6119801D03
FCD4B8C4C48FFC88AFE11498AF2913B9CC7FE2E70C758594798C3363B5D7D28311E74D53D14A
0F27A0C54565910604755C8BBFDFF26C91359F553D77842D473D52B9FE187B5E6F68DBCAC28F
626D468BEAE99C6135BBD64F469168B6AB319833C27E10CB93833D86D68542F51FF1CBA05B9F
E1163F1D1C521A9588E85C2DC8C31F3D40701ABBD926BB413197D2C814FF137BC70ABD15A43A
A6A877E9C32600212964DB2ED14FA338CCEE643C02F736FE5C53166E14B858E4422D79AD4010
030477382CC3492CB75A212B032F4DBC291FEF57624EECFA5F47863CC6570DA4DA498B517723
468D0FFD05DB8A0C2E456974FF521E66EB0FC9717BF23F86C50D815D3DD96FFA779CDEF20000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000

cleartomark
{restore}if


%%EndFont
%%BeginFont: CMMI6
%!PS-AdobeFont-1.0: CMMI6 003.002
%%Title: CMMI6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright:  (<http://www.ams.org>), with Reserved Font Name CMMI6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments

FontDirectory/CMMI6 known{/CMMI6 findfont dup/UniqueID known{dup
/UniqueID get 5087381 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI6 def
/FontBBox {11 -250 1241 750 }readonly def
/UniqueID 5087381 def
/PaintType 0 def
/FontInfo 10 dict dup begin
 /version (003.002) readonly def
 /Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI6.) readonly def
 /FullName (CMMI6) readonly def
 /FamilyName (Computer Modern) readonly def
 /Weight (Medium) readonly def
 /ItalicAngle -14.04 def
 /isFixedPitch false def
 /UnderlinePosition -100 def
 /UnderlineThickness 50 def
 /ascent 750 def
end readonly def
/Encoding 256 array
 0 1 255 { 1 index exch /.notdef put} for
dup 0 /Gamma put
dup 1 /Delta put
dup 2 /Theta put
dup 3 /Lambda put
dup 4 /Xi put
dup 5 /Pi put
dup 6 /Sigma put
dup 7 /Upsilon put
dup 8 /Phi put
dup 9 /Psi put
dup 10 /Omega put
dup 11 /alpha put
dup 12 /beta put
dup 13 /gamma put
dup 14 /delta put
dup 15 /epsilon1 put
dup 16 /zeta put
dup 17 /eta put
dup 18 /theta put
dup 19 /iota put
dup 20 /kappa put
dup 21 /lambda put
dup 22 /mu put
dup 23 /nu put
dup 24 /xi put
dup 25 /pi put
dup 26 /rho put
dup 27 /sigma put
dup 28 /tau put
dup 29 /upsilon put
dup 30 /phi put
dup 31 /chi put
dup 32 /psi put
dup 33 /omega put
dup 34 /epsilon put
dup 35 /theta1 put
dup 36 /pi1 put
dup 37 /rho1 put
dup 38 /sigma1 put
dup 39 /phi1 put
dup 40 /arrowlefttophalf put
dup 41 /arrowleftbothalf put
dup 42 /arrowrighttophalf put
dup 43 /arrowrightbothalf put
dup 44 /arrowhookleft put
dup 45 /arrowhookright put
dup 46 /triangleright put
dup 47 /triangleleft put
dup 48 /zerooldstyle put
dup 49 /oneoldstyle put
dup 50 /twooldstyle put
dup 51 /threeoldstyle put
dup 52 /fouroldstyle put
dup 53 /fiveoldstyle put
dup 54 /sixoldstyle put
dup 55 /sevenoldstyle put
dup 56 /eightoldstyle put
dup 57 /nineoldstyle put
dup 58 /period put
dup 59 /comma put
dup 60 /less put
dup 61 /slash put
dup 62 /greater put
dup 63 /star put
dup 64 /partialdiff put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /flat put
dup 92 /natural put
dup 93 /sharp put
dup 94 /slurbelow put
dup 95 /slurabove put
dup 96 /lscript put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /dotlessi put
dup 124 /dotlessj put
dup 125 /weierstrass put
dup 126 /vector put
dup 127 /tie put
dup 128 /psi put
dup 160 /space put
dup 161 /Gamma put
dup 162 /Delta put
dup 163 /Theta put
dup 164 /Lambda put
dup 165 /Xi put
dup 166 /Pi put
dup 167 /Sigma put
dup 168 /Upsilon put
dup 169 /Phi put
dup 170 /Psi put
dup 173 /Omega put
dup 174 /alpha put
dup 175 /beta put
dup 176 /gamma put
dup 177 /delta put
dup 178 /epsilon1 put
dup 179 /zeta put
dup 180 /eta put
dup 181 /theta put
dup 182 /iota put
dup 183 /kappa put
dup 184 /lambda put
dup 185 /mu put
dup 186 /nu put
dup 187 /xi put
dup 188 /pi put
dup 189 /rho put
dup 190 /sigma put
dup 191 /tau put
dup 192 /upsilon put
dup 193 /phi put
dup 194 /chi put
dup 195 /psi put
dup 196 /tie put
readonly def
currentdict end
currentfile eexec

D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C545D25FE19253
9D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB47934F62D1F46E8671F6290D6
FFF601D4937BF71C22D60FB800A15796421E3AA772C500501D8B10C0093F6467C553250F7C27
B2C3D893772614A846374A85BC4EBEC0B0A89C4C161C3956ECE25274B962C854E535F418279F
E26D8F83E38C5C89974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F024
867411453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFB83E8A2A6085DA1161B16323
28B94B21D3CBF2E7752D441A2C9A03F6681FDAB37C4B67D5857720F70C4BCEE266586738012A
2237A85FCD0425DA7E8E8632543F5BD5D50F9DBAAE699E053AECA6027559DE42F7291EB381D8
66F1293107553809861D43508C6F23415E4FCC431AF4A9B3660386AE63E877DCF5E513D0D570
2B98D58B34897FEE163A75CD6F5A2196F91CE5060CA5E72F9C5F79D18F242EEE58135BFAB02D
5CA430B6D1B9A376849751A45E52577B1810C4F0C7F6C8196071D5B08FDB731C5384CCBF03B4
60347E0CAC959E4A12620B6C2ED62E06A241D1637F418B5599A7FF3C3953338DAEE3A160D148
8A68B0AD19DB3B2F9048F29B32C4F2E9785C207FD0F0329D1B5FA6F139B93967ED0CC892733B
2AFF491CB68B8E89F2FABB82195D8C3C2C9A6DA6FA1A3916B24B020AB51B4BB9E15342E11C7F
12BB9603950E0D3828CA33FC580E0BD2938915080BB1A9FD7CBB3F522F3D43007906263E0FE0
FB490598D95488F7FFD1B683AFB49D45E99701401E8AA359FBB63366570F2F001EF9F69FCFC6
D20E750C663E858089C15B40EE18B08BBFC3E7518B0450CBECA2C0C776DF339EC8AF7184990B
317AA85D97F6709124FB2C2ABC442BFE51D26DB01B64D9C13F6BF0CA93CB1BDC9350E59F8BD8
36EB7418AD566FEB61BA87A6E9DCB4A3A83591CE33DD75BAA96B26C0E08C35A1214928EB5875
2A88A20AD2348630DB65BB5006DE22108C8C6B20887762D2C3C20BCEB9145D21373DD3FF2A8C
166180418ED956C514202A94109972D2DA92E7530EE35BAEA0B3D68AC4A6F27FA59D344358F3
C2330C3756D751CE1190412D3EF2BF8F1C64EE731E092B2BF7F17AE92A0FD1F05F4B4E878DC4
0AAEEB58F6EBC3F6A0256ACCBEA215DFF48D67E38D1624B20DCCBD2BE2CA79E851C92FAD260A
7BDEB56A1398DF71EF2276BB850D7789DC486055B95DB87DFA20CFED6A8430A24FCC97F1869B
4E0BB75D4A4BD034E3FB84AF2352E28FCA7A69B115731ED66879C2E6D9C3B3DA773F15446E83
E80FF482267D891CBE74460E0CE6BA53EC24835C2B26BC37C4CB638B98C934D582C3CFB4EED8
2C04B5D5B5393FD00ED00927B7F74D181895496EB9F392FA84E388990626A0CAD4E8F4398F4B
4FD590E3ADE252A13C7EA80DCF30436EDBAEE7A613750B94D031AA04952B59735F9B7FE43DB2
B7B8996260532B417F9CE19BFECFCAE9ABAFD5DE6AD065F3578BEC962A8F878EB984C486A04C
A3B21BC0B646142C6B1E83CC2290CA267178ED6B1410DF3746F88705C607F3863A8BAC081F2C
0F38F663D58B6FE2417E2706AD02B117BFAE8EB6C8703C81A0600BDDD2673570AA96E8A41B7A
8CBC8C9D1FBAF0B63B675C644A2A111CFB7ED71551D39CB00E1A3332E09F6FC079BF174D17A5
DB4CC004185C1E01ADF3545C42B2249CAF469AE0672690CC00057B10C7A8CE1D6A50F6B450B2
922EA6162B567AB3421910CA6C7DEDD1A851C88625A7E7F18517FC5AB24126C4AB1DA45591F8
6C5854EACBB2505DEBE2DFE09BEBE7F2EB88CFF794DFA7958F6EC9197021DCD4C3590B272977
93505063835074EE009D33E192CDFF1CCD87F5EBD2C5C7E42895BEC579F6E34294AC17F11B49
C8514798DCAE8F87248A985CF7B2B6CCD353E0F7CE7BCD2CB2C2826612D66353FB0A9C1FA698
571B46B824680012F41DB4D51F6B6E16403FF742298CBE8E9AF794BF06030CFC43A100A1F3F3
044558937F4F44FA0F579F941870841D4481596CF418D14B3174ACB7E231964216074FE16715
DB5E74920ED5E6DB20D9223405083A0327EB83E76ADFED291228E210802BDBA8A50925110DEB
7BA57F4EA53E38F3DDD624BFE5A5E1961E3D1FC532421B073BEC795423B95167DDAF8C317C11
E6B0E48D4765F3DB9141BFDAE35A7E26D462FD349E8F594AABEA52E0B3774E01D1F503E7804E
AB8ED5D123B015925A6BB3C57EA94068510A24B2BE92406038AD3EDC27CF5FE86B53CFBB3D78
8ECE6685E28AA543BBE0F3836C0DF9F36CE69D74F2E71917DF6A9F0E2DB993FD29A1F1E09C7C
C2CD5C6ABCAE5C1812846B5C8D1B4E6E27383B2AE208B3B3420194677D5AF8E49AAF4CD793DA
0FF38FC7DF17BBE914CB4018C23AE9C33BD62B2570FC537591FC15B5D6A9455FB33B710F4FB3
6CF5CD1AE618D96C2CAF86E6834877530967242C6F2A8A7F5E4D066CAC4A3C01784B08664AFE
FD18880365E886EAE61B3F80FE01DDAC21EAC4F806D0D6B65C849CCA2DAE7289582F014E4BC9
6F6E6840DCC19E372015D2C0830E48D36928B5F784F2C137297870610556E871B3D77775CB1C
3C612C9B297753F4C56DDE13AB6412134EED5DC9E16AD67078A02CF6E2C87E00F90CD22DD79B
0CA7C9A245AF256A51970553CCD9273D8293A3AE527B1BEC321E14CEA7F39803D0500F2A676A
12C1B7B021740F814233DBB150BAEA98C5EF54B1ABBB23FA0EDCE4D68A199892A94A7D51B9C3
3692065D1CFCD567B48256E1F87500489C7E5198D4CED0C940CD384A3865DC0281B4AFB58CFE
B14A1909CF00ED31FD9FC08D203E1591D249698D2F23C863B797A321C5561FEF17619CEFCDB2
77A7FD91A75BFB52E9A4B6FDC4CD21135EC0E25E36BCEE98978A95B0A861A6B608670121FB13
5475007F35FE6428E9F65E7CFA4E2918E6C87840E83D805C561F455E9571E106C22D6E519393
BF4A74549CE9792139F9D3FD551130F20300986C38F827D5E72B1BB63781B9852A3D217F4E11
4193783C82570BF0B42640184892441C70D7BCEBA806119B17606350953687884036D6963503
79D609EA635A1DD248FD9AD41AFFE5992C8475DE341CC8EB4834AAD1B285C2CB997DC8D787BA
F8653410366CB1DB89667E22859184DA5367C03D0604DAE8BE5C25ED56E17564044879BADC13
583C5223397631B6476E2DCFE3CC3D8816508C18A4DB3C63DC81E784C8E3C5E29057759F1E4A
750BDD67D8A4F82D52F368E687AE6A2B285F696A8D772E052A32CA401230BA21ACC7E788135F
7E7D4C1BB16062E9C7C6493FA696C0A88239F61312063769E3ECD7A14CB622D1EB83F4C6CDCB
455B1A2553D544AAACCD89DCBF6FC9DFEC171528AA2054E83C4DF2D65D189BE3AF34D53CA441
38190961880214A3C5840006F73FEBAE70CBF4FDC9E5D32330A0C6E5A337E9EF5D7074585F2B
E5C36BE44B92819199046A2E89F505522B384C3932455D304BB49BA302259F73A5ECB7CEE370
615AF27A3699E02EA3777DC18417C1424541FAB16D7FB7C6A5B3908DBD53B5CEC8BD6BD7966B
35AEE7C1045780103DC8C373167A9E008CD3B9EB1B4C2252B1D1D2D944CC3CBE14F4481A4140
DB85E6A03A758DB13508D659CD58AA84C6EE80DF059A07C0ABD6EA6677292198D1F2A2C08CF8
8101341F17D8B9AFCCC162F070B1727352718E2046D2C0C6357B0C4494622885AB5691A11F9A
E61BC2B8229DFA608A6A739C00BF41F15C8FB18B3814E5B50AE4EB6B21A1F215F71DA7B73CD7
B637F6ECD389724ABAF71EEA4CE81BFA8092FDC5DBBB9970A73FF9D2178A705A67D6A803B485
988652631F96C628A97253D4CD4098786F01D6D940326F446C3784295A5344E524C8BC2ACC0F
3DE782A5A188DF568F148C884AE861323F63F1549E95830ED3C40E797C1BFDB3411F6642974C
7AFAB1B8EBE2D19168AF89A0DEF3A101A6E56C50AD03E4AB3D7E297EFE10FAC30AC9091DD780
7F9CD740388E94F5C1FC580A51382C2306EA9CFABCD0D600BFA5CE5E99E34FAC9E16DC16EFAA
47AA7D2979BBEC11B084A6688D3B940FC17372AED76FC258A61732D9558307BA89C8008773C8
3C8646804EABE7568424079E2AFF85DBF04F34F2A606FE8B3F64D1C1A6F43174E4CB817300D5
FE033AEBCD0B1006853A7ACDD6F46DAA83B956258715CF15714A7DB08DD08581B60FD1E07F4B
1C55DAB1FD109077AF54DD529AB513C0787139CDE2AA2273BE9ADEB4F0CA04E00A2FD5F0DC8F
6983CEC4D8E1BE1AAF947E60444E4CF62DCAF24A8E1C20DE44AF90A6C8C65AB9E064E96E80E3
25B45B7D2B83C2F559D53E8950DD64DE9C3A65DC7A59821F28A6C3F47C8287FC7DCBE08756D0
94F4B8839AC05CC3B3377B9593AC187F817550CA3BD02E1F7F3CF1FBDD605BB627DB490AAF6E
5BDA7C9CB6CA8924C7D5BED3343D89FCF7A7D2AEF3E5179B0D8121B4C115DCB2239AF080659C
EA9840C8C80B2904D3D33002CEE2E98503F467AC2DCDFF826627FF501A735C8D667186F533BE
4677E223EF254423DF828B8C20DD61BA8A4B58B2B9B2850864319E8C94EFB5BA9A2104BE4469
71628F2756315F49136CC224132905C622D7C18D5057AD9C34392DE6304CA5E20A1473FD446B
4B820B743BA795951743535C68DC84801321E9005CA72FD1F15566E705D74DE68C3ADE1E651B
4BA0ABE0320108C29EACAA32A39D3783AD135DA95BBF549FD72A1C23E74683D44A24EB0356F1
BF60A0371E1895A80A669471D63709CBE81C3CB6F37DD175BD1B6F0EDE46218E010D9221E2DA
69F8E6C0E74AD4DA3C8B3F7F77791B743AAE92FC4C58B6DBC3FD5B5DC808AC88F1761286FB4D
7A761B23247ACE84F87E89F6A35F666032A7CDA7615D54660BBA391C8CD41EAC8B970F9C5624
C56DB1F38BCC579279949376CCF489A74C66325F301B80D4147D5D2C394353E74D0590B6FB39
6871D7916008F375DF3ECC7D321E43CCFEDD18F88828E492F2C96D0F45CB8FD3ACF508DF3FD2
3688EC2997EE577729A3B7EA4E66B6B5582ACF8C6FF235158821406F7EC42D99FFF5E32B205E
86647D7FED1004343DE0E53D8C6805A18D41714D22552487E988C1674354C7B6264F0B4D78D2
A6B87C6DF8309C64F2005BE9CDFDE5E595DD0F16D1F914806A034B096474ED95CBAD7171C9EA
87F5AA25EA3740E4F30375B8A1F0233AB4447B10A3D52AC4D60339E3AB7095168A9AA89FF97B
E9AB2AFF6A0F4515ED70C654145E2D42AC6A6812F879F0B08D9718B91CC50210D5C41B64033C
E18F2396C9478F623175A741255C8601A284566A4DC8CF490867286885405D9975D92E3EC4A0
B9768E9048DFB9D78F06BFB0123BC5DF61F727B927F78397B2D72EC14E98E6DFD7A355B95F70
E968F3680153D8C20B9CE57D19FA4A6EA0D8CE325DE7EC157AB47617B661621F50E1A0095892
AD36F47A7F09DD49C971B0822067CA3D519C8B5C5C77AA839401D80D2F8CACEDEFBEEF0C5E05
CC32CDE8FC85A1927A34B64465027D3921750F4A0C76C827797EF82EB0538D2BF29377E7E1C4
9337E8454DE9715F2692127838A519424F7A088853574E849551F323FCA9225762E4794962C6
CE38352CD9A36335D3BA2A9A00B511E12D3A89D01B2841D8866E90F18051C1C15DBDD129ABA8
6F2388AFD0003AD98BD1637CC5E9F3E7354D3AF353838B05728841029FBA37871F7A522ACBCA
E96BDE0D73DBC4F4C0F8C9B72E5E2EA4FFF43E3FEBC0BB6D21699132F8E3C5AD68C78B8B2506
CEE537231B9C667EF69D36202A3D1276073A745C742BF208DC71E6F7C6A189775093C1754A22
9D2CFAE7D52EAF8895FDD82EBA80314184A358CFEEB104FADF6001CABDAA2BDC15F4338E6DE4
650A1149D7B8BB3267BC6288B008DA7243F6F6A31DC7A558552DDF07ED84129CCE6EC7AAA0EA
F1500E6AAFAE302EB009F6B767E950AF2FA5BE0C4BC55A679C1D968EF88463B0C4698819031A
15AF3782BA7A078A66FC83EA772EFD3A06F0D7B7F5BA91D965DD6E4331E6603758B09AA9CE82
225AB9EB86CD36B0C68D05B098FDEB7C10A72A9EEAD11839D03EC8DD1C436C83BA145AAD35AC
8CD35568DCBDAF45AB9FC529527EF2361419B2015D448C3CF6AC61FC20FD2303E4AF6F85DE64
5A74CA338B0FB4E65154F0153256B2B1A02EF624FE2E9B19EA45E89DC993BF4D151A41365117
A886018A43F641C276BB2CE2B80140B4D6134CA744C2C38B08BCDF587C8F71ACD78B43DBBCC3
0F483519DB58CDE2F62B1C48BD0961150BFB614CD92C557DD70EE7A040443BF0E26BCE08E8CF
CC7D824402F2395A846E78C36298A48DE50929C1BDA5E9F63D56D2E4F970991A30167EE85C98
CEDFD515066137AC9EFC157342AF83600365C0B27C0C3BDA50A1A5A6DEEB4B7AE452AD310B8A
B66DA71EFC2DA809E02ADB715C6CC8AD465F6C57815C067D1FE81026CF5A278DC76F4CCE0468
0FAF98E391570AAB97D3667F3F36426A21BD5AF483553DF0B77946797F9A9341E7197803AB3A
3D45107F4CA0625F8C8C585742DE705704FB6B499CDD877909FDCE147580C3409C6F6D645EF3
717E3BA921CE66FA74E41B930C31D1384626610588BDC92C82144D8EC84377415949999EC6B2
311B911BEE6157A2239824E445E4E6A199D37FF8524AB1669986A5B18EA36792B76E0D7DD76C
D6D95FD41E8680EB8B2ACE5A82AD928D942F9657A5EAC259DE9CDDF4E29A667C61232F297D03
39219FCD5B0B6BA107C9DFAFAA52FA297964148F3EC5904F408530D52870D739588CC8A58086
B57CB59BEE1C18278112A400794B6BEEABD3BBD63B3AD1FC7275CB024E9E3ED8EBF399D3E6E6
02BD72E2B334F198C83D94DD4F901FD367F8D66A591E7FE0AC75827EB00FB07B5547E1A20DD5
C82BF18776B4CFF8DB7A2B80607021F1F665746752CEB85BE0C509702448E48613811FDFAC38
7E6FA034C2C94E93920C78B3314B77ED1A228C4E1A4CEC46BC07BEB7035462DB6F2634BCC606
FD553A9D0BE49A543CADC8D2829CDBD4EA99C5E543B24768642A25A548F535BD210DE105D379
F91D8B74236A67DFE117AF4C94E6A28B0D5C3008012F7AD08B9B90E3D527129182BDB6579FCB
14D838B79F87F657930C37F4FA134E60F809F012443DDDF3089FEB30A5FD42426C98CE3882B7
751BE78F3C1E6AE3BFB2F16653AF8D359B7E010D89F437EEE53BE9DB290950F7D979DCA0B9CD
AB3B76A8798CF9A9DA13C46929751E219C2CB582428695425DED4D42EC6CFCDD600548DEAC0A
EBC31648BE9280A3760F870EDD7516611CEE05A4A5032888132D5CAAC0721E45B1CBC62272E7
397D0BE53725DE53C25B20DF52D29F9918143C046F32F0A1DB2BA342DF060605DC3820CC5F05
5EA4F892FFB6769F983112154C925C62FA8FF336578120F22EF075977E8654D50619062C8810
211E7B078432901B7ED4CB6EBB2435455385AB8F6523DB462D50A111211F639DA8BDD93B9BDD
EBFAB450F1078CBD10D936F2F161FD483725DE6B432CFF90DFD4B1D6B0FBB4DDD28AB8C6CC6C
9CC0ACF0DC1AD8BA744488BD8C4BA0B2707264AD0C09535C36B7DF254AC26737A0DF09EC9930
7E18F8540415BE361ABB433D8E5E0DEBBBD5C4316867423D3CF1C1C529DBE9A46DB139BE12C6
4C315DE959337B367F636130C76A0DC5E6EC689DF54491CA03A7E8A1544A9C0725380E9FED22
AD05AF999AC0DCDC8916383754A9728AD33AE9400ABB8E9672E26C25588453C2FD952FFD72F0
3854257E935024F8334E8F060970031C610C39423C7EECE32CDDD77B47B59943BD4F9C6B8945
071190FB17464CD1C79BD914FF80B337ABC325EF549B88CFEFBB978730C83A6AB33F9389733F
5769D3A89468CE51C7CF6BC52E57BB179CB757C6F1B78D3C62F09DB1789DD4C9B0AE986B5B41
1227596C7D0097FA31399EA8381DA64093C33CE11EB0CB1A8F71B82D67AE5E767C5449F62097
B53738B4B2ED566B2D3C4DAFB36CB7D5F86AB267E3BB735EBA4E9C05D6F238CE8CC902D1CB60
1CDC914818B2A5CE885D44BEB9BAF0859E9D0A5571FC726577CE1483052A0DCA8F4B54AA899E
CE4676D88F639251053A135EA6400141045419E6289FCD86F452CD76DFEF5D26165774455A76
2B178AD1EDC212E78153CFBB0075BB07B712E6F7A172C804319E3BF3D3EDDE4783A639A6DA91
ED39EA32FDAF30EA27983A2525C10016723CD6FAE48D76F8E978EF17D681F5435FEA9A4BDDA0
C26811FB6908911B47052397BEAD932F99A4729560032D7C97A5D010C7D7B9EB94363012CC7F
62D929EDF1C1CCD99F39773FC02EA8C7AE98F6323D13BE1141E09C18B7CAA92A2C1D3147F184
1235DCAE82C5414C398FEF7A563DE61A20F562A5B7C588D52D651AFA7C2267F7F0D7CF976A1F
C797D0C9291D6D4BF4823985813A433A5BA9AE8CBE2D638D4EB01831395D4711DB1E5A4D12F8
159FDBC25EE03621A77A5A16030AAC8F25FBBA49E100534DAFD91C06166CFE0852539624A896
569A035F5611012A1EE62601E2117B2374AF6AB930C3EA62F22DA4130F70403DD7C0BD64E680
DDBC60BC964600B1CE235A8BA8A0DA3FDEDF79083365EF891EEA9F541DDE8CA64FA580E9717B
F063055610493BCFAD6209703B8604CE8D011BD8ECD4EA70690F550E6E55A40161092DB8C5BF
D39E2D21618A07CF4725BE2B10DEAB91C19746D5EE5F29DD70B3BACD1C0EC063ACED8C096A4D
4BBA5F7B48F0D9F9D5488F2DBD2B5C220948F9C7DF0BEC3CF912822B48BA052301AA8E6AD517
2683303307B44319EE879D791162FFC830D80A71114E9D5DD8F73DECC534DF833EB0F735A0B0
4E7816B024CC5F188087151E346C981C9B851F39B9796135D8718FCDFF0A094ECCE4B923DAE6
4AA0A6AB13932BA5258C445BCF482D7CF991DADE9DF5EEBB4D0CA832A1B863C7FAE0FBE26E38
1180C1648817FC6537554CFCAD6484A2276DE20B0E4FAC8F6FC048125F1CCF350E39D9ACE346
6422B2F51F03BAEEE7A216A59C3BA08D40B09FBFD0B2973D3D80321873605BB1C336AC979ECD
A2F8CEAC11298A7F8028B3DB8A7F0D19128718645FFB28116723969C5BA6C728D3DBD8C69F59
4EC4D7DEE5FF174A9C29938A79148259FA2E81EEC8360811FF6E7B1AEE8F735D06A67C160083
38C15BD72EA74C7E64809CB28A1E9CD1FFCF6F0D95E89C0082203EE1B99DC961502E2CD7394F
746D0DD220221107D0FA75F9D1065AD5E50AACA89E5CD05A887F652380C52D6ED7A23DFA7C6C
961FFA62822966F47C6B972EB67868AA05E3B98C0218C2F5B557E7963CBBEEB9F7904F3FD148
5F9C6061463CC5A8C63FB37353A9F91A941A5233A1C91734B974356F956EDA4861C696040503
1C3862EECBF2D60F8105103B2E94F63237C8BAE18512DD71680E1756A66187B6DF18FAB88E92
17DF1009DA840FB6108724C53B28A446CCA6E77AD58E7A0B5263B1D0D084D9A9277172BF744A
593348DF5F2BCD1908EB5F0E5C022D880EC175235AD640636039A31E5EABF13A20567DD0463D
7ACAB806C8A0C6FDB4690535B44839EBCE5870A24BEE57C219A136D19D2349B962A2438C2006
8FC05B9ABBFA2B8AEB4F54F93A4174E1FF9A750ED1409086EDDEF5708ACDBB6DFCA827DD69A3
ED47FE200A833E2131C62CB0232A98BC97CF79055790768E0963DE704A1788114A776E0C2C46
E6F28714704660A046FF609BD52BE3FB594E11755C0C0966B29031A79FE3A12236071C99ED22
50879642D8F00D0B524282779C0B93B7A9BC7082C1DCC4617B379921E150EE80FF63F54EFBA5
5500424EEAFD019C8499FC19FCF839C82EEBD73AB1B384E40C15B2E9FA9F7CA275A15BDF11B5
9EC5B466BC70A3C93DE6AA3C484669A8F3599234EF29F9C32AD1116AD6B1AADE76E1E243079D
0071A7CEE4B8C727D6910F5D232F416DE5F2EF1AEA4582E2D8C6DA8750C1C92E980F25B3B984
1640367D3ED86AFD0DD86303002536DA1A74031CF3F8B24A052A28EA26C684E147DA876A0BD9
9A841EA2952A82DEC1B73FE390978CCDCBBC79C4DDF03F8CB14993BF0E4606446E60766E3B91
1F27425E6707F373851404B512B86C978044A676CEEB78B07C6B25C08251E668AB4957CA01D0
3BB8060F6C602812470E6D29EFD4A2A319ED334AB78CA2B86F8C2D12EEAD5C7993FF7C6F4801
61D09CE397B099877CEB65E4BB0341DA047219948EC5281059FA79CA552C78E5F70A164B49BB
3D42F9200196EA4BCB09F0CD455338862B07D7A71A77B89CC90B436FA0EA66653372AA9A5052
CABC6C101BBCD02EF1AA3E7729D3158FBC660155548512D6ABBF57C0790E415D35F837C17474
E9890A3B084181B25E5114015F9FE082FC0EA9E7B5FC52A96D600C8A468B96E4F1DF4155FFE7
D679D5FB03FAB3ABA30F23CD59A69128417A45FA39C671E38FE0E73AE45AB4E86371235805C2
1864E4D662953CF4F56EF48947164620B73F0F6CF726483F484387E30E0C8D6B85DF65BDCDCC
699469CFBDC9CC0CD18EF5C7E6374804FADAB6489ED03057986EB78DA63D256170FC02EF562B
EEB6104634607A46ABD11ED43959019AA0E60CF6583AA33EBFE9D5D9F87187E8CA37BB18B11C
8D2453EE4A2CB656B1A918409AE8A7E680A422D019BEBE725A0DEA20709B6E55A408244E1A63
80796D49D8B47C314995477A2FD3BE342BA7996BA3A2EC756AFFCFDB2F85B81E1E21160C75D2
456D69766BD6382EE5413F69F7BA5D0C45FA751B9472F92BDFBD0450AC8005843E8FD23BBFC0
879891907F2E83E3AF1A39DA51C69AAFD5242CD35694A6B9105B1E39B0A3B0AF8425B1C9D9AC
8B8EDFFF65CF2C54F76CBAA5FBD8E2CF4CAE30CC6CD0D715138E5A2026CC302FE3192D787677
69266777AB9A4D5E2302F976364AC1BB607F4F271E5A6B3A288B9F1AC3ADF1F7CC7664B89B52
D0DDA07D24281C1430288C3BCD69F3385027C9E0E8767557CFAEFDBA78866EB7FF8A93D46E8D
134D11393D904C0BEDC911D14F8D713B34C75DB18D1EC2B927F03DCEF58B7EADA4DB25EE9F30
B8EABBDE2698637C9D679B593B5AF80AFAF5E5D3CF0F6D6A862AF85573D27F627976E6A5B45A
643F3D3C077E2B2CFACC0A152978CCA7E6547526EF0F0ED2191E864C33574E4D7C2F1BF53074
92151A031FF2318EF89B60EC3024DE4A2430B09EF2FCBC03ED59A1836050CFAFCFB67AE7C838
7EB05A48FE8C1C926E793F0B4EB3A0B44AD5D2C31DD23DB2B7B0E80851D25842DE373084477B
A7B80FCAE515D36919FEC5394FB64DA4DA9FCE8470AE48C7FB0D9B39CB00D5687CCBBCF941C4
BE7A7A31045CA94D4CF5C435B6334D689B784D790EB57820215117F3F9C9FBC5B84A400E368A
A24502D6938309CC57EA28C7B0B3239333E1195D0F2471314987C7497358D93E29840DEB87C8
52596511CE7B47FF0FA563F2964C3B13B72A71ABF84F6B92BD21D825D2F4D4577412852AF44D
9A7221F6419138E51EDFA07D4A9DA5880634F086079544125C958D2E2BE4BD89AAE72E157348
B261DC0D110CA2E1B2EAA8CF48D7F4E3F90B0B85CD993B690645222DB94EAD7F7374CBB8CD1E
886E150289CAA596CA324129A748B4569BD4E2BD84040834D88D146C086BC8C7AE8DC60281DA
A1F095A452887C592D608E3F181209818499BB8452B9246DC1A1EB5DB74A7A0D87C7A4194866
75A7262E7FD78436E6DB4FFEAFF54F0CD2404F0FFCC33B84E260C89627600C327B106EB4453E
B96FD7E6B0DA05383228A7EA89588F9A8C05FDC3965237EF7F62CE91921319D43BF2CFC8B319
69406FF5D571A561BACC58193CCE352732A106431ADC90F3C466052DEE0363A43C9951681AD4
9AE2EF03E1DF47E14B17743526B68AA149D3C66DA744A96AB5A13898AD4E6B9B3EEAA771850E
8B7F8D02FBAA474835D7B32C26AE5BD756A7C166ABE2B5C4388DD2EEE400608C1CE263A1414B
844828886170A8E36F9F331410D6F206DBAC4C5F555EC9A1A6A986980F4B84C2DD9B3CF09581
4B58DF6E18AE6186D048FE0BBDABA353D0CBE0F61D82730F226843F90A2C1419D4721EA9933B
E126E56E459ED56EEC170943717BC7ED9C3E7A859695E65EE51DCE3AC52DE48335F8C9F44701
4DBAB875CE9B25209530C3C939C52B8F5E02F5A4216E70D5267F4809DCA18B0AB69B39237059
D544425447DA91DB149B64E33DC287DF1439E381D2E258DF8C9B7AA0CCC736802D89CC737598
1DA0D1C2A8D37137BEAAABC75D71E798C6D62D940C09D40EAE499B675912E1B7608847D616D0
3BB5243CC8A191613A36DF986279199D4925D366BEE70E88FD9D55419222CAC9D924967C2587
9F12D234A2F0BCD03809CC6A120E8B0A45764D297076C07BE5DFDF3E1CA254A6F3D1E36DBD9A
DA585FB10F1AD73B0EDD1E1A4B292F7734846F0473EBF77C6C33B0769C5955E0682016313242
59BE92F11AA079F3E1E3B21F22AE6FBBFE0D8FA5A9B12D296243849749A4048616CEEE6E7DDE
FCD7C23CFFDD45300FD45FD61F8BFBC209EC29833E766E91A084040BF71A9A9B36998AE91CF7
BCF7188E9A72EF961C756D4A0E37179D93065AA8450C014CB110C87E1B37C0590B29DB7D20E5
9BA31B76B0FBA56FB2AB36B4DEAAA03C9EDDCF42E3EFA013D761FC3E0BAA097BC4E911291708
79A82546AA11155919DC0846D50E5B4A88A311923ACC35E9A944EDAC785E6A568981FCF90DFF
7F443BCF3BFFDEBE96D6691CF55104F2D37E89B7155879056106AC48FC8B3B2A7DEB3D344896
13872472B8EC704875B61842492458760783D7F39D734B7C3BCA975F19C3E9777EB4E90B16D2
17C329D835B9F8F770151CC236CB50330094AB4FB07CA4F29C3B82279FAC89295464986D6760
13D4AA8C56D62FE9159C7F09FBFFBE9D883F5BF9F7A8AFA937F213777190600702755004E29A
D68DE3BFA67E9A382D291E9134E7DC0B3FE19C66D05AC4E337C4732901F521374E3E02053B04
9668C391B29D47F4E38DB096858177668C95B4C3C121E7EF16D29799F037354A29D2CC09555E
75CA1CBB8FAADA4761C55986BD54F3B0CD83CEA6AA116FE808B4CBB90CFBEF3BBAB02601AE6F
D6D8C2805015D7388C2AD80F6AD38A1D794F5954B3FE20EBE453E2EC932BDEAF054B00CA731F
DFF144E787C2D43B8DC3A03077E46075F411C082CA26548C24AD09691507BEF5C399181EE654
7DBB53B08AAC6D1C3EEFFE5A157467932851547662A4714A35ED272F39A436575F80F974A022
DF273119EC26B199D23E3FE508CFD399075DD0CBE8C61A5246C4839F885322D004DE37963B57
2E346EDFADE2F539D0EBB120FACFAC9E282B86F02E991529EF7B7731CBD55D332F7192FD8EBE
F82CFFB8BD596123A888A7239C262C5F6F8308448891FDE7FB734DCC55D9602B7C29A183D11D
66DC3A2870138391ECB2206AC631F66CEC57FB72AA16C68A64F35727A5478B40A79046CCCD5A
AB46DC9DC8DB8DF5952E01A9DAFF89BCDE474C1E0796B60DD6FDC08773679DD3E7C4274286AF
4CD6EEDED9175C878B365F1B1A973274D9022512B07ACC7EEAAC5C8C9F478B1EB5916679F0DE
3953D5358719E22AFF84CBDEDA7267B9D146EE7473D438D954B65C8E774A0EDA12B871CCBF2B
86FC28AAB26A111CBAC490DF4852133874B8857DC98FC5F557BC9620ED9A01CF581B914F9C00
BB4B7D9259034C8CDBB95872DD6118B6B5D655BDE8A58ACCC4960E3C32A1FAD1D9F5BBE80290
C60F77C678A07D214E8176730C98F9E77AEBA08DE74C2E4B5BEFD77ACDA1BF4304AB7104FDB2
AC108449B3662F5B9378349B31030AA9A0D618B4580D6039A9DC3D589C576A0C8811622ACE2D
895F1E2FB5252D878BB2C61FB4389BC4173B1081BCDD7F44921402A3A600C5594498E30E1B22
676FBFCC45CC0D13D5061ED2DAFBF2BBD3F871A6D47FB5F9C5ABADB4C63638263947D203DC3C
29972276B44E8C4C355D7B65C1A2A00715DA1962FB6EFEBA8601129008522D75C546D6205B04
42E910EE2D7511DBCA9E1C8FCF12DA90ECC2FB4EC8D63E2BF6DE20A94C17BF6B7DC932B44BAD
7C8A0F3B7F8E4A9B1BD437ABF26986E7291094E63F75D5E6F1F45DD49A89E016C1FAD535C4B6
D0EF8DA9A91A3C73AED1F6648233D9090A7AC8FB9D811F70A549B5A30FD65FF462AE96417C27
79C43B1337634BEC54C767B650C603D0003A907C1DB5CA65E297602F56B942289D5EE1F96D67
42CD6A72C7E0066C15D0E0D611BC7785A7A885489DE17040A28F3AFE225DDE39858482644287
2EDFD14FDB477666B135D83732D0B2FBFBDBDCC14909BE7613B85AA4CAA1DA4628FCCCA68203
68926BA2A6DF4E04440E04DF1BED95BFFDA9436FB0322CFDB068C1A1B8710EC9BB76DB7CF507
7D1252E242964125A9D8E261468B4E254A07CAB417A57A9DD1102FEA3856B64A64B531114408
156607602B300FB13773566D3759267E84754AA6E55A15118AB60D5FA8A6855509F15D15E35B
90EB31E702665E8BCF61946DD2D91329482E2815A2F6337D7D0EBDF7545CF7AA654C6B48D45F
CFEE082D441092946202D49711A405B676E9144AEAD2CE1686D361662001B5FA3BEDC610E0A1
33EF23E6FDEF462D455B760FF2A4DD9AD740E80D497DD34ABE959A95B46887C3181B50BCAF25
05A977222DAC7FC0A223556E20F7FB1CFBEDEB5B280F0F5682528DF4B90D77420395E2812116
34DC9C6ABE7504DDB7102BA28DCE598724CB8F0A5A009A83EFD297AF0308C681890A9F92B7B7
108BD1044171194DF7A7A039F7FDD301F84F795641A0EF785AAB4A9DD786E94197066D5742F9
DFE6DAAB64A42A9AB67B33D36CD1116F5D4FCDC2D8FB737C7C220B5F9D30C889C0BFEE5DE0E7
1963DD164EC264EFD3CA6E6795AA8EFC8C97281236C19BC053424444DA0ADE0172B821F6BB33
D7645CEDEFB9E26825E2C27C2523FA952FA5A1C8A5196A9440C3EB0585C9462519B2D0DB551A
76A42AF715CD5CA6F0F9C4C7E0944680932B3D3FC355761A795BE88CC2FA34E1AF626DDCC4ED
E04AB6578C76BF8214C305B778A2F32C0CFB69CDC9C88CFBECAAE9A963665668115096252D01
23E6BD77854AF5BE4C20C18A6AE5591177B30ED892FE8D79A877D3588D6EA8EA91ECD3207638
A94A14918A1311221D9D52C96D922176A803E20EE8CF6E549F9E3ADAC779C9058A7A4232E5C4
14D24BD049FDA3D8AD9361B8AA22F895DE20534EAA444A67A1F74A74CC95D7983A84E52482DD
3E7576C45A9A67B2185FC2125321A16E865CF28E878BAC13A029AB9BAFA43C6B97D9D957DEE2
7DA4F85BE9EEEE9050B2C092B117B39BD53D34623BFC77151A26EDEC6A1322BB75F60582C1A9
6B79F1A628A927797E99F07CB595D792B6EF5F0A1F1A892C4E4A4A8C27E92787F988A7C66C49
742660C82CDF471677B5E5BA3F906FD43BAA9FC6B7B92CA039AD1B1FF0E059F3D694BE592D0A
EEF8E808CCD9D971143564591836F4FA1FC80C7A0D38DF4E7940C72B020744610CD1C49D03C3
AC3A3302421DA851525D6A3E1AEC9BD17E251F6E299ECD797AF4A41C483259FD398DC9E39FE0
53CFCFC5D3F66CBC92A935905085748AFB53712C428D3EF68B52D9E2DA7ED7CA15E88AD7E978
0018F5FC22D5879B67C4474A8723AB895B8E1C414BFE0D1A4149C955C124F8D358AFBABC83BC
8E44ECB939BAB7A94E6B908E633495158A693F54C4C17BF49A1359DDD1B45B4AB7A1AA3C8936
1BC7C77168D6768391A77494E1194BA93F5EA7810EAFC7B891E9F00E5EB7FD6D65196A6E31F2
EE3C737CCF3AFC385D2763905D5291E7B9332C37B744D3D642438D214ECC5E2F347A7E54C91D
6960FD3A48E9B610547119CB0CE832FF2F43B9148BC86BFFA143C0B9F656BB535A9B847F6921
BB94023B29C2B61CFF5142B105492E72DF61AA8D11E7D57E5E6E51E78E598724FF0DDB2FBF46
016D43163ECC2FF9EACD2FD81BC3FEF391B5092491398EA978D6B2C1FDBB35483F25750C1770
DEC7D915AD82A664AA974E71AB870FD37A9A99AB2A931FCCD60CAD740496150296B8CEEF7117
4F866E17A8CF440CAC15764599039FAA86B123DEA05B09DC1D6B6CDCCC1F1323D292AB1F9DF5
C6F6F06FA5A82164A331E0A531AE1382A05D92C936C8F38E895A1A5181F28D276C5D5A4A19FB
884F0DEFCE78283FCA103A856038BB9DE443478C84CADF091A99927DFC5B16E65FC1068C11E1
7C4AB303B57417C156ECB7C253BEDDF2FE0696B7DB1A27B5FD5802FA7F3366E19AE0BB57C2AC
A8D5C5B73427A57FDEF3FAA7C7161D0EEBE023CEE868D11B6C768EF808C984CAA021628D5C6F
BE2DAD9C5AA87E535D0214D1B01D18A866C518827740D1D220179FBD8583CF18CB66908B3145
F1793398B9372E799AF99DEB62F132AEE291B5DF78A63E05E70B484D0E9B4BC0F539AE249784
012D44498BFE016714ED970F920C5D4AFFCFFE2DA175E6665170354348C3CE34678C3F1DE6BA
413981D202C21701E889A73CEA94A543C8F22FE6396C5C8D689FB39D92B28DE0235B4915946E
D91E3E2253A7D71285CB0C3DF268627D0334A0959716781185DEBB69BC71BE45E2F857C9460A
ABCA7E0BD4DD59E83C327C13EE0A9E31A0E487AB52864397D3AF3561F46B9E63F2C337ACC723
1E19687F60AAE3801CE91F92A8E8E258321441B85AC48CB49FDB03E030BFF1385DADC8198930
5D91C427CC0B844839602550E1BF9AD65056A2854CCEAA3E63C7254A5A676D07C5655E2E0D05
115BB2A1B65B319BDD714F53E06BBBD30C300E9920A86B4F9957401D18E30BA857D2F8655B0E
64F5060BF45BA627EA303D536AE280072C1DF549CA3810802B83C297DBAF9DCB8B25C4109ED5
85000A03420C44849CF92E0F4EEB90F8A850ED2364EA517BA2966926BF4A6F5BBECB8A953CA4
6A1E9379462D3C8FFD43721C69A425E3E410F06B22FB6A0782AE4D8619B1F81FA1055AAAA789
EAE744D80392D64D693DABA3B4AA748FA3FFF60FCC77C8A6F14A1F6EDC74B99B6A19548A2566
B4642BD0C4862B355D1D4C3B6A4EF740006E00BD9C919C2ADA474B7F98A7DD4A355F671199F2
4F4669B4876D561AE50A7A65302DEFD9425E79E2520CECA77746E4853081C4677296DEDE9EB5
47D2E873B96C5E79DCFF73162E27472CE05B74785F2C0666F68474E08E0FA09EAC268F1247EF
60CCB0B71D0D5026D9986AC1FF1B89354FCA7569EDCC74390A778EEA9DA950154ADA829FA983
4CEA3631062884D9CAF76D5A60236B3964862720FBD9A8B1D06E32CBDFDEC82018924AA3E695
86CCF88BF1BF2CFE5744DB733CBC01BE029F6817B9AA7B3EF04D3CB92662F07F6ABC5566EDA5
D20EE3C35180D2A6A2241BFBF1772B082326C52A084FD2C356CB17854D2AFD8196AAD3D93289
DE7C0BAC0869FE303F7862A6BE22BAF7B0164FAF03ACCD429C26755BE702F6256CC1F551D8C7
D21A815E45534A893F2143353C111AD5067E50FB66E7DEEEFD02FEA192ABCA05BFF835298A34
C6A980AFA74C0FE7FEB77818208DA15B0F4CF17E3FCA2E5BF78FC91BE5331BB28248C3F5B49A
63FDF55314360068171DDC99744AEE85C38A4781BC40E23C8095130A44E89C39D27D876B8B79
51D19CAD460AD8DCC7451BD301CE8E48D8D424719EAC7E5CF65ADCF2F4574872C76E657D8AF6
2C98CE01E39EDEDE27CC263D912B5F02365933C0E5AEAF12904873F128BCF5DD793499DA5D50
100CAB34863F274C71BF90A7566980FF3942DAE124C99B6238EEF3C298A1E4D21FDF8FA1FBBC
D8FA4AA40CCBD27C091586EF918DB7F95395E7FBF4A6E27E5890434C89371D96474FDBD6944E
F634DEB111AAAC86E21971A095B0586C468EEB760A2A11B1057B77A73CD0CFFEF17F960516D0
57B602F5C9C3EE4B94511EDC97B0A083F39116DC7F5DD4CFDA27CAA66A015627591A84E6BD4E
1938FA9669BFCB8BD056A11945B51EE19B729BD61A7F28A3660D9CC5DA4B2FF0C33B03BA2A73
DA8B9618F4A3E0AE650D81FCF61DD771EFB1ED519EF7D38E9DA59DCF5914D6CFC3EDC0B33CB0
30DCAB3A1B34C4C1DD60F3B005944D6205ED1D0D941C5D119ECE42C1F94610FC309B68F037F8
270827C93B2611CFF8E8B1C737A469AA408A03888B0ACCC926B5533C8CB72753EBCCAD077EB2
5F20A74A9087CF231371757DA45EC231BC8FA32A8FBB0D633B8DC9B25CCEE68D670C2F3F90AE
3BAD43D9A6E741889CA53E5C361B4E2CB2D10C631979BEB764FFB224A6B1E172E0F3CF84FC72
74BEC0CEBAD5FD9B4CEE916A3B90C568D41F82875222DB01CC6C5E242C461402140C33E877DF
C4C4FA38C17C60B65789E81EE8887C910147928502310BF549F80A0BD355EF582D7409292340
2595DAFEB852D0C5FBEE4FFB18F5B002CD8F27C5DCDADE59AD3628963785436EF1F08A823221
4E8C289252081E2F944A363D4CA54247A90129ED37C4A09F3E1C36CBCFD5A4E3DC3E835D3D63
4B7CD7A94A4896AF16D47392AD07D7BFB71D52B252B1D17F86135F293940A9B6DB810B53D4DD
CC2BBC1D9F0EE277925D4A451F4C44211E301803392E5D476690D5C244A4B996D48EA060883A
16CA4ECF336E74B1D4DC623D999FDEFA02FDA142C52EDBDF9630C32034D01EEE3D8717C2B5D0
B30E7F45DB66C4CD5FA491E01AC5B42CFA8882C2CBC80998CAF47E5A5F4C7038D828E2E48CAB
1CD66BDB5C47D048088F6AA04589589F6A42FEA50109CF2D08F8FCEE4E6B99FB4BE44108C3E7
969508A8227FAC740582EBA514C9F54692C771ACE17100D881F01BBE2180ED0524DB228A1848
4AF1FF5EE548171BF7BC6C8520DF06459489CDA7C2C52D4CF1D32CC6ECC560E38D037B7C763D
89FA6E73D6146C1855DE49C40240FE7E57E3DA78074B1B811D5C80C31F24E3B3F86EAF4E79F4
6873258F3187ED9C9F5B5FC9E724FAE144E39400CC89C840444DC1172ED7DF4001AB18EF1BF5
384CFA362CE93744221233DFC411250C05CF22244318ED98CA3DFBBDBB9C792FA25C37E526D7
6AC77C82CA4059015DC73892265AAA7C111F76ADECFD42706DE2D7B99EC43FF7CB4865EE0C44
7A685AFD41CF4E216CDED60964A300673EDBDE61F8D11036296DA49FDE277328E646B32BC797
1A600484A7463C7084DFAA3AFF48459ED0CEB7C012A5759263EA50493830F0F152C12C87D469
BBF8D150630CC7E0CA1DC96A72C881E6572F1B7677E270C7E4A43FBEA60E0B341A309E764418
944610997261106424BC984C4217C9B5A3751141426431A12E48C3FD5BBEA9326F6878F9A8C7
6988F3443037F769234C4E656DDE7D02F15DC6CC5490CB389D9B8476E5BD63979B93CB64244E
E2AD99160CCF8A0549754781A74D109AA2C3246750220AEBC2920890791C161BC73D691E7AF9
0A61BC447EE132F95C2A9D2C2B9CF4EF79855B76EE087640EBEA76C9E445F269AE284446DD5B
B4648F51F794B7D59A91C5EB28CF59FA0EB0854D19375EFDBDA42856214A86A5BDC3A3415BFC
C5F8CC20A191239DE0D266352C661AC95897C783EDC3E4F82E4636C36B5868D8971699B36821
B95B1558DD0F022E72131750C7AE3AF3C7300BA782227132DA8FB53127CE4853A1F7DC0EBE5D
0D884E5D421801EB5DB4C99C1B9BB421C34689013CA0DDAD308D71464E27DC99ED7A8D4B7940
A89BFBC2DABACC1B1D8BC63CD2351AF75C862427A4D943284946C968C5D97B3D8D7F2E246EE4
8F1120F1BF7E972E4BFE1568D515CF55F2079C6C17E7E2D3B49C36DAD852D37589B8D7F43C53
686CA5CE895B3624800B0349908883B172378B84111027E9A1BCF74AC7711C147EE1543A16ED
EB5B5B07C56D1D7D4892326F8B4D940769FED70A2C9EBC1C022BD9E271C9E2DCD603504B20F2
AE9D5DF7FE594D4D9592C1DBF2E25EED41CEA59D7CF7F3E2E71284DF25804B4F02EEE1403BCC
93556068ACE4FF8CF42E467EC33BAE01DAF5F79B4F3802F8210513A1E55E767C1552E1743953
1A138F99A32BF2ECD630532CE6EA32A0536D4B21C8EE164D04B04C3ED5C9DA22E005A4D728A2
A9BD00A3CFD12EC95C930F96FC2999A7E2444EA646B249E85BCF8B445EF8DAA20C751FF98869
48421E4B418F6E26DD3C41B3633094BA2B13992FB37CE9ECA0EB1B560686079881EB2B22F70E
C1D446FAC05D1B03912575334A119833995EDA4207BFE9236AA0AE2BAF6CDC0B473295A9147E
90C7A75072BD0391D7B704DB906DDFAD2047B1C4A5C6E536E1CBD66C923E7C46209673BFF829
F5156567B664F9FFE5713107A5055596C4306A2605E288527DB95E8E7EE36712CE1721D90110
980BBB1769EE8BDECA7951078E85176E6965DF1B0BC479B177E93206A3B12A6D4C032FA2F233
2FF912045480509C2A6AE3B980225C65F27797B51A3C821515472CEE3919F9F7E5EA61F5424F
AA10D229AFDD13B95403693950549F6325D6585F42A686D782209094306F2B40E28DCDBFDF5B
CFAA7DD7235F5EBF8C02A7F80E9DA2A2CEC40C209BB04C87F52FBF537AFAB78514AE04C505EA
BBAA1126247AD2DA02D01AE94FB71B45CC5BE64FDBBB379B5C0DE69159FB7260859EB1442A08
86A4518FBFDDA539A7AF40F1564613E2AD2711099435C8A9B60B60A7973D69BE2741F57406D7
53DE31044A6D2375394722503365042542EC6F8141E1D9BF7AFE767EE11A92DC2CABA951E150
AF54845EA62E5816C4E27B8AC068AFC25C16291CDD91FB8323C431B8F1EAA812D3908ADAFA55
C5D279C377035580D6627BBD901410A9548C4720C98D89F515AE981BBACC124C868AA9345E5E
F09576A7B6417E3D985C52F3C7B0EC3A461BBD884471829845D948E86E80D0A4E813812E3E88
5CF87B98AE1DB51CB37703DBB27F4D02E1AABFB26AE21D5FA3A8D35E7648901FD5DBE23D04B2
A27E86FC41803E67C3177B1153C8C49DC27AAB89E7603B91D20033BA2275CB86FB4FC64341E4
C1935A18344ED6E27D23DE0B42E00FBD8122299267D0352923F930F298EFCF03915C52224429
C4E11EA1D27338720542599ED422F63FA820112B72C8A1C1D159D8273B50F6F373D8604A90B4
45695E4A769AE5CE4C85559BD7F9961AC6EAAFB26845DF83A4FC6D89BD9E91F1F27AA38D0A25
A3C5C8E759F31D823ACBA9503EE82C0F2F13CAAEC938BB785CC82C6629B227617A2BA66E0DC3
A57DA1A9F5D09420A7527E19A4348D793FEFE5A3CB13C7398BC8CEEA7E5B1EEEB80AE4F71C50
8120B950D4F228DC8F294140F11ABEE23A17DBA41CD271ACFF490653EE631C3B05DC4FC682EE
F1854E562140556D6B19C7FB3A9582FA768B00928AA624CFCB41C4AC2061A365FEE4588A217D
E295501F0F0D4B5D93A0F95EF093AD37A204F0C3A5D8B7195216341F6313DECD91AADFDF7FBC
481B49DD050365339D1B86E818C95572A4FCF3F95224C7343579F55EAF7DF2702C858C5142C4
C493869381AF16040C7A0E855914247C96DC43141F02009FFF2D4B49643132DC43E99C12DE39
B2EAB6175174B01BFB7D2482EE3D9B7F65334A5FB4BCB9DCC7745E599EB4D2E4274B345FAF13
7D962860A259BF190764147BD61451E2EF77C4001C10716FA2F10BAEE1CB05ECCD49716964BC
A7B1D76ECF99FAB5882FD1EDDFC1BF359F4827067C0CC6EE08B405024E2582766E96F7B0B008
8829C06DCAF411D70733379BAF5B9E581999FDB83A9C443AAD1A15F25F88FCF0E0E8BD82F7A7
688AFDB1EFFD44AE01EAF97F8C6F44DF561B9A31EACB9CD75F912279AC7BC964988A663E4315
0184FC1A29943463AEE19A931415B548E4ED13C33DFC76D7E017F1BA3AD9D47424D4D112A3B9
D2BAB92DE15B45DB939FF356924634EFF6EC38AA657F9D33763BF394DC473A3507CC97D396D6
918617D6DEBC032DA6EEDB171F3EF041F3E478D83C44700E7C90DC710C4909D5CC37224F041E
4D21879865EA2F3AB902433C179708692BE58A78C39F5A296770114A2A49939C256B62542C98
C565FF65B6BA80655975A933A0F7FC78435EB9CC4BE04F8CF70AE7162C4117648AD89AB90892
9216CA39D5B0A69BAC6D64237B9941539F83B3D1C77BF9ECE6A9118EE3EFC6E804013F3262C2
8CC846D0B54D56C862FC81E4886EFADAB272BBA1827A2263C038A228C3E1D47F38EDD3E5E878
93A42FD945481EE5DE0788DD583735843DDA1DA0AC421D49EDD1C6B58DF98B0F0FAC983084BE
3AE06FC7B4BF733C5542DB10026067523E5C62E46F940A7106C2442BD1D96870097C7C3827B9
5C4AFDFF6105E987FB6593E399F258B0C5E11EE9CA3ED47419F49B84A3AA12E4E83DBEF90A5D
0587080EACAF0D1CC33A7BBF34831FE786032A9D369D17632E133E33150B70FC0272EA8E1BD8
4CEB91AAD758755F89D2E10DF29869CCAD648554A2D4EF69B1497A3D5F5C6FF3893A4DFB54CD
E3DBA71747BC0D50807B89892F4AD884E3F6A933846741FD9C1F45D2802E726D81E3B0697FE9
5B603DB64CF7BF4157883448D9F3A64F877AA16DAEECE1CBD8BE3A586D7DDEFD0FBEE8D0E476
FB132EE53D60AE2D0F29EE9A6E28A6DDD9F3FC380157616C22A0B6C00A9CF0978FB879D6EF04
3E36599F477A485C76EBE7550784498084821DCA670A4E5A21967BB90FB128B48AC7694D4494
648301EB2461329BD70F103B97D5A9B4DDB271E62ACEB362B32A00177997EDE2EE226381EDAC
40A05533A983D919B44CB8CD1950FB3590781548187CFCAF63E51ABE0AF5F051DD76D6A29969
B6E6F823DBFF253CEDA7E3B052AB03142976823862ECF2EA3E32B0FFFDA367C4778D0716A82B
E72382697998CBF2C614FF339F1490461EDCF4DDBF52DA7C015B907A929D34949667F3D8DD24
3D43E71F784B5A703CC192AC10C0A843F9B89E4983272527741D4C522129716588A9813F02AD
092E48775391A496C8C3F79D687D2BBF12F5B86BF2F4629141CF756F7F38CDAB54DE7A77C2DD
D41D3E6F2ED02B2EC4A6A7460DCF154224AA262B7F6A1DD28FCF94800FBC9098D5663A685443
76E3DCE825FFBC8B0A61E3EE109A53260445EED2260DA756332E19945C154A9C639A497D30C8
11B1DE64DFE2607A0B1C5DB90878F450B129D57C2B29029ACE15F2DD43D22EB6FDBFFAA23C05
B067CA9E051AD4CA5D6E55A7FEDD46A15F5147DE70C80F50D0EF928C7075C59711D5030AB145
7C5D2C51376B991FE7727C420CE8CB1A264ECEFE68D72CBE0DA83FAD44E05AFBE9F3053525B8
BD6DDFA02DE16EECBF34C8DA4FA6D37A3CCF579798C2F85FF56EB0B6EB88F3D214666F59A847
FFD3335290191B7851455A658A41716D0E61BCA62C9641356483A1CC0F62B58230964D778FD8
4BCB3DAFF8CF7094362884349B7837410FD52AD56D2DD4282367A6A3465AA0F11BC3AD5744B2
8936601D96DE4B9730D9D5873AEEE0CA8F2001B9A370DAE2E5AED801AC5140F02BE6E7F15A94
4A8CDD785EDADC20FA7086D4ED7E9DABE64DB40EBF6DF3F91303B6B70E0A457FED49483C15FC
766CBCB2768216E2822D14EAB6A99218B31C8EBD455BB4C7A25FD6BFE98E81D04C9829438FF4
80B3EE59BA8C6B4BACC8ADE180EF917C6B65FED47FA4C95F4197A0D5EF8D795BEFDBCFAAA47C
63630F0DA36C88F43FFA4F07101AE1945FBD5DCA0289ED8A5B386BC1AF449BB87F363E7C5895
B5CB8B9BAE90BAAF558D08EE53B434362A6FE2E95175EB40F790280390551AC1B547B475FFF4
028EAA85B448BD86E0D7023A3FC0E1E8B1E26382F07C72E3602AA2E87B084A3933F61569B6B7
A1CB140F707E140CF750252DA20867AD081655E90C9120EA7CD2E7BC88D62FDB2A6ECF413FA4
3ED6D0EBD1976AEB09E1E21DCC696D98931234AD794CA92E8ECFB686EE5682B0A4298155EDFB
F3A1B50728ED4362E95B9DD6963470BA42508C12C06B1FE4F02CA89002E1F43DC0884D7F9244
53EB97877DDF4AE99662DD817C3B7294E81549896A9C0D4CA67FD1C0D6E8A9A4380351C4AB6B
490F8A3C446FCB3FDDC7AFA7417CF0E63D2F3D83BDF52800B4B3328EDC223BA2229E0CF25F8D
AD97839A82C029ED76D4AEFFEC7DE8DD2FDE3224A165DD190C434AF5BD7E71C3935B1ED674E8
C2631F9094BE121E0A4FCE18E86E452A404E5F3F7EFC1345F3736523C67BD10AE64D5F827764
EE7264B53C2F7B4EE809C030274EEEDFC90ED0EA7496A70DF1E9D29FB70B7F25FD1D47D54812
091BEA1B2F427E9FA070FF0047B4B55BE327367D1F41A077661B743A25B64D7DE8DC7E71378E
EA565FA4A949F608F445AD88987628950A9CBB305D1B8B6A28E94334B51C2B6E85AC479A4375
A36DBAA844219A5F267C43964CD386A58CB262B79BF5E97644BEBA033419DAC3AB7A4059C29E
04A7F96D2E37E66A6A73D7C81B519D927110C68A3D2EF49DC8C7766E14301D47A25347959B22
6E0A8A6E3F5EF84A6B14B89CECB1ED734F6125F15A8F67609BF353AD997374A47BEDCB758E60
703A7688A978317A1EC3AE104AB21DA77E0EC2D79ABCECDA08F4384850F96E28A1EF836C8E58
FC4B10AB02DB845A16CA4D5F05A07E102EC1B962D69E133C6EF046A73C14ED81419FDDC082FB
B54CA9F5CE0916BAC0C2DF7FB4C3836BE7EECDE9A20EAE6906A4216B1ED6741A0EE19D2B1729
F73A42571D128FD0EAFF6A475D694262F4B3A5351071ADE5537A60E83EE90BA6C7E68B1D10FD
15B47640C9E09D1C7728C71F85897D000CB885849F95150BD180DF66AA03BD3249EAE1C31107
58A2217B0FCF0FCE5C0FAC8FF219DA3558B0AED9BCF55C2A0C6D0A0098B4805D2101C565F564
A0B0FC73FCA947B01C7308F5511C56D1D3178EC5CB5964AD3FF16E96776789C78B301CF8CCCF
DD6D073A749EC3CC312A7F619C9FD552ACFC326A4C8CF11993C18BFB1ED8ADBF4190071E50E5
6B5269D157D57A268DAD4D222349720951981D9D7D67FBAB801CDC52B3A7246C065FEC21554E
1F252AC4191EC0BEF9D7A3087C8E3DAC7541EF6C0C814C8ED150063778DB1856A7139E5D3AAB
365FD0BA5627F1961173198D860DEE80041371A9EFAE8F40E8EF2227407A970E2D5B9C17161E
E33996C32E649E3A038A57CE2C1E48ED2E5FE4B97E21E77DC4648BBD237B883C46E4C3BC46A7
668B5E2314716610909D8442B093900F05F22D2A74757D14D8255561F55F0E4195F43F1A7CB6
0DA3DB839050415F8803865EACA26AF7DAF557654D411E774F868A84CBAB946F46F67B8B8D70
BF3403B92361E83A0E50F59449D2CDF8B8867820178AC711D36D82D22FC961ABBB409CBAFEA3
9795C836C3CF26A218CF5B89CE505A8B12A347B97F636ABB1F6CC33EA8CDC31DEA4035CE524F
59A813A35A0103EDFAC2A5AAC87E62835090243E6464315C37A2820253B7E2A0B1409B6B3911
EFE5C9EF5E14553F6307FF157B5B8C2298669F5899DFE3F918A2DFA3BF17A79AD4643F801E73
89D09BBE1BADF12BCDD47C60BFAE66E04395D5C230E93F0D37D2B519CF7227C3619C2FC11B62
E2E1774A3198B7B855A28DFCE85A85CDA2608753A4AEB481BF0B8C48A8B1C1A0ABCD70FFDA2B
1C653DA19C8748B3ADC819E2AB6DAD95BE57A5CB694336732534AC89C1607800A822DEB71576
281CB19F95C25B1E074A76EEDEF5F4C12C124A0DB480CF3A9E43CF9E156D4DF98C64E5F56599
54B48CDFDAB3FB52B569BF0C89A0F9A9EC191F31FDA872B75E93E0F23F81FB25B16B51C72BB8
F6122A3542A14F1498A6DA9DBD6299EB42DD7C26B913C6FB7C14D47F93229E34022505ADE87B
1F83BB1AD18F56B9EF96DAC6993803FC61A8009E20590769F97FCAF5E467512C92B369014551
022398B05EAFCF66D19C03D632244F54023B2BF91A54F29EB0FE77A85A2D37C97598DD703647
B9A6E01EF76D02275369551B5DF9F49EF8030674BE38651048DA6144B601EB1DFDB120AF2AFE
9DCC492811608291333F37DD2AC70DA71C41C460ED4109961496B87118F3A8DC8E990D3A7DE0
46479732F6C8FA04BD885A5B75CCB51ADFC03D2ABF271BF6EF3D54094A9BC04B06BA7F812E21
2B6F2D75D019536E493DE363339F6963011BDDE566861211D76446192DB16E044E9FA65317E2
1500DFD6806E514F0635479902CF88450FFA671C183879CB39765CF55B9E136595D9F5F36CDF
B6F774874C54CDEA2E3F4B5173C967AFF37A0DBEFD3224C266B1BEE9CA10AF9E52301A7E0E90
CD51CB18722E9C55210487054ECBA7ECA3516B16DFC0CEA85F389E12EE4E3730B21639150CA3
5DB82E1647FEB3E43FDBF4977B01A6415364E9FCE15A246B3C1AC1D02CCDB696E0E35D4EDF2D
7E1093D08B7090702A8B549E17E652319F278117CCEBF5EE18CE0BC07BABEFB2C3CF43105E1B
2392F614426D6E1FF141F75F89C95F10EC344374F0357EEF92CD2F4028AAEEAFC3140DF3DB74
8B499CF12C3BDB28936B12BC2E83660B5E09415511DF8FE8BB11D57163987D7D53A58F9FE9EB
A304E6193894F0F4E8B83B8A83F11061C4FA7AE1F7989DB884D857A42123FBA3009F0F268C01
8AF836CF7442137103ED1272BCB2EB3161A73B72405D0BBAFCB2B08FD9F48505DBA221B834D0
C548F4584AE6AB00A36C4E52DED9F91C50108A7565AA3BB3713188AABFD11A8D61EDAD0EBC63
306BFE08A5432C2CB3CA9198CBB735D7F9094C10724883BDB78E488AB283FE09C8D7E87A2F66
267B2154C0F3607F87F7295B65A88C8DEDE51F96156EBF5B7D62A11FD6A3907F7CF6B91C8A66
594150B37D3237A8C8FB95BDB7677B6091F776BC0B9E958BF57C1E896F10925029AC13978451
E0AF24F920748C12D8F2EB5FA9BBAF27136D5BB517A919C4F767DAD3571A54CFD0DE9E9BF069
21421F288887A1EF09CDDBCD963577D78E0D0B58A7FBA75587F8FAEF9A5401FE582F80AD7403
A5840B3124F271E787A4874C3720B126315C2A9D97DA12634E1245A00B3D1DF5857FBC018EA1
0928670437C40A41933883891D373968A3C02704F3215C2A89C585636A1DF5C222596BEA1F88
E549F692BBD741560A73328026E35A46942842CF7E6356D86FDA3DE1A4524A0CC83D6B30D763
FFC205B53B2CED6930C68BB1F3958AB3CFE6AD4A0B252BB55FDC28350EA781F44F74478A7E31
6E3A43F8147E65B89C15FA1696399B40A8E80834B91364CFBACD56EE7A7C5085AC4D74EEDF83
0CAD674E929C37CC167CE8CECB8FEB6EC52084F19A15AC5F5ED7A526E9B0C7468C79AD90DD17
71C14ACC3519B47D4A130CCB9F3B6727B056D4A322D6E08677FB6270BCB2DB766A9E96A82310
F87E8354EFC402254DE2F8207CDF5B7DCD7738E0434BB3F507D8B9384E4DD90853113DC0A08C
65EFFA8825A1C114C7AC5D033DB237BC0C84EABDAFC070FCDF9E3149D0CAEA2388EBEB238BD0
A66448E3CAB08CCF8A8C1DB30F28A8799766ADAFE1A8DDF36067BD8677E1F3FA38F93E7CE1D8
77796B22F8EE59D3FEEFAFB1216258A548D3435B550E21B676ED1191C3C1B244D0579A2E4046
2CCC8B3611BC3FC22A6AD2E1525916E374B42CA0B37800600C08A6549A123787716EC5034CB3
9907815430A08AC3E587731E4A2D208D97E3153C110ECAEC20524533F425D4123B8B67D0B5B6
E668E27272AA11E92138FA67675623481D2FCDCA57081F7000A00632FA07D8D1EDF5E3C88E7D
2FC3097AD9C636A233C8EB364BBB5478F6C5CE47BDBA078BADB4FC410D84B6259280E9E3B73A
C58F5E7E2F68F08BD8540562B676978E851FED7C719EF8430FF536785BC3F05BEBAB7F512BD9
0F02A39F079E18502E9FC0DFC7B3D81D2EE1F066A67EA9DCBC741160B62A16BC722A2460E70C
EBF21E55368AD6390C6F151649F504E03B8E7FB3BECDFEC89E3CFC2B81164D86F4498832B6DD
61A558D03090126FD4A6B3B234DA85196B93C98C7C9A5E74E76FAC5B8B97F73A894AACAFA275
04EED8EA0F533F31A57D2A6FB0B396C389979AC060DCC48B2955EEE7BD2070F78BFCC02FF6ED
495DB770A71E24EDD0717F7F8F0C79CF14EC83070ECC8C16F3B905CF79814875C5BAC853DA1F
A00A2031D0594374219324D1983A7E30AF17BC4289EFB472DA06B2AE06927ECC0AF0E02E95FE
7B2E1399BDA96AE70DBAEF5EC9A7E1102BED3C50F25DA5DD0F51A8303510A6F55793DA47EA94
E8478FB110A9893A32A9FCBDD460BB73FE92E0F6A360D6AB941B33618324DF03857A09623D35
FD33F51D5668F202B984DA65F56BA77EF6E898E1A0EC958159717BE2ADA3A76D8991440FE4B5
54199FCEF98C679BF4AFCA4F70C9602A9B6BB21E62C3D28759DC813E78345EF7E6B45C57D760
148FD6AD015EE163F2CA223D58AC7D18FCC94B79F0D00AFFB4ACC2FE82E119B229BBB30A82AF
2CFE2C60FB101240AACF1993F34AE5E9C656EF1D6F42D6361CD110C276722C87B69AEE3175F2
541B3E4A9FE1B0C1645DC8ED0920FF9EFB97BA23B261ABCFC6F1C3A6830FE5AC5CE4EBA2C228
6816AACC94A9B933CCE2CE73BBB215AA27D677C82972BB5D1E53C33464514586C81B4D87DAB5
44A6F414DCD8A11F692A60BDC8FDEDF172562B0D678133A89C2901B8FC8A4ADEA65C2365FEC6
EBC3FD2793E5382125AD6B04526539B2E53F31CA0D128287E3ED9E98CC553C3DFB7824FE6F4B
158CE78B7B968BF69C683A6031D0D7F7D26F801EFC38D6DA539981D373E345D60AA7271A6001
C78E053E3EC45CADC381C719F8CB1226833D6B5E73E1C639F888CE923B10910F71A3FEE1165C
18CCF8123359025BD638D86A8D35D93EC202B532EFEEDDF4F1FF1BF8DC8B301BC7C01D445820
7104F56E581967FC6F60C2BDB021E885A49BB9317EE64D17E856CADCD4B03759353CED0557EA
06A778B41D05988C97A885FED5E7AA813763E482E92AD1369C09E05D1803FE672DC66FCBFE3D
066B60842763E5551B6A55A19BD8FCA72551701ABB874E09F199600136D1C8BBFC16E0CB6F4D
F7D7F63B49B0300957297F2624A867D3C547CA5E5C4F67FE908110D7F872210D844865A295BC
5011C7447C3B41942E7704AE5B7ECA1F9585B2D0F453FE7AF2E6C6F5E158FFF1F1A982FBC8F4
90AA4976D2596E091ABA9CC19B264E0E71651218E2C487823A73F068CD201380C8A39A7A1329
2B10434A4317B163FBAC2E2228A2079E8DABCB89A922773DE75726823F1CAC3C1F3EAE89F263
629CF5CEEDC42E1BA576AC07CD8F136275EF9122505EA08D4B830D06232B5572BC5B54BF0AEA
EB52675C1DC5B23DFDCBFC186091765368797F4B336A83F61A6EF33B9B3B1A75077D30F78958
B4911742121302AD1C2B96F6911ABDAB62012A4194BFBE27A91979261E50A762B47A33D88205
FCE4EEC012872DCF09B1834C5533F309AFED3C5304BFCF8FCB7A9DFFD9887924872A02CF80B1
0A9D5CC93E1774D6801DFB8168EC3EFD094A313E40138BA7C43BA8DDD0198E3FFE615C45921E
162633937115DDEC6B4E759EBCA9A0BE35F90FE2933CDD39AC6C2571140CC8897B8588BAAE23
01063B7C18D4693ABFB71A54D70210F08B9EC1C2BAF766D0D6C969C2D9588F3717DD00FC43BA
DA9AE675B1AB24BE802F8496C2E85178BF1AADB98BA27D15BA3EDF9B6C545DD72E022221F216
6A5595CD74939C1A723A2EEF866FC5E771732EF0BBF3454C4BAD82E4776D9FE6DFC4AB4DE839
4E36F8752BA6FBAFB754C5F0E4CB2D428EEF3A1502F36D2A7292C7CC510FBE9BD76A6915C4D1
BAACFD114F0296EBCC54A77E34C8A954045E09B6A2314BE1733C5EF4B6F334708A74D5C14FAA
86D00FA5E116F9C0EE7DECA48977E00CD2D6A1B326C1D8EFCCF139E2F261BB8CBC33B9FCC9BC
78EA7C469534D3F3208281108E19DD5CC69800856B8F747532B3F56AD2700429E4309B0CC8C8
3F414EC5F17C64A56D917311E1FD55402FBB220D532A00E7F0450F2A7CDE439068AE41432446
62DBD27103D92419BDAB593B09939E91A6C55DEC96D424CF8CE8C1F858A59660E3CB669C1D84
17A331DA3A3F46F6D3DC1380C6FB548E51E9DC292423FBC9AB69D500FD8E1BE5F255196AD832
603B2CCA2C8880CF4E833E0EEFC5E5FFAC03BA6B857FCC0C7E796D74C625F22224160DA5AD21
901E1C161820082AFE1228977C17EF607AA6A17B70B4B5667CA6AF117CF8F9DD2148B5AA9F46
E74340308CDFAFBEFC331B6ADC2CC94F8DBE8545DCD0414C5BC6FEBEF8BB639CC399CDDA9F86
35A51FC0D5C8BF1A00B285D86918C2EC1BA5F89A3BD46048F54506CE0D56DF8B1F4C99F35D56
396B504C624F76957DF2FE5E12A5A7F36BA8ADC145762D01C5EB567DDBF9EBB2E60F3A2DB468
CD16E27AED2C122B42E4928A9BDEA5B1EAACD38B07709C5699C7D398510A0725C02A38C4D0DF
1C3CA300A4B28CBF321BF9435C7979B2EC0D6D4E264FC7FCE99158D9FE1633343C2877317DA7
E330FDAE1C496B5D0E7CC9359E3209AF81B5CD98058BB4571AD047701954B5A2D06E7F02FD7A
A4438B49B7D75647AE2467F92EE0649E1B5AE52B6E38CF607E911BAEAE18AB8A6D297DC03A3C
4412CC132AC5DA924903220AB646E24888DA97311550B8BFB5471ED1D6C1C52D724BD8AF4F4B
BCE5093E2129B790E9C5FF6E73D7FB73CAEB366533770E8E0FB6A8B9EDDF163A01AEEEC7A7DC
51FAB6FB8E5F7A9D1FEA257284B6D745235D503A747C1602CD55B0C088F68FA07B1706BA29F8
ED83B7DC31824BF71A9FF2989B5B8E662400438467C435361B9E0DF59AAB00DD5A96C8057D84
FD6E161CBAF160AF409A7E731A0FC5B627205ECF832B87987B12B57791BA84411735296F5184
4C4FB8DBDB24D01C2A9D11A0890BE7E7152C316DC99B607B719A58658C4EF2D2CA8C833DFAA5
EB66A5745A0A312BAEAF3B95523BA642A39D6B1D8FF215AA63FB5003E5B9D789F0F96890E7B5
146032AE277223E77EDD91281CE887402ED01D0DB1270202B68C139331489DB7D8C80F84271B
49773B3042856976EC5477C2512F7CDF5794F9B5B38ECB9864079A19118948F24272B487036F
1B84695666D458BA5294ECDA99F5DE310AEF35FA4E6CE930E61552F90BF84FB2512B08E2F863
6E021A3F7106922834CC6BD63841427EF96CB1F75301F606AC84A8FAE68AC2564B43A088EA71
9197185153986477ADA6327985C1C8F5A7EEF00C9C16F32B03DF454B37E635C1D29570F5F0C6
B7427F6834278CB37D565819C967C42E068125271727623712B626E7C8610EB1CB5DFAAE8291
FB77C226E59ECA782038842CB4425B819EBBD080F837DCD8CA21D463419EF259C25F575D2C65
541925DBC59F9FB453B654500673A00DF84854FD234D895F17FB79A5D5C313471028E1975DEF
4BA871E4FBD035CEC888A5FD53C4903F4D24895D89577BD70644C253F707B379B73483E1AA84
84BA662942E6EB569B6685B6C59CFC1E2051BCEF9B79121B5F01E3F1D27375C2D0406F69EFCE
AC8DEF65D497AA63154F5F3BCA255E88E6C9781896BF9220DE5353DB1BE9BC1C622D26B20DC1
64872769418C7EA475C157EC71148822C32CD9A82C23D92BB3025DF7F754A8050726EF5616AA
F8D0A90F209934B544D14050FA4537F3783BA63FA0474CC8C360B9DE43034F29599BC9154538
74A8DAE100F7696A8568527D327E4FE24229CF5A825CE53B1F9149FBEC023CF2337F3079E376
97B2D94D3E1F0B117E119AF8606EE8450D275AAFC54E41252EF86782EE1E1088788FD7FDE439
0EA73DCFC2D7AF6370A26956F6E12FB8AFC96409D220F0276D0F16D0E03D7AE275450093F663
73D81166279E5C56A940315E6E4FCBDFC289CEB99BA4E309D638C1BB88F2B0E8900FFDAC8F52
1BF84E1E4F13A78D80E017AB29192A5321EC9AD78EC53AD022C42CF211A09FA8E6E04D06CD4C
5BF1D5DF0463F7E45FA81420E76BB824015E0CF12698CE7D1CA4F8153595B85239A567D1FAE0
DB3F0133F9D7FF43E63F300BCA2B36E6716568C703ED620EB461A2FC3A1F8BA4FDF963BD0E3E
143107E9373CC6C277134E2D1F669213EEC2CDBE4FDC1571237D63290369A836F94BC942F1A3
3AFB50E3ABF02149679C9A8E054F7FA584CD73B9C9B307B69D070D9B142AA75B3B1725971418
135513A4B68C07DA3C275D0C709454C6A847FFF2917E7B85C6C38DD970032125ABD9CC2DA745
E4C3A5E7968FFB7D54F5FE9B4F8CB515676B882E738BEB5DA3C04FC4578DF59679133375D946
D9691CC4D83B624C8DA55304FBFD0607853CBBCF42B02BCBBAEE029FE9F422FFCCD8F265B0F7
942D2A818BCA3474ABFCA37C0E37148173D92A5890FD47CB11F61172DE6E2FEBE97B7C94A5B8
DE03065B136C720D5A541CD20D7C5F08183595C8E603F6376C9E73D81CF7461FCDF96B0C0482
BCA5FD76949B40AE77F923D1984C70D9792C817BE0EED8E1390F84941AF81B7CB0E7A84EFE02
AAFDF26BD15D86868D1E73166A54591136EAEE9113F7B92FBAFA34FBA00B170A687393865905
2D123A1F02FDB91256D89148150168D88A2A9F21E358C53EAA3BBC222B97CFC9F63D5BA1B2AA
F44092AF2CBE5C3A6554E8CE3B58A495BE3CF4DBFA3586DCD4B93202B4F70E1EA6C96191B0DF
B5ECB3FF10574DECD37D2C45ABEC9BE6C16F423A1319FB4C1800951BB20B829688EF898CF611
52E226BE88558B9B04993758B619D29B1142E8D2C4956D825CA817DFD2D9A4F1FB3A977CE3F5
A21CDBFDF1917538AD7D6860E56D37DC38E80767507C00EBD31112BC9860373949B386E2C353
BDAFFEF696F87CC17FBC9E3E7726EA92D74000BB7580434BB6AF2B976BE39EB700D2AA73E813
C1417E6C917F7E9B00E3CCD0F5B593DF5801A08E1319DECAA04667D925C25ACC389887C2649B
4E39CB55946C391E7DD5924E2242B74D4BF55158BBA308075D28AF217AA224696279F1E06BB3
5A9A35D0EB044A4DDC9D67E8F418DA1CDA5C8D0B3547BB0787C783D73F50A2ED5A85457D2C97
BFFFC8B49DB7AE37405F45AA45CF9D9777BCB914F506322A70708E2AF53927EDB09F2F9F0919
A45A7E5A166CE199FCD71B2CD2F126481AFA717EEBCA8FB1BFD8EF68A31BAA689AC6AAE923D0
9B2D3211F6F43D627A340DA733614E016F6BE48871629B4E4BD0B8F9C6B3C63460136BB96177
2EACCC202A835A29F27ED84B82C47DDBCE65F68D684198412D700E40988AE90935423AAB3B30
A4F4DEA2AE0219F327DE76137E3F953F7ADEDEFD60B06148EA506725FFBB51BEBA47073F4AEC
8835B2696B7664C1BECFB1213A3179E17368E768E31BF2B7FAE0AD54914D22180EAFF13185AF
26EACCC7C0F7312FE28CFD38AF9FE083FC7308F6BBB0A80EB1EC0DF7B5EF7AF771E08BBC45C9
AFE46E1DD47847C4B041106AF728E7409C24956B26CE257E692AD93E554E3E2397F71855E344
A013CC35219A1F434B2E5EA0AFE01F2815DDECEF3CA9BB47B90AAC3014D837A06E8BBC2E21B9
4AECB01249F9A7F4603B2D34FA60EE44AF66B1A6B9BC83E7E0A553ED1C1676ED58F9CFCF2116
3B07CE8DBC0C3E0B4C113C8F38C61DAC5E6CAFA1A42A13C5669051E7E1FC96CE63A425680DCC
F961C342E345206424D6297539C8DA56499C28AA276C9650D124ECDF5538C7FB529532CDC736
948B1B9821ED5FBDCE8053D64826B20A2A24C54A3E4DB227BA709889072A602797258BE385C6
50B63F84B0AE25F5FF718376B42EE41C9ED4DC60E228ADE6EFCBCAF54458898385F51DC89EE2
76D344AD20C92B0FB4166B0AFA1B8F6699714C2DFBC7359A4415B011550C8EB7A9892B307AB0
5AAA144FCDC7BDB4FF46536C092539C7B65D1C9AC597B500DEF36F07B8BBA1C76F3B4157DB2F
17289A0582972530371116E51F760438DDEF8DF1FE17EA91AD0A118F7DEC747029C9BA7745A1
D53E1F9BB0A6200B71E959FE256069311B355D82DFF5F8E6EE1521E0C92DAA4E136B15C918F6
83317EDEB6021C5F0AFB08D081E9DE91F16C90F7B7CB45F68F6311689F4FEDC0BB04694CC2FD
B994180B1398BF68D7607085889947EA4DBBA8CB5E9D5FEB016893B1BE0EAACBB7D677CA69C8
602791BCDE3421FB323A954BE2D8E28D7CAD3775E24ECEC06CD70BE5003F6CC7927BE31CF021
96EECD0ACE36A06FA542E8F8B200B5882907264251F0E22DC1FEBA7419A029B289A6CD06A416
4A2B1827B98918A0973B51584F15CC73DAE0861E13CF94C89A6767E78DE0639E2A6499808910
35963C994DEC9FDF2C6720D7836FE742785B70B3FAAD44501225EDDED2F0EE296C913287FD2C
E26D646A17F96DD1B2BEC4B15348AA9B3BABC740AA276CC79CD35CE91BF930609AD5E53872B1
CBE8BA38881E141A9ABD0DD5ECB5D98B251C9ABEBBCD2A4E85D2275B01FBE086553C9BE5FA45
73863C1085F70ED6D57F2B35EB335AD3484BB9F3A3D9E07001552C4F338986F32668EF5190D3
0AB83EBEA58983EE0BCEE361D774F30DC52E43F56EDBA485707301C0E97961614151E455DC62
6761AD8590FEEFB8A42A1219FE36DD060EFB1C59020BB6DD3E99A5230952BA3964C221957035
1F5D5A136F88C33060918A8ABFF468EF23A4DDDEFA71C41516CA9DDFCABCF2439EB6031694F0
C8F09A432E06D4EEC9F0EAE014B907FBDFB2947908825EF79D13B5C016D524BA8F98BA599108
D070822F3A511855C8FAAC56C4CD07A1192A55E8F3B0CB755D119B98A1A976657E58BB78F263
6DB5A99C7A67E68A16E4ECFEDDC46B3C9875796571B62980A818A1637747A8070A76708F3702
DBBD6128D681BC0CC49B8B7A8ECBB2D6E9C29C2E65C25AB4A73B43F7EE48DA35A588DCFC1A58
4B7C1E165F04D46C24C40D344555542A45C5D352AFBC0CF892093FFA8A9D6C6E13D0B0184E39
C0B8D37773DFBE420F103260BD673186C0B04F19F7BB53111762A2FA44086EB268AEFE10E382
4D7454386FB9BC2DDF7EE95E564CDF15433FD3244435992E676C475974775F19EF6234D70827
0E8AF5CE60228D21FE4AAD272A5A03A2227704B42F49F3159557A7531EF8ED0513F456DCEB11
BCBBD71E9D95DA4DC508AFDB00103FEB7CA3320E76E64EC0EC82B2BD79DA32F62D9F97B7E4DF
A72713863E088BDBB18CBE77D4C2556A1FC13862385442828FDE24A6E643CE0434A1E6062FBA
4F7195F76FC3F0263713B7C547E7F64ABB018A052E72EDD8CD622EAF2058E7E375A726121738
5E00414679B97BA13AA119967610039920DA395DD027AF0313D6363DD2462828AD273159E37F
B9F2EC1C9F7A15481D8C3964722B5944D1428233D3702C12EEF5D823B6494BA5345E5CA4F81C
CB7245F00C8D09DCE9CFEAC591668B3E3F87165C75F1A8BDC04B74E9998D3964D43442F4B1B8
3B8DE1D067C0C0EF1DA280F92AD64CC4ECB293F6642E17D8FC2A605DB397A09FC48B7E9FDD8C
AD64AB6B79928D10FD8BCE768CC72F14584212214D7758AB5A1AE15E468790E6664814DEA349
CC0D1853CCA3B85F92381E16F27E8726C4DE1BBDF680C60151C2F821DA3D0146B85C852E9663
A47AFB48296F12DB27A6CDEF8455C3F01B8B54C2E005489B2773D352DD36741455CBE9C539A5
53A653DFEEDA6DC667111A2E0DAE5B3C94FF7F1107DD0E2BB9C22E58C9904AB950E94D011EFF
EAA8C1368EDFDD6D65F7E8047AFD9AE7C65883DB0166FD0F09A42927684E307635F8D0126A3F
B4C48C6299B867ADB0BD4BB275165AE9DDF33A0710A2889240D77DED747F17B7A4DD947AC80F
7842C3235B88F8114BB8EB3C6C4FB8602D51E60CC350636609B923609BEACD34A56076212CF2
B19EC0E00B66100D9906BA5610ACEE9D0F01C292625359ED8282A5929A95052185CC80733B5B
DA5F774375519FDF3AD57675561B842021981132AA65B1224FFCDC855FE231C267046C4EA295
AEAA8F3CE8D0D03F0CDD1A763E1D348530350D2FFE296531CD9F0E228246E6707E360A04D2AC
FF8D3D6ED3BD9B94FAD117E94475C88760DAC36C187E08C2EECCB4CA5824C2E6F6540BC78673
D65F1B83E888786BF9483683EB61610E7245DB022E28E86FAA7AFA3FAAD19092C6C951A99B82
51308F35A8594CADA970BAA35483CA6EF0395CEA6CB007213D2BFF08491E42FC8085EAEAE51E
4D7B9E8CDC032B7CF0676F2744BA80583AD3F0FEBAF604582AE3B99A1CF281E2DD2C47C9FA5C
EA19769D775CC6E4BD7F975EFA43E51F90C793BD0661D260F8B3429092DFFEEF24BA3D108766
CC5BBD1E0ABB657E0C1C6287ACEAE828DC014B74E2AEA4B132E8FB36A8128638269ADD554411
B48D8A0FED014DE3B4C75EB7B3A707A628167190C384E343DB37B1FE0465D803C6F367F18477
9D3525697475A59F8F461E4D17BF3A1FEBBB962EAEB5B02116D216A7F5E0184B9FD8E44EE127
EE66F6A57690161CCEB2909F3F0DF90797A951D3C4CDCCA6AC05369DE0589CF1D738194969E6
AFF6C19A526EC29388E3520872D0010FC2533F8F5B40EC27B7ED3E0394E084FB1AE1CA249833
8F5C0DCDAFBD9705C31871D5F4ADB80E7A963BD1C18400782462575948ADCD91CD576906D8A8
00DEB1AA71C7FB47B568C7D617E1A3AD5DB6767FA8C65A5DBFEFF1294170163AE12A9E9F068F
4AA2C1BC5BE67417CC7544C6F6D7256FDED6665C7D480A9A2F1E8EB76EF6B21ABDD439BAA807
26D3BD7BA41ADF460C736223BE3271CD3E5B4178358F214BEC9291BE1FFFC66DD6711626C599
82E4B5F76782AC4990C77C2A701065779A5C1FCD635868F2DAAA4AFE9D4F724A31231960E5C6
6474E82E4BA6E561D46312D67465D4D061C86C39C2C337333B8F3E8DE5A9D138722E79898507
5D51A29976578EED3501D0698C02F6B66E7BB3C940309EDDD214B5A413C49BB69230FDC5A4E9
3FE01C63FE63B17F9EA0A77AEE2B1AFB5D53275CB9B72A82C0A7A83DB7BD5F8E74CA6CE08FB2
9793A5F94CCF2338A2ABE9A575E24E439C7AAFD2532DD24D502270DFEC66E387A237D4ABF1F8
AF63A5D7D7A42FAC312D912A21E8FAA53770FEE70FB862A75C4A01C270F9C3900C70AEDE8C0C
338F34C64F0D69E38DEFF7F364BA78D27B11DE23E92E96BE2EA046997D9DB39F8929C5BA8BE2
23A22C6734824020EE8F5620F60D54E7D62DB2D45117B7332F3D292B6507485C156FE4A3126B
E083CFF8337AFF1D5319E86CD18A4D92AE9F0942BB040DC663DD252B0B724F159009744976AC
AC4664133934964E6DCA8592FF9F3C5766EB0D405F3797101E2585F259287D4D10554CAE8A19
7C9E19C9A3C8E90D0D3E8C02CA88BBBCF7AB21C09F1B7599DFED012AF151967C8F46B1302543
27D359A36A1B44E6B8845CED61018FE4120016BFFAA99D31458100368C74A3E42E91D03FC402
8BAC496692554190C45ED81BF10F905E2A159A550B3471ADB2556923D93DA6AA46BF25C8F8E3
FEBA19DE1A9DB19ABA3DDD7AB50CC4137E90C7A021AEB45F403F1EE59F411B54322505C984A1
88DE2435E8E5567D956ABED022B6055B78F22D2A1D3DF8F08A36B21C6378B2D67DB94EB9CA95
5171A46C2B5D9B1C022DCB891345F2F16DFA565EF92D2DAC51A5C2B6217FD735E9416D470652
478816F550F023081F6A5FC642945F70B183C22EF28FC87DA0C496599C4619A120F15C6BD218
47E5256CB77823ABE82BD1211A9750B18D278A089CD8C4DCFE812BE2725CB05E8304A43319C5
5B941112BC0D2D7D6C6E54895CFDA115745CC099642A93557FC3FBA4624031BEB8AA046F357B
D3E60BEB96B47863EB5EEB6BCD2423CEE6760B53E24BA47CCA097CF20EB3E482BEF35126EEB6
1E61B739C98B62A52A37C21BF9A32E2F0D8C1EF2BAF7AA4A14389EF83D1495D83EB91631D3A9
CB881A5CFDF018DA453EC130CBB97040D67264E5E1AB9190E07FA92D3031D531CDD6C1B921D5
8E0BF811759B9B6C8F304EA5A1A1A70B52AB8D9DA95CE0CB927398D8F7EE51A9C5DE68A5A212
773D988A101C6C2653FC214F3274029E6CCDE11C565457F49830E33EFC975E52D853491866BB
571E9DD516137DA1397C11AA5F61306A48F8B93E3782690F341415D6F2EE233D02E660C7023D
70455536A84382A6DA61011A8B9ADC1F0D146D333AD5F199E521053D42F4E6C161F614D35115
15D8C2D01ECF17BCDEFB7CBF7EF0A2AE13FBDC1F6E68DA944872BDD3F93B8E12926E36FBF0BD
C52BBF8FF1558E51FBE689ADD817EA1536D0258DA5B7776946A34468E68811B1D9304FDA038C
BC1C7D75A570A2D0EFD208F668E68B80614DF0C85B653FF0AB2BE97275BFC8566BAA6EBEE589
74B6F35B87A3F1F0648935E0105241DB87430A2B213DABD62F86E2C39A4F0C24F68D7CD870AE
40B58199FDD3A7ED0298EB3C2A049E43E37FA9902C664EC80D699DC3526B91A3ABAA6859635A
02DB98A91C6F34AA57EBBC6253E5E3EFD5B2E23FBE564BB84A834B5E1160751BB83B1E5F99EA
41B70584ABE7B269894AFDA0A645543E12A934E29249C7D39BBC78A5C882FE1635BC82998DE6
E523DA68D1E4B3D517DDFC4A00DB3ED9466C82D4F5FBECAFE58E4F543A81D4C9534C5764ED75
500E4B7EAD5B40F90A45EC776E23131E11767355858ECB9D39884BAC1D5FB8AEBC648140BC2F
9D0775722898CBE3A44B1123EAA5357E579EA8E3D30788AB2E8CD49B0AB1E3D03194043935CB
9F03FD002C99461CE40E1E18D36E4E2D767810C6260D366A10CCC608D465C13EF20A62C7128B
32970A839E3D262CB869876F3445CE801E5200194479C95D2679E809210F0DDEAFDB7AB768A4
4F195714E5A4DC15B198EB1406C381CBEC7A3AB3C3BA3DAA6678B559769125D94A688BA70427
506338CDE0668A1297D805AD450E7310A3C71B3E2C50D00618AE4A6EF7318A68541666597EBF
82042C3D3C143BE86655059BE08BDC081E5B977F0E0BC42990D2D7674A6228B41C2A9A685ACE
F38F7F64DA7336D8DE8D3307AE27561C0FD330955D400D80A7B1EA334450841245EF63985F8F
40BEEB617CC340064D0A9A3E4AA9EC3F1D8AB393CB7242577DE8E45D0CA2670351CACE5D332C
293ED0AAE6CFDA5DBD23D59D96D10AE549B66EEB0C505144910A455A19C5366B7D183250D972
E6DFFFE1C70932FA5D4995BCBB857D9939058621C33E9E47501875B414FD74375E80F7175EB2
5F4C3871E48ABC457494175661E45AB3FD9B7B4CC9A1A94388EAFE36A6E658BD6D9B9E96624B
4AE379066428F4808BFD2232C31AC8F0B77653D53F7151E726C3420A173D8E790EDC9010E7D2
893B3E955BB14E50997ABFAA0BD2259E8569242E7545F36B382D8BCCC2BF1E89234DD26931FF
7F94B9EB4E20CFD57300CF9699ADA125FEE2311EA7AC859D11037067A1CA782D87F817392D99
88970C3AEB8D17A25EE0109A875357A21A784EF7F3AFE3997D644BE932518ED2B297B3C7AA01
AE5C4588FB3A1933DE430F53D976A72D7A9C390C17BA4BF10A8C568F263A31A1F42DA2DE037B
2E0AD3B80ABE577886B1ECB76DA60614040D9AE8064E961EE1C274B6D9388B8B58AE4DD5561F
D3B79590CAB7CA32D6E6FCABFE771AAAC1003F2B44451DBC5800FEA36C4122C008F2DA2DBE2A
A25A4BC33BE6264198221A75D0A47C44842C3E5B876E93E2B47DA6A860D2CC6F72F97BE95BEA
04C21438599516BF3C2AD014F92E84FB250658C75F7B479A81E73D54E6CB9B226E7308CE7A1A
425F3F5B775C6F9391328B8BB7605DA9E4D7491410AA9558A0C400FD53424CA7FC50B2CD7654
61EFFE97EE85CA82079BCFCB78801A27EBD7148BD7F2110AC50EFA21DCCC434B0DCEF4434CC2
98566F86A072427A5D63AC18CCDD91E901F1FC8A5F0C01758FF1784A62B5F7C6F06DD3010777
159AA12C709311F984864F2B7312FAE48CD22A37E836CD1E17F90D09BF8E8F5CAEE6B04882D6
09AAF37E1607F9137586D9B266F8891974D4FC82ECAE3339EE165A905B295463D55521AA9797
70E78129DF6F973DDAEA6CB5C5EEDAD661108449862C5DAC4606A7E2F151D0B58AD972DE1C38
39DBB597D035A170B97AE6CD1404B6D853E0000105B9EDAA8B2BC27416E852265DB137E3C3EE
113EFE22097173E21CFF5E43179B083AD2D78052C4AB0FFDFC4201169961FCFF2BCC7638401C
C77E9ED5B6F24726D52C99060A6F27698C1B34B8B55C002937F2C2DB515800EDFC696BAD4E14
26A72E12FE72E0BA2ADAC755BF397BC6A042BA87E1864579885CA91050A76930D6E3FFE930CA
4611B5402E7E465485C0D1767B254EBAB9C299FA31AF259FD84B82A3AEAD0ECE9615644BE3AB
0F065ADC7592C2167EF5381752CEE6F2E23A977D8978CE09F1593A7EB17AE380B54676DBF8C8
40BFF8574F90CD81A70DB5A38677DDC43E7584D882C9856A23093420B519261C56A3BA18DD1C
C7AA94ED54A8FA97BDF899560DB9FF7FF072561D747BC93392A5B5D228B7C17633DE184742C7
AE2A43FBEBAB5548382A85282F79E1429B1BD6C4D5CE2DAB91C45E9A83049F8C614D7F573D5B
2EB7F09C8B1A22CAEB0C68BFB6201F72D372516793D891E6033D5F7CF4DB6EC2D59C02CA40C1
38A92D233F1B224B384C1D49974FF245E51E4C8ACCCB1F22E900A509FF0A18CD3B8DC1D28974
A9532BD71473ABC0E6E6D00B31DBC654DC374FC72667FAE9AC28535AC4D6B59E5A5D78E8C3C6
A4423D08B61021B09E38D80ABF25DA3DC5817465B1F9B9F2BB0F03E15C9B878A9E941CC68E42
3EDB5351EC5419255BA575650654082DBACDB8D0FBD4F80FFC4714A7955F92C93A6D30D6937D
B4EC6CF7237E51F0F7EC82C7D1401D49A2FFE0735FF0A8234DBE3DC59331D027C9FF49FC260D
CD4A5867310C6BF4C715992AA7432B26FEE9CBF896DFC7464A7011C1C2B2FE119D1096CAB00F
65D5459FD33963F08BCAD41C8FC521A582968548D1C5644FF4E01F79CDAC605D19710F63F75F
44DF5D179F2B54ACFA45346C4F8F4AD496F819D5D27ED3FF5D7D7A62ADA7A9925E7B8EFA712D
0F0DBF6F5F6E789B0835B40D8D60A0275437515CD38FA16CA32279A6E0F13268ABF5242B7AAB
5483D720D56A784A8A351F920F3B8266D7B29BFF8F19F969D621D71FD2A7FEE19482D7C50B94
B798CD6576528553730CC1716A0603ACE7E09B916FE9E9320D0C63804D24BF97C18EE775F4AA
069AD28C1334B84C56756D663488C5CAA1CD81BCA635D5BAB3D362103727095A1BB2F0783305
23D4E52394FB2FB3E30DFD190B61223ECB8EFE053EDB5B2AD9DF0629D03971CA85BEDBC0D021
DC3283018F1BC62F9F9F542C3B328BCD39807A617480DE46F678F52697160B031F8DEEC94991
86A148562F1B6082843D805ED94E85C767784025DBCE087975A46F188201BE2C2A9E9F342F54
4AC880432931F33AB449FEC22DC435935E0101425475470A404C6EC7D6E78D608A9127E62256
F20B3544CCE19E4811B47B1E5872B75CBE27767F083B1F14DFDD2D06EDCFECAFA27D8CC0A0B5
3D0B6E42781FB08205513DA447ACC1B14909F103CF3B63A60C7D7FEC7929B1B8E61D44189097
8C4374E280A61BE277E4655FEF5D5595DF897057E3E685B747CB981C64192FDA42685F7AFDB3
E38260336A28A41DE221EE55BE3C0D609F15BE0BF042BDAA01289575C98216B8E4A70B9D35D3
E7B2390CB981DFD8A173121D645F925337BEB41C8BEC024A08FFBF7DF1CE2264A05B858F9A51
005FD2DA5100CC960637DAB8204ADAE47442A6A87D376E9E564865AAD0BCF3FD38174CE3BF48
4C455F17A028E49F588D815714FD968CA7CDAB88E89F2E5E5E637D154703A8BDA660D269A177
7B90F0571D246A68A56F7A69BF2AD6A8E5AD6762E20D4073BEAC173DD49D04509BBAB5C2750A
BAA9A620740210E50AB85869E42E60518FD27CC953751EFAC5F6E05EAA1D0B5FE10F48DCB24E
27D18F7013CECFFBF8D0DEF66A09C20CA3C8F48C444C66C82AA9F25A3FD0E85FBB487F3D1D97
58DF5CD9F4D6C205504903B645FD4CE22DE6ADCD79D00066AB1DF12F1D1E932BEA2A49A9783F
2DE6BEB49A38C6C9BA32B71B4180DABA5D6B9A6501CC5DCBC467C4C3EB2E65CBDF1EFB70B935
D68139F971F1E4C0D3F98FB38BD641ABAE20EE854229A462855206F1C48DC1A6B28B9846A502
795C130AF2E9D1EAC544FB33F252A176CB2C1E6C8804AE93E20D929FE0596F3A06F87A8F41C9
DB04C7C78FB23CE21902E91415ED8D4776AE357B1A1AC07E09B4438F8D50BBCF87391299B87D
B589F0814FCC90164D51160D5C035ED0DC4A606FDD2A34B56EA46F2167FBA7164A9D8C7D3494
E283B401D477A9102CF3A166075825099B137C407E0D8148CAB41F8F9F57873705482002ED4D
C380260995D754E648C529397713994B18D69348293A123F22626402A3A37567EF004BC33A79
45B16DA2E8C3BE23F1E0E804745CB04C6DE0E346EB6E9E1C24B04A942C186A7FDFD7B0494A9A
BB199116E1AD941B87CF3DE541FDEE2ACF9754ABF6C2D0ABC37A68B507780C5797E4D799C2B3
636DBC8D297DF7CF4B019411A103A99D2E28D445FF719A8D8CB339B713FB62D89C4A7B19A69B
F2EB221B26D0C1FF37A14B9FFBAD84B1FF01C8144DAC43F2EAC7EB5579240C8016BB07E6A5A6
5555FCA954C1FA5CC039E2FB28C5F3F2CF3C5DD1A9EB1F4E0455F8D661168749A6DDE85D7445
9D009864B2B52F2BCB68102F1F6F280F7CDAAD39BBED5D6A5D5E951721B9D305ECDB727B74E0
388D3E1D8C90FC0801180EEB1B1C8D289DB80E520F896ADF57EAE1907D070D66A6F2964C7EAC
8CA65CE2EC861FDE6F27CBB1733801C33DB5FF6502DEE7BB934B4833509E1FD1371BAB177FE7
49C30723E07C7C187E982004D5BC97D75AB90171626B7E8BAE093789F47507C01D1B1A1C346D
AD6DEE3B1F69CD28D3BD7A6EA13D125A256EFD6F24159BE93E1790A296A9D894631956E37672
FB3B2112FE5666DB581BF514FE9E560DF8CE5D3AF23B19645E50FB5113C62C7640D0D57674CC
6DDE51DDCAC23B1BDE02D3FB86389FDCD65E586D89292B20A6A31DD8AFACEDCB388FB7A4378E
0A3765D23C0F94A7D13F5C3D7C5D905A43D54143B9838C37C55F7A1911CEFEE141B97BA74AAF
45D6429EA44F295A7014A415860A821FEDD4EBCEE82D3FCDBF4133E260320CB35D5516ED38B5
61AE459B71BCB761F09AE168374F15C662FA5753A712A8F7321D75D32F3EA1C9538D8DEB32CF
5D94E0AAF7BB77B815C81E917A141A67442F7EF75520E4F55F9B5545FEB4F07A970D92C606E7
89C9581E80B1B90BDC40D81BF6755043605A4C5F0CC60687F0C78F540449426FBB83204A9FF3
B635E4D33D3944115A8E5F16EB3EA9BDA7E89B41EADC1EAE06A09469736B5A4D69E43D6D2B62
556E652A06BFA5A84C13909B0908E904AF800C913D49A864481F75282C38E419A30861DE0A5B
F0DD789EFAEF41769C3F9B9AFC4B7DC3C97601D8477449F8E42F7AAD6B581B1A4061B5D66F91
B264233AB95F25D6546845808EAB30428B0AE7293CFA1146618601F83344FDB322626EF94487
8E8FFC26D72D912172C10BA3628194E4D32B4EBAB295104F09DDBEAA7659FAABE863D86AE150
F72260E190E3A8289189F65C0DABAEFC6720663360231096DEE9C28DED997A7D29C7281BB779
25C2084FD46EC46A5B218F8D36FA9F09455C91E180E052F325D7BFEF4F7AAED7B6CD44AA5D7F
AF128FC19C5FB383963A322075385E58E2314D8405D024E50D8CE43EFF13C5AA3C714A5339D5
098077B1C4563229C93CA29196E52901E9C074FF5254FF46FB331B12B2084EECEE2C262B59AC
447389FAD7934F44DA2211884CAE79CB5B2F5433C69C679BE42E07EFF637507EF51934C5E09C
04EA0AD1AC617BB6E82339FA3ABFEF1FCA6A867B6C99A867FD55650BD93238A2D0ED9B3041AD
E520BCB810FE84AB0B1D1E14FF325B6FACCF1778D972D17493253E9F431DD62A84DA02969E5B
3E92C65852783B1F80C449054848A058174BD469443833D5517044CFD59FE769A725E9BA91E6
F41AB5C4B0C2B31F64844B586E5505B7A19BE11710FB3661D8B5F4D9D1B7927E75D07CA98B5A
4BEAD1DF8F34129D09579E6248AA2AC27331C9A7594D9A5E339C963BADD416BB49B9CF85FC24
B22957C7578DDD8ACB695205CD56A5CFE9CD9EECA0D8D2DB28A754ED57FBCB36D84DEC42DBCB
81E8F949C4EA60CE547FD117F38894B85DD1DE3979B94FFD9C0E9A783ED61FC54008F81E1398
AE9A970C82A7A24A14C555D0EB6C0421C20FC1F2059C0136ACC7521668B3A777BC287CE6F8EF
6BE689DEAB2B71AE7865768141469AA980C109A87BE3BEB58F8795FF3D3FED393369B7527329
583DC1FB34FE3A84CAE3BA612DFC3044FAE065E965D8455977B74378CDA96C5E5D51CF63936A
0CF60A5E752E7A55506D79E07A67225A079318E9DC4D9A1D22FE2324C5E1BEC6991CA021DEE2
80EDBC4FCFEEB963E71FDDEDEAB3E9E808FE7A91C392274386C49FDA66943A110D69F52889ED
7C3B6617ABD9F57B7B1D8A03526E973870715CF8A1A16AD9850CE610289A961DFF8EBC2A28A0
0C9455E3845BDCB5AE8B06A768E4CE10A7008D2F5CD94E89C24B27611A1F17C800677D157200
AEF304C16D9D5CE20829E990D38569B668E727199103572C6FB0988190313FFD2E4FA8994B7B
5EE3BD5D86DFCF0C8325051EAFDE00ACF7CEFF1AF155153316B8D47EE6F1E75D12229EF851AE
B39FCAB52D08281D9673010E943A74284E3F37B2333412792388AE4DAFD9B80F481B1B817338
B1411D9820CC06361F075BCC5D4943BABAF140E805F8F97839DA3706002C2B9BD09EF4A46E14
61B72B938270B9E64D8C836B7CD492025C34D4C22AF96813A633CE657C98F5594717709780CA
BA9BBE6C5580C49CAB2E7D7B325255A15545D9867B520139EA2F5900947347352CE1FD88B012
3BCD0C0562DAAA828C51C1D636A948679C5AEB03D491F0BE4AB895179F59B1078127BFDCFCA3
3A7F39A922714CD44A04CE29359D1E3AE59051D44C35F680F7AAEE19CA7F3064C2EAA63890A5
C03319CCD9E40A39D22A169B0C2F9B783993C306578C5D26428009B3178AFF0EC55D3566AE41
5D9FB979DB89598E8109C0A864D266E6BA2DD4083AC92E23E5262D0040C068C21D7E36C3E298
A894841BF263A72DEA2DF65510437E32AAE3FBA1B71E4E6E8B195B8D0DB5D40D85EDAE764719
02AB24014B7949CCAAA6063B37C226387FDDB2F7A5DCB8792D317C3C9F3BB84BA78F6D37DF6B
9802E91A0086CD07FB7A7DBE4EE01118C10A6A7106135C9B0B63B03F4D3F2BCB032C79D5F128
7FF4E9C13A67DDBF8911307159CA0F0702ED26A9D55374E64E77C0077870073E7E9FD8A52CDD
6E73A252CDA2B8B09FD5AC9DFD2C4775CCA5A9898C77EE3D975B464A0385B8D4178E8C5D8E9C
6B5B30D217EF31084D2AD032D515791CDC78C3DA04755AE4D88414FF8370719E8785B224EC71
E4C1F8C431212243BFED2507F569563246425BE025D3FA52794C45610FADB34AEA2DC5572870
2784F56B64ED2E391FF47D11C8BF6913C545AA984B0D29226B406F98C13D69625421389792FB
DA160E6A9420FCE277BB00447C71896061A07D305D0AA9CC18E7F8F265F993BABC1CF139F949
0325AFE7F4CB725408AF49CE2064B437BDBFE66D143EDB79C75B622C0CD945E659A3646AF2B8
3590325D6E7246BB55DA98CE8B3496EE38FC5B2D282DC9330FDC94B3F6E6A1F6CA9D110CB950
D0E682D9AE21805D5F988D83EBF4AF2E34371DA9C9AF04827FC338CC5BBE2248BF48B5F2AB38
F8CC38D1A82ECADB6CF1DAE3B597110763CC1F8F8ACF34285A0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000

cleartomark
{restore}if


%%EndFont
 TeXDict begin 40258437 52099154 1000 600 600 (cylwallfig.dvi)
@start /Fa 254[50 1[{}1 49.8132 /CMR6 rf /Fb 205[28 28
49[{}2 41.511 /CMR5 rf /Fc 171[36 1[46 82[{}2 49.8132
/CMMI6 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 535 1452 a @beginspecial
0 @llx 0 @lly 148 @urx 190 @ury 1480 @rwi @setspecial
%%BeginDocument: cylwall.pstex
%!PS-Adobe-2.0 EPSF-2.0
%%Title: cylwall.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Tue Mar  7 17:04:56 2006
%%For: gphani@gandhamoff (Gandham Phanikumar)
%%BoundingBox: 0 0 148 190
%%Magnification: 0.5000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 190 moveto 0 0 lineto 148 0 lineto 148 190 lineto closepath clip newpath
-8.8 184.3 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.03150 0.03150 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Ellipse
7.500 slw
n 2070 1620 509 509 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 2070 1620 1782 1782 0 360 DrawEllipse gs col0 s gr

% Polyline
 [60] 0 sd
n 2070 1620 m
 4050 1620 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2610 3600 m
 2610 1530 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 3870 3600 m
 3870 1620 l gs col0 s gr  [] 0 sd
% Polyline
gs  clippath
4830 5610 m 4830 5550 l 4678 5550 l 4798 5580 l 4678 5610 l cp
eoclip
n 2160 5580 m
 4815 5580 l gs col0 s gr gr

% arrowhead
n 4678 5610 m 4798 5580 l 4678 5550 l  col0 s
% Polyline
gs  clippath
2190 3810 m 2130 3810 l 2130 3962 l 2160 3842 l 2190 3962 l cp
eoclip
n 2160 5580 m
 2160 3825 l gs col0 s gr gr

% arrowhead
n 2190 3962 m 2160 3842 l 2130 3962 l  col0 s
% Polyline
n 2610 3690 m 3870 3690 l 3870 5580 l 2610 5580 l
 cp gs col0 s gr 
% Polyline
 [15 45] 45 sd
n 2610 4140 m
 3870 5130 l gs col0 s gr  [] 0 sd
% Polyline
2 slj
n 2610 4140 m 2612 4143 l 2616 4149 l 2623 4159 l 2633 4174 l 2646 4193 l
 2661 4214 l 2677 4237 l 2694 4260 l 2710 4283 l 2725 4304 l
 2740 4324 l 2754 4343 l 2767 4360 l 2780 4377 l 2793 4393 l
 2806 4409 l 2820 4425 l 2833 4440 l 2846 4454 l 2859 4470 l
 2874 4486 l 2889 4502 l 2904 4518 l 2921 4536 l 2938 4553 l
 2955 4570 l 2972 4588 l 2990 4605 l 3007 4622 l 3024 4639 l
 3042 4656 l 3058 4671 l 3074 4686 l 3090 4701 l 3106 4714 l
 3120 4727 l 3135 4740 l 3151 4754 l 3167 4767 l 3183 4780 l
 3199 4793 l 3216 4806 l 3233 4818 l 3251 4831 l 3269 4844 l
 3287 4856 l 3305 4868 l 3324 4879 l 3342 4891 l 3360 4902 l
 3378 4912 l 3396 4922 l 3414 4931 l 3432 4941 l 3450 4950 l
 3467 4958 l 3484 4967 l 3502 4975 l 3522 4984 l 3543 4994 l
 3566 5004 l 3591 5014 l 3618 5026 l 3648 5038 l 3679 5052 l
 3711 5065 l 3744 5078 l 3775 5091 l 3804 5103 l 3828 5113 l
 3847 5121 l 3859 5126 l 3867 5129 l
 3870 5130 l gs col0 s gr 
/Times-Roman ff 180.00 scf sf
4860 5625 m
gs 1 -1 sc (x) col0 sh gr
/Times-Roman ff 180.00 scf sf
2115 3780 m
gs 1 -1 sc (T) col0 sh gr
% here ends figure;
$F2psEnd
rs
showpage

%%EndDocument
 @endspecial 0 0 0 TeXcolorrgb 1146 1440 a Fc(R)1192
1450 y Fb(1)p 0 TeXcolorgray 0 0 0 TeXcolorrgb 1477 1440
a Fc(R)1523 1450 y Fb(2)p 0 TeXcolorgray 0 0 0 TeXcolorrgb
1087 1003 a Fc(T)1123 1013 y Fb(1)p 0 TeXcolorgray 0 0 0
TeXcolorrgb 1489 1275 a Fc(T)1525 1285 y Fb(2)p 0 TeXcolorgray
0 0 0 TeXcolorrgb 1288 1358 a Fa(\001)p Fc(R)p 0 TeXcolorgray
Black 0 TeXcolorgray Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF

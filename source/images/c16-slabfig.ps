%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.995 Copyright 2015 Radical Eye Software
%%Title: slabfig.dvi
%%CreationDate: Tue Feb 13 16:02:33 2018
%%BoundingBox: 146 637 274 737
%%DocumentFonts: CMMI8 CMR6 CMR8
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E slabfig.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2018.02.13:1602
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 919 2014-05-19 18:42:47Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.23, 2014/07/31
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def

%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 919 2014-05-19 18:42:47Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /landplus90 true store
 
@fedspecial end
%%BeginFont: CMR8
%!PS-AdobeFont-1.0: CMR8 003.002
%%Title: CMR8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright:  (<http://www.ams.org>), with Reserved Font Name CMR8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments

FontDirectory/CMR8 known{/CMR8 findfont dup/UniqueID known{dup
/UniqueID get 5000791 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR8 def
/FontBBox {-36 -250 1070 750 }readonly def
/UniqueID 5000791 def
/PaintType 0 def
/FontInfo 9 dict dup begin
 /version (003.002) readonly def
 /Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR8.) readonly def
 /FullName (CMR8) readonly def
 /FamilyName (Computer Modern) readonly def
 /Weight (Medium) readonly def
 /ItalicAngle 0 def
 /isFixedPitch false def
 /UnderlinePosition -100 def
 /UnderlineThickness 50 def
end readonly def
/Encoding 256 array
 0 1 255 { 1 index exch /.notdef put} for
dup 0 /Gamma put
dup 1 /Delta put
dup 2 /Theta put
dup 3 /Lambda put
dup 4 /Xi put
dup 5 /Pi put
dup 6 /Sigma put
dup 7 /Upsilon put
dup 8 /Phi put
dup 9 /Psi put
dup 10 /Omega put
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 15 /ffl put
dup 16 /dotlessi put
dup 17 /dotlessj put
dup 18 /grave put
dup 19 /acute put
dup 20 /caron put
dup 21 /breve put
dup 22 /macron put
dup 23 /ring put
dup 24 /cedilla put
dup 25 /germandbls put
dup 26 /ae put
dup 27 /oe put
dup 28 /oslash put
dup 29 /AE put
dup 30 /OE put
dup 31 /Oslash put
dup 32 /suppress put
dup 33 /exclam put
dup 34 /quotedblright put
dup 35 /numbersign put
dup 36 /dollar put
dup 37 /percent put
dup 38 /ampersand put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /exclamdown put
dup 61 /equal put
dup 62 /questiondown put
dup 63 /question put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 94 /circumflex put
dup 95 /dotaccent put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
dup 124 /emdash put
dup 125 /hungarumlaut put
dup 126 /tilde put
dup 127 /dieresis put
dup 128 /suppress put
dup 160 /space put
dup 161 /Gamma put
dup 162 /Delta put
dup 163 /Theta put
dup 164 /Lambda put
dup 165 /Xi put
dup 166 /Pi put
dup 167 /Sigma put
dup 168 /Upsilon put
dup 169 /Phi put
dup 170 /Psi put
dup 171 /sfthyphen put
dup 172 /nbspace put
dup 173 /Omega put
dup 174 /ff put
dup 175 /fi put
dup 176 /fl put
dup 177 /ffi put
dup 178 /ffl put
dup 179 /dotlessi put
dup 180 /dotlessj put
dup 181 /grave put
dup 182 /acute put
dup 183 /caron put
dup 184 /breve put
dup 185 /macron put
dup 186 /ring put
dup 187 /cedilla put
dup 188 /germandbls put
dup 189 /ae put
dup 190 /oe put
dup 191 /oslash put
dup 192 /AE put
dup 193 /OE put
dup 194 /Oslash put
dup 195 /suppress put
dup 196 /dieresis put
readonly def
currentdict end
currentfile eexec

D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA0E079529AF9C
82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA9351BBFB7CFC5F9152D1E5BB0A
D8D016C6CFA4EB41B3C51D091C2D5440E67CFD717C56816B03B901BF4A25A07175380E50A213
F877C44778B3C5AADBCC86D6E551E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206
742D1D082A12F0780FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC54
3273C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9928A7C95D3A6E9B8E92F84C
A0AA44461D2F4FA0F8B81C6F5B7BE98C9712BE166610465CF689DFAF27C875C029C0116DE61C
21DA0092D029E7DBEDFDDEE3D67E6936623AB53FA2AF18BEDDD7AC19A19CADB6ED6CA7A26E60
44BE414FFF59C0B98D5819A6B881F9AB7AD0D03BDD5CD309C67811D5CF0B93F6FDC9AE64F74E
D4E81F2E18D880BD842ADAFD0BDF06300201C6946087FC0B999447BC370200BFB8CA420B668B
32EBC2426DB1546A7164CF55B332FE9D239B65F532B69EF9F4F93828A44C8F5C526126F8B7A3
69114CA68D4F9849A7D21122CF1A85BF2F6047142AC84178B421F09819F155DBBAF5821B6A21
4F31C7775C1AF2CFD61A960F8D50D2EFB201795F52C84CA4D077D86E1A69C87B1354B22A1BE5
E7DEFBFCDF460FC41657ADB04025A0FE112623C66027B86F93B7DB9B94CB079804A49533A5A4
B35022C6D6389E95C3D3DE8AF855F6E8874735680A9EC423D487695B1571757E350157240A28
3FD75849C500B910578367B5C392C49941657605E3736A31B5B2E913382DEC8592DE6B2D95F9
FEA9FE1304C34554C3514FE2981ECEBC3BFBA6ECCF62128EE4632CE21AAEEE4E303151B15087
33EE09E17BCAEBCB86A12B1EE67D28C1B9DD748CB5C8B20D8339482EA90D28DEA8B07D8691C9
42CCCA7DE8EB76DBB07932939CCB52388F6CC9888F5EBFF2A23FC64045CA79A58526CE2ADC6A
5F8CB64662A16AED292F04F6F8C287BD3F591EC920CFD9A2B1BE576E0E2102225B89F107D048
1A4AE12832F2E1EBCCE81952220FB7150144147C10C992EE68F8B5E2048434D9770C8484F7FC
0AD6F092AF6D6D51F585D9BE90FB7C39D6279CB291F94D0DB5766A0A7DC30FDDD4E082CC5412
A5AA114432A2E1B01665C7A4958D93F45FDB13759C292EB7EA231AF9672DF9DFD47E2151B56E
443AA9BF90ECA82DF314E2C9F4657B32EBEFE8DE740C7368C5E7328AAE90D67CD530C3CA76D0
15E9616990BC1F5A08FB1D83CC88F796997000B0D80D7EFEE1CBB25C89579613459A119B9D52
CE23136268636E1B632E1A65B051598AC60EB6FA54F85940A8728AED01FCCD992A1AB06CD875
FAE65716ABC4ADBC417099C07DBDF9E773926D1C3F000041DE55B6BE58140E82C101BF4F7E47
D5CE20C35F3ECF34C7299CFF5CC2200EEA093F26CA0D558FB65089D4D92AD1E18E82EE012520
E0C20CDD186FB4C82E6121A5E16B054BA59D6BC25F4D7EE0683CE95781EAB0E2962325091A26
A8E2994970BB6C8AF4144EF310E664CD44C6020138CDCDF4C6F47BE2A9A616A8FCF68BCC1991
87DBC39DAD1BEB9EAC5C9F2C826EF23C2ED70374F8D9A7C6A7386FD5522D9959B4BF49D54B6F
E5F5E6836885CF1F28FF2743CA6F8CE48EF1B3E5B8EDC5E70AC360ADBAE7E77675650C8ED276
15D621974896C9DE191597216191D4000183F40F7ED9A0A4C64E08306B8C200BD6D761D529CC
79E492E5F3795452DA24D16FA5D17CF16A7A51B24F614D3834F6F8C5F53949ED0409F1ADEC4C
3107EAF3352E617043628207D8451439694C7DFD623E4BAEC5E81A3CDF6950AF3015885EAB4E
A046F10467E40F07EA465B9F3C56AE56011EECEBC9EF4DB855BFC9662BEA42A5438B4B5D7136
B5DDA0B04813A7951803BAB410432255329049669EF26D3AA252C22CE5AB89CC6EC7CC4C20E0
09AF271A02A95B145B8B241AFF60C625EE42F6BA738EFF38C844193577F7B83BB5EE4BC2BA38
7CD66D2F056174B2FF7A0C4501930BCD37E625E89C014FB56B84D081C8A0E6F110870B0C07E5
DBC86F47E3505ABAB0FF9BFD44DE691D16772C0614E3A90372737580211532B43F3265D13E7D
132FBF9BEEEFE78B34DAFA344288F1782EB6F4B8A25CA30E1204E299A5A61A24F9D05ECDABAC
C7C75C02B9F08BEEE40E793FA7A56BD403B3087081DCF79E48E310B445F56DEA15F53A1D96E7
1E76DD10C0B9F8A1D670B4D16E2480B8C2AA53D144E9D3736DA7F8A24FC4A7565E49B5B8EFAA
E5595CABB621BE4DCBF7747554091C36825873E93D59709C06B8E00096508C9A1C230FF44984
2258728998E78EFE23BA9A142C3947D19DF95E8F73746978893CA61ABA76AA3AACA86CFFF881
45C9FCAC6AD987730BB9FD68C6091892A8C0AAD57627C041C86F0E36423D5D22642A0AE5759B
66A5C8CED11459B2CE770E5EBB91086FBD6638AF202EC56728E6F029850700AE9821536517C8
C9839DF512668DCDFCB8B95E4ECE49154982C7771196E4EACF47FB8D6EEF22E3D3493D0F4199
385A4EF6348F66ECA63849D6811388BC73231B34BC066210CBA276FF94D496CE6FD592D4A4B2
039A9E12C9FA019189675DAB1488E68957C65D148736809A1C93525531EDFD61804C3F8216CE
17B5E434651CCE19ED6609FA22C00F4378FCE09F0996625AAB4FCFF91DAAC3B6085610A15A21
46462B9435A006ED1D0861CA6C9FDE60854678DC004D06886CA09EAEC471A86E0E63E7588C5E
3897B7E2907AC9E167543900F62C6B5A546D8130B498D603A1F5DBAD502A09FD1AF6261E0404
4B4AA6D860CF03D81A1E9E243851322C2BC3C1F559C2CAB64107E067F91F08C2BBF29C99FFEF
56EAEE7A84C9A87A079711679092AE5CFCD3E1E4DCDB01A47A5E304C21BE266B32B27E4D3349
ED8E8CC12A1E56F4AD1DFA791A377A8B117D6E27E65C0F3EAD62F36463E0D10CFF504C6285A2
9B8A550349FDBE6330C5B3AFA3BE150E626ECABB338C4F92322F17A8196DBC79C9EEFB2F5D27
F92A435E4E8ADC77CA5B55B8B9DE8AB3FAB909B812D7C643D39EFA5BDB3B15F0C7EAF45ED171
26978DB5B903CCBA57E655E12DDE87A9525A0D02627D1CC78F23C13A20A46C52BFA0ABDB0236
295C06B7B498062F5E0756DA83607E36E3FC7053D230A22CB0BB4694DE84D2E6E1F7492E0F27
BECFF591A58473D483170321C410ACEB27DD697B6519499425F8734F4E812BA9BBE38B5DE6CB
30948DF56D33E5F1334F4FD49180DADBC06E77A7E1E682123D73A981FBF94EA9C4D1B0ADCA47
2BC60BFD30A8E064B5A3BD435088E8ED336E3A0A5F2970ACCF03344FAD0192C732F67C8634C6
A65EB9FBC67123389A38DF2AD64101476D170DB854A2209E190AA02B077D403992740C65E523
16BE5F6C12B8B482BDD1DEC7C5DA9F5F9F9994DDECBD86DF40C627AB9B98AD3A562B8850C6B7
FA20EF94D26D00A71DD1E5A3B260FB1F8430C2D208443D09F92C478F3393187212A3E98A5D13
D752E579946D4350AC66BC49BF8CBDBC38DFDA5F272145E8221F2995633F6734681DC865A8A3
4DD1E8E7D5C6EECD65DE13491286C535678D18D51ACEB40291AB2F4A9A9FA2778F821171CD2F
CEEA1141CB400B5522B33AF6FE8A6B283F26BE5948431DDA3E74A634672C12D3E83993D6D952
7E524AD5E91EF6BC631D7516969EB245B2602FCCDF6120D633B9B01E0B89B3A1D6ED3B62A133
547DA125F7773B34D679D8428B77470F68D0FE0238BD86187683C406E6341E11BE4B6A5439CF
DF76820DB1AC1452754273537134865205E35869D96CF9EA95850E0A35D67B99BD68B311C7A5
D18EF07E48B36EA16DD8B9929930326DC5A43BCDA30FDFFCDD32996D341F11872030A661AA8A
CCF3F7AAAD3B311B85437BBF55D7F6DEAD328167504E850C2B7DD76CEAEF83F5EB7DB8B60CF4
B1871FEEF1C4338E0CCE98CCA232347F77D0E3776342F17E9C5E47FB436833114E7269F30A1F
54ACF9BD8C2E602290C23E766E02BA2F206E155F2A881185CA0D5ED133F2871A6D20F4A2ACD4
123CC042202E64C17B465627588DC569D88B0A99ECB34F4383C5EDCD395ED52D74AB457BE98D
DF7B513D0318FB7F3940340809B3365D938586516F762E65DBF6D52BB59B3381325D456F08AB
C702735D6A5E712AE82C6EBCBC143E169560ECF0EB4D01D1DBF2EC29445FB73E8FFB4282F46B
9C0CF3CE86721DFC759A98C19077372FDE74CFB4A459A76E4BA34F4F8C494C79ADC99E9FCF4A
A48A182EC17DF6B71C47E7E2FB008234BA6A14B9A9E6B6099A1ADA4FEA2027ACA4690D613ED0
8ECA7888C95F96605F2E5CF9048182ED19E3FC4B5450275C664A276DA4929326D7E951303C79
4342B7EC93B8DC34FF1274D26E1FDC9CFE0888E519F23BE514A5B0FBA6648E81C4C64BEA773F
2E58E760DC5FCF25A520C73F752D5A8AC2EA30869CAA95735DEA0E346E384F060F7E2A948052
597924037D5C1429BF8D636696CE14DC9CB2B16E5E304605ADF8C428ADEB41433DA0D305CEBF
E8E86AA908D45517746F40CC638326E037598777474519F7B41900CCFD234E21F403D3750016
362DB711FBBC34F9DE41643BC558A6CC025B8E790C89D07D9AB53FAC43E23BC3730D7524A146
DACD950EDDC27714F6D8EDB8FE6BB76906075EF4F73DE6DBFC5351F0EB028E0EBDF214F70EE6
5F13C5E02E24E2D0A0FEDE9B48F2AFCCF214FA14208863AB8481215FFDA3E0A892491CDA7B40
E1C2F726A585F7D73EC4408C1CC7BF3B693B1B4E31E08D1C862E47B9287BF7CC8F7C0B029EBC
D2E0CC62ADD7445AF53245794CD8B442E0B76B343FC998CB02B2A5A4FCB6715BE2C2C81ED73B
3021E2F025A32687CE285648248F65360D322E021D88B383891362854D7C688193A328141E1B
7AD514A9BB2CB9F7AFC207FADB9D71A4F21D2C7EDCF5BF996E6BB492D4C4BEEC18950F543B81
F4D3A02F86C4670EE4B285BBB96C9FCF65ED69B49F09725BCAE59BD16185C7032B89C7F56354
F2DA61BB9283AC71411BB64E373E960410C0A401CAAF28475412FF970BE5BCD12E61D6036961
680E3BBA6D93232301BA52A8A5237B36B9E94603EC03894BB27C7AB10EB1D5BB2CE8AF7552C0
9C578CEC4F2CBBAD648275D4646A3586D756F93511F6713232CF877D765674DF55CC9EE31045
C1B52819EC73F21E3D0B5C0731F703E7FC568C5CBD5A6F613885A0ECCDD86C26CA084C06CE30
B19B0B4F1DF2515728DB42CD07260B77E89D05621565AF433D0479F2628B55A1BBF3B8ECDAEB
6DBB69F77D02001BA416605A985FA0B994BA580DA07FC833D42CF5D644D75F7EA01F6A8DC82B
9C62CE7EBFB488E3EABD74E40E6F683B58CFC2BEB2ECF1B83BC61957B78718569CE394D79407
F600AE0EE60D817F9D58A232AA5E92AE164A62ECDA4435B9B663CACEBFED6E8E9FC5D41D3245
9E775F436AD97A286F6E920A31838DEADECD89B3720C0BF0D14FB719C1AD11AE480C874A4964
00B2DDFFD9C4EF067873070458DDB14CF882E5800B155572762EFE906AA878210B88CA8FFEEE
45F3BE4D6B004E764616FF7FF6C3399C940B286D2520BCE94CB668A5A95A16D23EB997508733
8D5E11EC82DBF7D653DCF40493EEBE0C20B03151CF509C2843BD1BBCB3B9CED581899BF8DCB2
3A9A6F05A9CC85C5BB982E6B071904F587B885B78EB4A3A68E5FAE02ED0CF492DA98F74412B2
AD7CEFDA13E0D31B2C3283A54E12CF593C9A1D1C99CDB6B1C46BE5E3804A1472D4EF25C557B7
0A8F098C7C614EA6C8A31B706E84FDC4D198D8591B1063401D6DBA629B78A82149E056CB30E3
0EAE48DCE53CE0BC8E2D0505143B75C0D680BABA4243EE1C7DC8C2A86A9C2839615111E57C54
516F77C97CE00368E5F983D2EAAB9E107146563A660129D92A8884C44DB57CDA48EDC76D3F8B
66A5FA945853E63E079824FEC3A095B7D6B06FCBE80B01C0B3FD32950EA66DB96306ED7FB5D1
F3A54BDEF0239968CE1AE69798CA6B9655FF728C1090EE0AAFAB68C2F172E3B0D14B5B8412D5
FD84306346342971540856B6E1209CC306E9A493179122CA4A79047F5C93CA60B10762D3B625
A852A62AFFEB5FAA9A219D689702762597BC7281A43D1C2FE0B5FE8AD94BFF998DDF7A092696
D7C251A0A7FB1050E1E748B364A95003F0A75161AFD9CA196286481717B5A835FDEBEEB69BED
360A883274477B2AA58D17ABBB4709D854FD9B4EC7AC5D6487023AD65BFDD40F064E3D93F356
1D1D3123CAB26E79BB15329CC1305E12ED2F0D9CE2EDE8811DE03A199E407B0049FFDBA1E730
837155CE1A3501DD4FD69DC103463715770254EE7B233BFAAF27AD311562DAE7718AD54EBC8E
0D1C7BF468908CB1256F2A1A7739E238E51D9A370FE5CC112437AE09918D9F416082543830B9
C5D7E5AB2C62BA7D138106795928F7AD163683B09DD0CFC551AA1A06D546192A97EC91DC0774
990D8A7BED8559A491A9532B88298AE923B887A630EACC71A0F2E618FE41B72725BB2E35623B
08C8A4E17C06E156667C4B3F261CE2E692E351C838CB13A5EC9011B07906A701EE646ED9A753
790CEE36AC471E6B138AFC7203D994A0D7F39093CAFBF4956F5A33808DD61D88AAC92EDD5692
EB94A0B63D666FBDDD01C4483F51C5CBCC5AD9DBE81FF88318609465207A1FDC6B9D27C9774D
4311D3C12DD81073C1BF8DCB4A4B2D7AC91C8B17B1A96DAEE39C414505B3E726CB14067680EB
F48DFD46C3D7E7FBCF227EC5A99CC62A6E76267E077B0E2168EA13C3468405678DFD641DBDAC
A7538CB4E9964A4BFE1DB5E94AB5201670245707B3E06BF29AF27161541275A867E2E7F2365D
CC02DD5DE97AF36E23DA213967176D3926756400692950448322BE8B7593DA048F227EED0C87
75553F9CC2292A4C32792DC717605978935816DEA1ED2BA09A0B94946E91D048DB600FCFC72D
501FC39D503B605C74C38B960FBBA663C32CF41639227C7C77FF06B99117867CCFDBD3EC1B11
DC8E16838DD140AC1A108CA02AD8CFE0DE5635057B116A07AD57CA9009C79814EA50E4A27446
2485D584B48F265831869106D6216CF2ECB24CCC522CD3049F112DDE35EC93CD440B9A8CC755
427ED1E44515AF9021E68124B25A79139A08EDB098F29BA49B7E48C0135BD28CA93F9F0E46F7
45BB51BA3BF312660B610069A6F87E686D691FE242611E7770DD6D9BCA64A4DD5510BBFF40C9
D25F0ACF7E32B7A5369EB5406E883F18CF33D3F61C16EDAA0111C20A98B7A0B460E5842E2D14
B13E22EA5646CB8A22C02996325874FB5B75D22A8E0030714D1DBB06E9196499A3E974935507
66EC272AF1F2A444B60B733C56BE16F6B6C9643F87E06BA715BD0491767216C9F2AF7DD40D99
F183E693C06BCEB46D19EF62B57E87EDD9F0F3AE1332EFD4F0ECCAB5EF011128D4C936F9B1A5
EC86093346B0F36284696BA8566DBC38A01733D1E0F8FAF1D00D75D91126E52BAAFACB0B115D
A285F9327BB55030A9E54C951C0E44FD822EFC378A9101863803EC0285DC9FBCDFEBBA3A8325
1B62F69FDD7A288950C665FFBBE5345905B1518EC4CF42C0827C1FE316B2E6466915DAAAB361
3491BAE117F789B87D8AC090227D4D0C7FB85E6AF4F104DF9124C8BC339228B21EF858DC7CA3
7109C76B54A47756575A14F6B2C51CFD5A197480C12060C14662C1BB860FA33ED251E974BDD7
97A0EECBC12D53D7D433B0D67B322976FEBFC640F00A1B7344D8BC98C8078ACAD584BB951113
1DB26F940D969048B94CD5AE6D71E83C1FECD28AF6B75062193ACD58CA0473A86196FF4FD889
DDDA5C46AED383AC44F5991DBA10E0D1DF905EDF36EC99279BF35811D3E177B8DB3E66C328E3
774A65EB9D4782B03DC7D623831A924C631955A56AD83B17114EC5A48805F795DD3CD508B405
46DBB35E6EFC742FFBA113F9A6257EABB18E275EB0CF680A7A0E5135ED52210EB2073CEB06E4
3E82878404BE7530ED3C037A517E7F4D92C7AB7A396836E213BCD4A2FC290A375C33FE57FEB5
06E667F514AD83472954AD3D5577CEFE93AABE6BC41EC2F1248768933A1BBB737617ABE725CA
314B87390654D85541B303E4EA04962547A9A4B9646E8EB39F2E33A68F22A0B56AA52229BD51
1B98158FE300FD5719B659E5B8A689FF7104DEEFC547DF136F67951EC6044F45C942E7C42F91
E9C831917B228490F78A523B69E3EA069D345103CB03226F45F17297F94CBB55FCA7617F5A2C
9F1F136BA551EFEA6F0377AAAD9FEC698A54419B7627C6A591AAF6BEBA128125C9B2477AB747
1781853466D6FAB80BF04AFC7327A60414AF07E3BDB58D2B00ED03C6BB8AA8DEF345519B255B
1D9FDDACCAD376725BFF2763DCC37BBC4C89ECDA3A07157E0613C9B7364E6597359604AA4371
B15955F92739BDEE2639DF941B6149FF9947EB1707C89BE13A47102186CDF6A332CA3B1FF48E
5AA16B0AE899D8480AD0E429760DB81F141C48808B4B849A687903AF43FE7180661EF16BB165
44595C7AE9BFCD7613DDFB56DA2249C6DBD45D17D48B22FD619F8AAEF9C34244B0DABF12507F
E64A14F3E38A9F907C93BB632D0CDD0CB3BDC0B3A663581AB6D39C9E08785821A6638E2116BA
7DBA1969DC5F283F9C3D1E26BE5DB8A5BE44E0024617F8258589761269DE4E8998504211E155
C1B8F6F0F901537ABE3F1756EAEEE1B9229A62EF76D44288D07837BDA52CC84552FD695D351C
EE317D040AC69CC5EBF31AE4BADFF86F3A90D288596E67963AF1AE572D6EDB93D2F363099489
CD45C2FDAE11962C99B555FC361119B81C6191E2BC7D946247EA6562C59C5C28F8D9F6102F8D
F6673F50CE92D99B4FB944A1259E9237F19FF33BF8B6465B703F207B58EC5F8A1CF540D2789E
12B343C9685B8519BD24B691FB11A2049168FC153E5941561360B041F3507B7AC38E43E34354
F3A08BC532CE3BA758C84BB0B5C5E96CEAA8955D556A67A7BCAD4A7590F7C5669704F57E9358
6954FDE2264EC41C5621BF0915B6968AEEDE6E2A17FCC596180304F8804BD2E737FC1BA4515C
4A49729103542B017B7448DD7D4AC53DF2D3663813637C306D24A3B77420EDA75E64BD9C05EE
5AC3644DA0B204FEE8FB03FCBBF4D095828E9E7B7995AAB88B21F0AF120C36547F232517ECD3
DCBCB6EA7340EE52040F724A0B269470CDDB8E2FA8AE4E1931FC18D01490BCB2B463F9810115
7EDD626F2E96A05C9E75231512D67A99BA7D40DB4686CF2FDFCDA3F6D769F487C9CCA3048CBD
754B86091679C7D9D121AECE63B0B3EA0878BECA4DDAA23343A0010185C9A1AA1A0AEC2A6923
7BFEE9AB1138C80FEDD7BF245FFE0E59567E566243C5B7D1978A4FB61D562F223CD8DECFDC66
050DC0751260B7EC90279C9717C139AAFFCD913E39F2AF608FF6BA3351956096B67EB52A72DE
2B2C9D1B1B0FED7227D6635E52D48F65F8114DC88F04B4599DFD8EEB559F08DD3D31E3C505A6
75AF2D09BC1B8F33E784F529336C24EF3CF999169A8BD3680C5D108212F1D782FBCB0699D36D
45FC0D64D271C8CA7A7183F2E4FD3DA9B8131633172E5164AAF6AF858EED14EE05991F1F0ACD
06539B341427234A0AD197AA318C4FA48771D1404671122F84F77CBC8FE4500B14B4319C93ED
381E3DCAB677AD30DD4C6B65AD6B1ACE780C89885A458D4EBEDC1D7D9AC6EDB4F294FE50828F
2AD17947F48A16E36601C804F78A04495A4ADBF6F75480D99032C1F1944B2D61C2B3866BDEA1
11468F89C4A82FEFFA50ECDCC637FF3DBA28566FEF0503F7820D7DC6FA3545CFA71DA1F67469
D79A667066A9429199BEFEDD8932243B33AF94604B37C4CE342B5A5F5D4567198F40DD880024
63A6E3CB275DFBE30069299E98E5FB1277CBD417F3FDAE91D19557D651886EC83777DCF7DE04
76006E4CD623D0FD49E1E1097E7E5F3AC2A00A16103AB85106DF2D3031EB69E50832865576AC
6872A1B6D1CB614133CDECA20431ADE51166BC337B08D5BF5C57077F9DE43C10C75C950B1089
5B08CBF00976C7916CD05539980E7E7DB78EA0605CDCB2B448127E69F90C5E306924BB3864EB
4E2110B6689649B3748ED3001D4A5FF68A0492BE9FE2C5D30A926E53B0E8583EFE8B59AD5B5D
FD8CE5A488EA6D10417DE59A68A5E5A0E1CA7E2643ED867238D61D75F043C8CE6019092827B4
8CD4B8EAC67CD145CA338C971E07F56F5C41A9B2A6AF84AA6CD17A658A43F39BB0B3228C8761
090ACB2F720FACDFBD49A6E607AFEDA5B17AF3CE5C0562D7DC31E2AADEFF4758A02CB5949234
F75AF107A0B08186EC286D7BFE0C5A48C23F39D11F9039073EB5F71E953F6E07714F17085206
8690C2C4A5BAEAA18954DBBB044D2F0679CD653D60C445CF1AA041AB6F5AAD6C72F9CE3CA4C1
4798320D3553BBF4500F68C2DC2A947157671E108209540C93D9DBA21294CCAD2207FD865F9D
0AC73865D838DDA483C998A005868E6E2932B498FAE614703514C46C46C516702989C5D3BAB5
A4EEFB2F2C392D780D3DD9476D83600CFF68B54D72735996E5582D4FCF4E00044FFAAC8CD8CD
B394023D671B7A9E9018E3DC32779F5EF14D97207CE75365143420060DE69D60B4A26FAA8D68
739C66DD9C7BA4407AE24734F73316B670F709947E40440C8C739213E5475684D29F3DEBAE87
2A54EDD999951E7CD5E96DE582B767E11DE90E0611169BD93345307F2BD2140499D776BBF380
C505E7A950A6010F6A12A74C5289533823A005630CB35E541E79966DBECFF631182940C1899F
4823D8DA9BDA0A7A2081F3648C225C6D36888914C6375DD2201B40AEA24316340E26B244234D
131E2D32D4637FBEA7D35F771A51EDE1FA61ECA3E100FFD079516513DAB3710CC23C1BCA889C
2EC521598C33C96337208AABE5124C53DE28E8FEFBEBC586BCB872E6AB572E9BA37A6ADD73D4
8F3DEB3349A58C200F57937F872BB1DB4AE0FC2626D2B3B163F3D29EDBF92A1CDB16EC349B5C
93D0F0D5B42232AA4325BEACE735FD49DDA348A18A65403A6C38C5D7A12FEE686CAEA4B339A7
0B635ABF708F5FAAF00355A24C11DAA83936D596E0481FED2639969271481B0DDFD4DB485AEB
F6C941476D0FFC6A10DD01D0337CBA34A952690866459DEF254A66477BCCB78D54DBB6FB4F30
E8541F51A9D864615F2AEA3C234FFD46C2F29AA54739FBFCF08F3C62521CFD44A5F3578CC149
22556E6DA62D5D7AAAC1A4FA4B8D46360EA5AE0FE221B53AD195363FA6B1CE8B03A6B4694DD5
4B015EC5BFA29D8A7EB229A2E64B8D62AD9B7921775DE49BC8DEC381B4082D8F7F5B0BEDA0D9
DADA29CD6172AE9EE98D6EA568891A549B612C647F59EFDC5A10FA2BD9B80DFF4A81B17C5E2C
444A4EBAF4206DD72C384EC24B5E76361D37C7CC4FCA0C9187A071DE156971E67E459996FF0D
1A41CA576F042E032C6BF0D831A8E766FA534F3CB6E6CFBBEB066D63B209BC71A26785684F48
88D03106614D83D21C0466679053D3A80C8B2B80D580C264797E4802B6DBBC198365BDA52579
BAB2AFCBF29889FC4DE6E7FC2887C40EB161A337CC3F8477C571FE2A88FF166136A749F00397
7F01BBC9FB183D9D3C5BCCDA79339141BF387F9447255B1870CF4D77E21EE78FADF9ACCDCC84
F9BD65829B64AED8454F2E3DAECB221117F375798FBF065CAE99051DBD89F6836CC9FDB88C51
B009B612B6A8955CFDBDC74B420CFD15DB2FA22E6422C344AFDC8000D78CB49EAE99B5DE22F6
AE9A0295E778AEC3EFD7B77E2848F3AC0D25191EF9687654D9489C4B80FA3A17B6AF0B868BCD
46361AABD21A90280C0817DB3E33D2DDDDBD23CCCB15A5B5E2C6F10C863C79268D8D1C498DDD
5CB8A935A5074FF0A97A22AAFA72269F973CBBCF3B7280CA29FD5033F64943FD8F33F1347EC6
7A311E2306CA80C14872AEEB12081583BEFFFC8B06997F4D65DDA3E72B4C3FFF97794144F034
908F4EB026721B9B1034BBD84EB1792E254707A77FCE66DBC8818C51BA370E9D8A19D3DAE0F1
9CC732E662325F54C7BA6DEC8CC440AEBF7EF4251EB14494663890689B79D751398B24578646
4D8F7BA021AB1463D9C34F82DFC11AC570A8261824B5CAA30A21CA1A64D978096F70D45FD866
F2125D0687EB85962500BFD84E0EA519037C8E36E5B29F2DFE7A9A0DEA7C5EE64EC3C2D49DCA
B026B9BFC3EECF64F263A584DCEEC50B25EF12E0160586D7DDEB78B7609C2F23B14CA695F82A
A520B473F8519718983A42C3C2614BE17244FE2627A829FDEC6E6816EF9D92B3643D933BFD61
829A727E4696A91A724B0AEA8B66A407011F33D3FFDAAE4D9111E17782B3202DDF4AB9437C57
B2C859FECC90F6D788E69FCA4FFACBF5199ED3A563D70C1CE4768646849B0C4B472AF45E6978
A4D09726762C1F81619B3B3709F27963A40778DC07841E1BF1668CA37769330BBAA742751827
D10FB86531D0798BBA58D7C36FCB524803B85DA7ABE2D37739B8A348D528CB62FE9D46B2F6AE
675B16485DC00120D18140BD7CE1A86C9B115F97780E32D7C7B075092686348F82252051712C
27026BB990D94AF5AD3D4B2B3A32A83768BDF86111519C9F093C00BFC69B5D805742D79AC7B8
A185571636A3B225FE6A8E7009401086429183C2EB879CACF4E084F83B0A88051C4B5F3589B3
6F83F74C02A7303D720A442E18CEC20F07DFA803CD70AF94E54E8B06F54AD1CB72894337D2D6
E2ACF60459605588CB136BCDEEEED232DBFF1C9B3CCA3AE3F31CB242941ED261B34357026D81
0892493F2BA7AE1241B5C998578B6B35B1B3D28E4CC535AB3855F3610F5757F4E6A2728B9011
C943FBBF86131687325264224AA48DF82EA7D120FAFAF16225D756A4C2F868A85AD174729594
10DEBE2E09B556D4668B2CB1A81736DD3A2716DE0F3D8A70680CDC800DD011FAC3B3A403AC48
80131B79C291008EBF32638664E681F61B1904E692092135C577147F5D4F37D1BAF9927B64B0
CB94C9800830A85DF9E226C402C5F67B214A2526B07CAEBA118ED3C9D450B9510B9113CA9AAA
443A7E22810C2C6E66A4DE5B7713EB5DA73898B77C0C896423B3E99D41EA83E816F7F08D22DB
C752BE2CDD01A6B26229FB84CDC382444D2240148BA199DE658CE6105BEBA2BFC70E6B3EB186
77EE10326210659DD0A1FF417C5774CB976EF49AB4B5E5D1BEBF667C3B9C27903C42213B4233
C6E8FF8AAF340737FA81A4AC5ADFA8283832210BAE76BDF30E77C919E6FE735F0AEDDC5D5C0A
AAC37B0FE092DA76D20C5D2725BA23D0FB3D61210E3359BEA4601B19B7A2E2AE526CF819B45E
815C800A9418FB7694B38E43D53772ABB94974997BE59052EF8BEF3DB1BC31685652CA5D2B65
04729D09AE2AA878964CF2C405826BC87AF1D9B09A0D08C47F720A175C1CC3204CA9C29F54BC
8C711FE40CAC75B5925526BEEFF6984620CC18394DC6D3FE7D5951B6619AD55F6BDC80BF6B9E
1A760630826ED9DFE2B7F5619F974947158E6A8EA0EA2871BD0D4B748FEF49058CD67C41F99E
C7A16863B9A550966C0E9A5A1B0177D33B82E795D148E0D3E543A7D165725CFA442445470C3F
867C843DCBD1AEDCA20731EBC1AB1D2F056D8987B561B995268CDFAE226A36D4046BB70B411E
E46E679F57A13D955ABF2B03AA5BD06D5C7207BE31D85099076B548BCF50DAAC8979E57ADC20
57941D64A4C71146E638DF829F7030278382B268F7E8413A7FB901631CC573448EE5F4514520
B5FD129B857D6DC60FF7F861296D226AA904B5488A70FA517E9C14C5FC2CECC663966CF5E3C0
E57B9463B19060CB1F91B38F2A1335459D61E8EF50DF7F7D0A6EC715095E3019668E3591B1F9
55AC54A74357DEFE2F06A99F4F24F4B8EBFFD3DE0828F92F55CB84CE07FDDDFF136BB1649937
A123FBD724B5620AC5E371707F208F0C7BCD8AD715DFDC1AEC94C34417FAF42F79E7F0BA12D1
4EEADBE8C27054E995C8305FF8016FCA946C7C1E38E26D69DF5E7754C031862870F197281669
C2CAFB2242692F95AFDDC81FFBECF804AF3A01C480A94142F94FA6A66AC0D6A3C77DDBC75713
9A5B6A8A678B0CF1F9262E19FEB5BB9F5D8A296479BC88A3B1275B4928DED934191F9A8E6B91
04771D3F9A54DCF8943135ABAB6ACD32F751E01DEA992EC29C3E1CEA3183CFF87A40BD061819
CA03EBE2F1EEE524DF55649FC435B3798BD4D86032AB20CC4ABD996181D64FF35829B3BBA14C
432114FFEF6F341AFF08DD1C6296ACF1559D2253967E8DEA8BD639403B400B2AD3B52F5054D1
6BB1622C06B8CA3B2A63C56ED66085280FAE830176A2CAE70D78BB7413DB48646F60596586EE
27F87739382EB296E6C8DEA922067816F32403911369DF6DE176F1E453E5E1696ED48BF47B07
61AA2F74CEBAD0BD770CF03AF1C73531619C2B14217046B2F6F6604CBAC699CD4F80F1F67AC6
1932B339BCF415720CF1B2B2CC6DF6D4275103ED2D50DFA7A480BFA90C5B560C52B78D33266D
534927A3F0D342E395BA249C495AC0EBE3F3391377A79F0E00FB2AE8C70ABDB1692F14E8B550
D6DC043C939DF229020B6F716820FFDE6C8CBEC9D72AAF7BFC20B637B2AE6B438AAA89BDF741
B59A06C6F49B8CD419624FFBF91E0D1DC85997E69948A872FC8528926DC0D6312B485E330EB1
9DBF3CDFBB63F6A04530577E606CF694143B3009136CC91A8E90E7EF076AA870EB0A96E19966
FA328383F335EA8220A754F497D1C2937B73D9555E06D46D8D181B93CD9CAFE96EEA6C6CE776
4C293A420C3FA1B3BBBA9B8CA0C0EE78882B13FFFF7A3A51B2707609BAEADDF101FE9B7B663D
2426FC8E0259308728215680252D2AB76B35BB334DA2A39D0EA9C2735D22E7AFF98A1FC94AC5
8C177AB5568F81AD20AF1BB3295CAA73182ECFCCBB534A7FE9442060EA6AF5225E216B25E7BB
4567C7511F4318F9F8CCF1B36FD9D2B913165B63D195289CAE712FCC32328171507A96906E5A
C8493DBB1222C98A0B6D4AA08A3589ECD45AD4B28DADECAEE0C0B79A558E2ED3BD86B48CAED2
CEDCD3807BBC4620224A3E2193C50248799CBDFDC81E53E46A36C6117BBF1B1367939AF0BFF6
93A5D1673159555E5C94C815C4B7391519265EC47A504E3A3E476D5AFA72FAA8156EECF1F987
AA1362CDAB5B9FCA2AA363AABAE6D3BAB607BC24A1EEB0EBE6D3BEE4C9B102465B7215A2F994
EED02C77F3814FCCC38EC364139419373923D51BF9C32F7629DE3049E6101F2B6FA06C0F36A3
C89F4475FFB68249E96F0FA707DB50E1C529AA6E5830C68C62874221746152264A5251D00A17
5342A21C815E6270D7615F15AD3E8D722D459F6295E9AEE52E060BF46A94480E72429CCCDFA9
10338BAB5A840ECDAE3B9DC27D8A9F47FF50DFCB23A066F2D461556FBA0FE0452219419A09BA
965FD0DACDC4EF9D3E88946475DE8C622DA369CB5E2A1130101708CC43BC09F9851C6F95A603
99BF9404E070863689094E58E00E936E53C105A38A51A692DCC9646F393724215F53EF6393E7
68E3C91FB6C6D3793A21DD85B9E488568891D2902C369A1F0246189082655CACA8D0609D719E
E5A78364EC24A057E9BC313CCB0C7AAB5FF3583BDF7B45C0BCF28C46CAC005F990A6A5B9689C
8D4031577B417C2936A97D3479436CEF24B7DC4CA7996FBD9E12E94862059CADCE2044FAD332
DBD372E434163243BFE031E8F501E028257A496B3DDC1E840F83C9C2AA343E2AD5ECCC4D300D
993D4B738C597248D5CDFD45735B1DCB6495CFC3C70BF7F6D44BA783C4EFCECDDECA077263C4
F1E5DBF31F8412705A07165F90F5533CBC5FEEEECD986F8AE6DD3081EF8B5EDCCCFCEADDA72E
37CB7D797CF6F313EB07902C76368E53BBAFFBEA11F9E2B628A9F1DAF84B0496898BD8114BEB
99F71F01E169BB3E1FBC93CB29944274B6B0895E902CD0B931BD702B2B2F3D052D41AAE47618
6F0DEBDC58BB338103575706BDC69DC4D3339EBBA4A8913D22FE244A08F640BFBD8B9B52E934
266C4800BB86A0FFDFB658C3878649FBBAF09DCE3B502753D8C845AC738D6052D5E22A0BC1E9
7AC0637C3616364F06AB04ADB1EF39EC5CC133D14C8AF1E5A4FCEE7E1C4C9A423D6C52F319B1
0C5C6114FD3DA25109EDA5CC01FD2DFB52AD82877A8813DF65B03D1927D699AF21E8AB930B97
895D2FF27F7A871EF2C7C19801EB14CBA7E6EA2BD77D71538C3D564D5F9F462F604317D91536
1769C334C7168A950282D46A5D097EFA268B8D0692B0C40AC5FFE88CC6AEC0CB6C42CD70F46B
9C46E1559714923BEAF960D9A66A0852A60B54057DA2F50FF24456AEDDF31A8536B7DE522E28
7E53C0A7BA056C2A12D122158C723C69087CB045F1D206DF486F3F9B63CBC693A563A5548419
1C368FC9B7CB4A313A0E494F890C93C1F089D08C89460E1DA4F09AFB317B7EA7F165232358A4
6937821D5ACAC4113473385AFA632DC7623D3F51684C577AF532AFB622D74E7A27CC58FE8AC4
E7CA1FF40B5D123F36B404D6F6A1C363693083991DFD58D319A5475D3BB683832112DDBDA77A
C23E935998D5A880E443D0C3344119F6364C5D7BD69020CDDA8D1AB8A59037CC5056CD7A8157
AAF854B548E29AD13075B88A502349A903D55D0172D54A449251AD7A4A8B1EFDBAB1A0BF18F5
C28E45FEEB5F8D3F0C0918BC8E40EAF6E3ECD88CA4ABC3C3694534AADB7CA1C9D8D32DAEEE34
0DD3D45D371C652CC9ABD68E011345A7B14C116EC7583BD7F7ADD97547464AF3C4123BFC65A0
F4F94EE53F4B299F80A0B72BD717F00DFEED4605CD435298FC5030A73E7184B250EC13525958
44B4EDA77039E29476AEBD42EA8CCF587CD4D743210C71DA2C7AEEA0DE804ADDA63034A58C9E
41EA10AA6AE6E01E30A7EEBAF223B7CB1625867E5411905D87E855FAD50D976B088DD8F8CF8E
3391B16A490715B1B271CEEA3D64E949E1D03CF3029240E5D653372D1FB1EA7F7DDE35D3E057
79A015E4285ED52D941832B15AFAEA40E31926C0773CFF0CE61A8AD255B14FC45B6D2A4E60F5
D4C2EF99E9CEB145598883D196FA8C950429C34499475980AB6BACDEFDEF775855727F595BD6
C045D2A0D0A2066FE698B9FE06D5712CC71B546424DCAC5314F396653FB5641385746E8CAE0A
E8EBBDEA33594DDDBAD6845591F74F415EBB018C564A03BEB3A5740A9953C781C11683C9C8BC
8859A292A06C4FFCE94A80502940D0B1BF8B0A199AFEDAE448E6E805A7C19C75EB8FBFB01084
B882E6AA14E81FCF64B63F0E12C2EE8285E4B30BDA9FB2189A8A18FDAE8BF929D5012F0D79D3
FA5D18ED7A12E0696CC7A5BB432109FBAA2A18C47C25C43FE311551096B1240EDC18A085F87A
D588639AF355769CAD63687E25AC62B247E57B68A24F6A2B993AF55398DB46F78261AC5463AF
D2B67FC0471C5C3ED6F8A739ECE057B300CEFF4FB4EB31AB2FF5236906FF5D36EA338C11334F
05C7ACEA1BDDE6BA5C63D180D9309F26FC26DC414455A4C8F7A5B3B75E11B782536C44EA925B
69E09DE3476F65D12BF600F760615171DC939F6AAE953D7AD234E6FA0321776B378FE86691BB
124EF206D1034E3B3E5ECC32C933411144287D3192C6FC259369B608BB1EE1A703EB61BB3207
F7DC20311FDE6FA988836ABB6E2A683707A902027506626D765C84D5F52629BF358420B3C399
279DC1B52CF9CF3320E7E9DE4E3AB236D3265F1EAC27322F036D5E86210C57FFC54A7BA0881C
66209ED2B1C471CA625B1C70338CFBD880A61F4C308D3450A62966CB37A2E31B1AFFD8642BC9
D7F22E216F7DFB50036376C9131F99CB57000CC6E27979690E4AA39D0086FB5B498FA0166443
F2E6E1A7CB197659B8E0BBEC27A67CCC828D48D5A03FA8AA9D65105A20B29D073461788C82AC
4E9F30C4286AB7F4D21E9B704413FD12E1B5E7A6CE89EA7C92E0FBB472E34CD2D5B30A0A9B17
7693A0EC91B89D4D964EBB35F5C73EEB73E31E50EB500D47B4D1BA9B88380E7F11FE8135F72C
7BD688C4D6C908BA4D0262A0A47F3B04A91BCCB80BA992FEE8FA3E16067B71EB6249978BE2B6
411BE95B007C0E88DE91D00CDAB4DE1C75568B3BD03749067988C8A34795671E7FC0B0BE1220
1572646570BC46D61BE1700658A07B6736B34AD3DF309965A60F5054923BA25C3EC24566476F
E7E379ED48543999C732C3A4026369E0715702CC5BEC13D20B70F2532F3FA317404E7A5F04A5
88F3CE2694DED7BABFDF35E96BF395FCECB6F69FD2BE62F807EF2CBE304ADCA2141E1496E10B
4AC47B7A6C3FBC6D8A9C700CD54BEF6A33DE17146E128F6649FF7D7D13F7DC0E571811D74E34
F87AB3ECEDAEA980D0E54782990DAB09D491569EE687028A46BEB90B69DF0A62E44F1CDF4852
78BBF5C3C2C36740F95365759FEE9FE1BB174A932E812EF30302C4E73E98810EE874FA4BFE40
7B7308194576FF40949A3776A86B8462D865BC005E966E3BE0003AC6A3D2E8ED6B2526D91D3E
5994BDA0D7C956B5F809C4E940C2F3DB0793850FAD201A3F7A1A6BF6D04873D6FDE7BBE78A13
56D800CB643CBC589E8100D6415CC9193BCFD7BADBE2FB3675A47B77D95395B9F644C11D0904
0EFB27F4C1C4380D1C62F073F92042953A96256176909CB85FF2ABB2D64203E00CCD0B5744A8
05CCFBA2887FB612B8027431ABCA3BB9787895DAC2B2C272B30C1ADC7625EDA7E5C715C72B34
6C563A71992ECC9EBC061239ABF81BC5011FEC3DF5765CE4EA3694534218649E973D229084DB
19E34199C1AC81D1F52AEEA5271CCE82D4CFBD7E59839ED67FE243C5A77E2E9EF10C6DDB7564
5E8BC3D6F81C1EBB4514C0AD2297563A5B422E5FE29DC6BAD52483E111EE7E4C75055EFBA1A7
4E5FF488E91E451E5672217DF529A0F68B7BAE363D68C3007B855F8E24166255FF989B34D544
B9C05279D63E425F0BBE48D939E001A170EBC0E784E79A7A155CB89226513ED2035B7687FF7F
FA27F18F8641456A4B8F3C7D7EA48B94A11ADF59C4919F632B9E1F750F04B1B719D254655953
CA3EA90993D4647041D63F09530A281BCBF76EB6ECE0A8DB6C8E340086FC36FAA3B803B2A744
A36F7C8E295FFFE5AD2ECA1D152D446F518CF649AF8893C529A8AA9E500E6FBCD980B1D62331
81FFAF8816EDD8EB7EC93374FB22D90A59A1064D7708B64E11CA6F248CFF2DE24B807FDF6C8B
209EBA2D8A95BAED32017CF7D06F3D2676DCC107EE718AF46C57C54420398B448FABBFA0F031
A3DBE8DCD1D797EBF1B785FAD8FD04AEE38F17429741CBF36028189F9CE20F84155AD377D645
1A2F6A476FC6F396FFAA22CD2D5F9CDFC6946ED952EC49D05A0888E3C8534669A711149B2BCB
F28558B0402FBEB111EF59C8FFDA4836533B30EF1E5C547B8B27D775F97CC55E8433EC019A54
0D7F248D48DB417BCB72F52D8F279E495967F6EB6AD790DC79DF38049F7B5E29FAC19A97BF38
C6761FF3E8955E519AC43F5BBA5A31A954543C7D56B18E96C13549A9ACF4CF46EEAFE6A7506D
824E3E6C55680CEC9A6AC22ECC11DB2BCBFCA16559FD010ECA8B5A8B91AC470CC91A84A33EC5
BB699E4901596ABFD42461805DB8854DF9095BBF3FCBCDCAFEE6CE9EC915A9E5DE1326BC8D72
19A3D31660BD3955C65088F41D7BC172D04902AF40C9D4EAD20D72BD2ADE96A08A4E7A2A9D5D
2AA451B9BF6A3CCE45B8F982E1A06824781B07344095DE5704BC5D1998569745F2C2390E3002
D950353CBFA04119B63C6E3F788DE381DDA0CCCCD6F21C8280C959A6168B9774D8639FD0DFA8
E7473A822A0CDD18EC53EB39A94161A05922973930D939B4DB3AB2CD0B3D94D6357F1FB2427E
E54CA5398F536AED182181F27E58C98E9B6E15F8554F792F28080BC6CD124BC10A6F26E65DA2
71F6D699BBE101616E4F2615509A636D3A1DDF352C6229339AFBCD08395BD401005F6FE4918F
205E8C6985C1F3C41000BCE8160259E7E046E29182F06C799B39C5F8281D06C0718B59C5820C
1396F7FDED44E02137C88AE7AB137C2EC34E0724E554EF28C6D432330F7281318F3CB6C68A1B
EC7F8F5C0A19063610728A104AC45CDBB925AFEC6E733FBF1B24B396DF750E2C4409FFC559C0
B14B64118CCB608C2BE50F2C8C76A32D9B0B46E99E7A98DCD586244F031777E3517537C0DD56
EE203DB558FB4173BCD182E80D5944F9574A3CB14570F9B3A719E63F1272F8AAE8B42CB27CE2
C33BC76495E6DC636BB4F5945A6B53F36F1910A72176253D539B1FF62EA855B509C168D06482
CC9E461E1FA37CED1C080D8118569070D7590FF78A008F1F962EE51704B4D20F562A20B90927
1A73BE15A7E8FBDD9E98D3969BD26B61176442FB96D533F848E7131F548B6B7F5FC8FB1D70D1
F4B7124092C007618BF6B9E4D828508BB8FBD1A12259776D0BD9C606FF5F8C24EA764E5209FD
EAFB75934F4B204EC810F5E2CA75E9D79E469EFB96826A59C09F3793C39C5C886F702943A72A
53DA2DA987A5CDB455E836E6BA8F6F2AC2615C55C484ECF85D1B1D586BEEFE7DBCC766431E44
F443F1AD3FF00384E756B995F41F2CC3969AA80D10C1F88026F6974CD95C6681D7C51C02FE1B
B728CDEFBFA97725021C8B17FB9C64967F6ED00315C256383AF9EEDC2F7983734D20E2C9BC3F
9BDB75A87ECEC71A36CFF3FC81991A06645B1C4827282BE313F3B0858402EA29BEDC9314736E
908DC66FFC55C022C0B0B2C5AF2A8B4E2F16CD60A11C6409B2DFEE49A4D2C4CD57610366DD81
380A2F3DFA78DAE9123B9F7641D92462D371E0DBDB805DECAECC37268FE6E0509E25CB84F78D
4E65CC736C8A9A16526D7BB3683529AC5CAEDA8D674E1E20DA77BD4397E2D0DE62B3BD7B4097
F09DB20ED2F85BB0F633B5D59DA9E21882DB848885AAC7F23F229A1CE87F2A0CA34E3C531D23
DB7FF4C2DB7604CE5CCD78D2ADF008A71E553258141B98FDF88F34969251EC6336EE3F68543F
339BF2B42E9AA2E3A533B1D7E0889FAA02578CC80486167ABE5188557BD5BB405CA66C88D6F8
A5E2274ADFA061710E008733165D0CCA7FF0C19CCC395A25D5BC6112677AA4DC2197E1E81529
CB85E2AA160D33F8A3D9AAEB6EF2CC0A7699FFB608CA21F1622B2D18B009B133C7FF57CB47E1
75212B77517EDF23A7D617FD205A68A82C2ED949FFDBC1EB5419A97F3BC4382247D0BB92DDB7
515341845D4A4B373F7EB1E8CF79748AABA4E70FCE4055F4ACC9491C791A91E258C61CD6933E
B20D86A6AEF92778C0A19C7642ED996107FA919DA178CC3C6852F09E4CA4156B52C36C25100A
2071E0A8B92E8706DBEC740B41FB7FC0F5C15E66B4DC40CCD985D1284FE760203A38FF3053FA
8F0282F4AAF51A195B84CDFDB1B34A7F359A4740A35CF347DAD461F4AC771243E367DAEBEAB2
05CB315142F069A03B54DEAA94BE56314F6A1CEF9B25054BBABAF4FCCC4F55B710BEE7DC4D63
A6590FACA3B09AD578799FCAA8F47394ED663F193088D777F4D3EA7F490CFF4E86D0401C2747
A604455C3A64E25BE9657056DCA68290A0DD9ADC336FF035C4D8A655D7D42190CFC0FF2A0E87
B750523E7D2C9707850F5A1CFA863E8488D320A06CAC7C5F2B191BC442E488A39F3FA5A0EC6E
9830576BD2E38DEA3DC84C91E1CD4FA0D6E5D0F6BB2912171E745DDFE9726749E663A4E7C859
D1F3AAF8460751C04ADD2B18B547034840BA4008CD360367DF0AFA67CFD048C585D2188476FB
C066CF64672CE2D98FE21A7D2B7EB492C379CC354A26D11A3B7443321157982138F5140C4F95
7146EC1F07C4D58EC18346CDC0C69540E15F56FC616DB09EA48EAA9FF1A9DCBF0EB37D45E66C
678815249A871D88DAEFD636ED41873C789EF05CA06FD888D10FC2F5FA2C98CFE020203F0885
02E0B18C5BB49262712DB919AA561CA79E6C45608AE83785902195C1E2F84556152ABDCE3F7F
584452CAEE3510017FE16F87149E8762E42E7C82DD4088C97080B052F0601ABD63BE030AACFA
FC2948A00507736249B525109E18563F3BA569E79CC2F6D54F7BF20EAEC169A9A5DB9171A525
9224B6D934978B346C5C601994D5AC51839A72B2C19FB413796A26B54B77626C7B543F4CAF28
13FEDCF847E5B7E44018CC15D999D4EEFF6B20E8E93EA97B519B367E6A91EFF7C61488041783
E7DD0E5DE26C9C8060E5B30882F898CDD4E6A02DF00AC63F921289A0D0C052E78C071C18BB4A
6D19FBC3710E79F03A0C76B70BDF33603A906ACC76C9C9652DB4D2684AA02544370AFBDD6EF2
0012F33C4A0A3FD47A20DC139A9A4919BE2642EB11117D55F81641924B4BB5F57C07FB44853E
98991025633DCC4D2FA85B3C41C8EC0512575CBF0A0058075609C4ED55EF56872EC6FB403A71
2358B46C286CA9E16E1F5DBC18332E799AF99DEB62F1474EF61E5AB76BF913A0F02BE2D9385C
E234A33F602CEFC23DF4E487AFE459645204377288ED670C38A89F1D037828CEF1372E61E392
C6970FEEFC17ECBBDBBCDE721BF1E453271E87B937F43D9642FFFF80CC064D9E456CD03E4ED2
3140D53EF1E22BA2832B0D892567149ACEFA467DCD426B76FDCFF9203322BA344D4B34C9B551
340DCB53AB08D3CDDA880CEC5F69E06F12B77A0EE9E9CEC5901183F09134C157CCAC53C46101
48A49D54EA09C0E2FCE8BC0FC9FFC2AE0587C62551B7802D539FB9DF9106BD6517C4637418DB
EFC4859557AEA87B9E5475FBABD838261358BB62BBF3976782EE4BA9DBEF51891BE3C828601F
362ABDC85DA8D0207D02CF86D16D9D0A62F6B213381185B9D2C1BF728944050FDD8DC3042AE8
E1666844DEDA965900026B0F051F61AA77C1D14B4C6BBEA33DEC3B615A1BAA867A694E6DD5EA
B45B12670E71206534FD53008793259254CC43E91920F60067243DCE3C0F5895981930681D6C
82CE2815F18D88F784D7ABF8532E983EF5805F8C00129E79427FCC5C3E6834A92856CAA7A38A
D9C3F0677618D5F4A75E28BF51F5FD7D1BE2EE11B1ADDAA8CBCF61BE135F4E10151174B47D7A
0EF25E73BF9EBAD4C2DF460B68F10C9EE5F24C4B21E05D969595EE684815FA0B093BBC4B3D0B
CF6FB8DB65C23AF671EF40092B473A46C9593B8F7CF90524FC6E162AA72955B83B7AEF92D1A9
3863634FD39C7FD630F1E716A873C3D1893DBBCF994F4355EE168489C5577D491CA8AD775579
AB7B0270A4C6CA921C956A58D094ED87E0C9E302291A14057306F9B02A809681E406D7213A4C
AB1799E0632FBA51E4E999513F414F3DBA7421D1470D2044A793C23DC4AA2A8A48A397CB705D
16D5E754873F97219A1342DE2BFB37489C03AF160CA52C6D7F712A528D4114364043F9BA3599
0D3AC576B3EB080057A0F4CF873177A9C9634F4D8720A598674D79169A3AC59BFDD88597A8B5
44B5E29F9EBD59B9B207BCEABB1FAFC220BC7735F7BB708C3F81943E314C764B39C36E0D62EB
517985526D94337A4BC86E9076FB1166E586FE1B73EF65FB50871356DC5C8AC55F66E6E31CBE
493EBAD38F2AD40759295C6EE0EA3B9E448765780E4BCC09E289DB55C7DA57B0CE00E9F3AAF1
13A61251380460CEC9D467606E45BC24E107BB3829EE5B14DCBD0142FFEDA4439F8F11853B15
83302CF4936C9C7A74C6E225D0EC00562E7648EE82D3138C11813AA1F2E1A79768A46FFAD6DA
41413E0DCBFA2B96337982EDB7B819E4DAB522703A4CF7B19544F3EB6BE36D9F9CEB04FEF067
58732D04F9CCC18C5249DE395CDE0F74921A1E7210C431B803D430112FD28D76290584814CC3
8493E616BD0EA7ADB80058C40E6C543A1CE286C81B38561D792A73E16A6FDAE8824BBA8D524A
5DEBF783E8D3A4DA163C1B3DA3DE500FE63B5CBE002FB72A859FB4A216E82993286D9C1B034F
6A53D4B68BC0965EAFE0D034093A50C625E67D7DD368C0F333A5398C8830026F5CDF0BE95DA8
AAE4A6F8B01666C00176FE2C4B7ECC796F7B95C3DB9D7DFCD587FAE6C2248474E39B3F22C2CB
2D4BDE666D7411B588D89E127059A1C62934E364FA6D37131CD60340A408671553FACF46ACBC
38EB16B8DBDC4428BDB6A36AD54847110D5537DE1D77F8F9C1340FE495A33E761209E7CC11AC
8DE75A425834F521A7892302698C89B39A33D1E191D3C119CD473DB1C20DD317349D628DD027
8071BD539222FC0B830FFE4BBDFA89E821668A2068A9DDE5D325CC4642AD2C4D26C860310D59
BEEEFF3E6FF932C667059E549437922E59B8DFCF96D604373D4B830A815F79EEF626A1265887
380BF0C9FA04AB66852E5B2325B3EC26F8CC5596FB7976EADBE5EDF1EF501681265E2D6CD874
DF93F5B4B2A163B45B9B9139B5510F84D12B3C21296F6BD22C906C5ADECC332D76667B0861C5
D97A0CC4E913B7E84B7E9FF6D81A1797EA64F633DCB14EE9679F55FAE3227F7D8294C2BA6B52
A9A2A2831316B867A999422825E5AD19D090256AEBF70D2A4E9CFBF7E13EE500835D79D53323
FE664B6A4E97345DBDD0260837D0EC6D51FFAD94F2EEC151EB6E950F052229900ECD8D7E3126
E294B694048BB7FE50DA290AC7172169A229BAB34BD4918BA42D78335A23384C455C5525A187
92C2726792AA20FF03198F9F51C2F417DC6840BA4D96283AD096536CE8B76E60A6038AACFB65
ABC71BB52E16351FF5EEC2E206C800ABDD2BF1E5BC7ECAF72A0D2146951138D648239138703F
7F095EABBDBADC54185E3F283C030132076CD8BAAE43E8A69707BE961E010286219D0A144D53
8DB90AC4DB19E8955231CA7737B4B0B9B3192313254D9322FE5F2F660D0A7B83828E7939AB93
83F3CF7583C7CD0A97F3B50B28FD9365A3C78592C42666794275A740486C455380CCABCE446D
19C939D6D654270BFCBA2FF5C2BA30937A6D78FC102738ED179CE811DC482477706271E8F1E1
A3F4CBCC2F4B569CCA75EFFB4098AD0F01476A54D25D00B3B0D44A37CC5F75CD8FEC86A44C2A
EA620DE00A24D3BE5D9E6579A5B1F4C1E4CCD0FF151908E4FCFA58117EDE3D2B6D9D746826EA
1471ACAC284AD5C74AB91C349C6B5B3D2D25BF538D71366614664D073673BFE51A62492F2D6D
5F591653CEED0C2F957EE2BAF8EB479DC5536B7E13D52480EDA66A90ECA55FBBDC36653902BA
DBC6CF8E6964D8B4282FBCC8D45D60C6D4E0F1A1A1C0C44FECB1675C2DFED36831EBE9D734A3
0A9E7C3C8E218C3FBDBFFC6B9E0220D477D18D8FE8ADC38E502C29D14CA1C9E5B227920B131E
06D4AABDE5017E8828D331C1603F9210956A342A65448903C1AEB2DECA6FABE139A4D99D11F7
1B2D0D821B4663E5D7B538F91ABCA16D73BEA8CD5127284DB52B5E0CFC4EF0693D5D3367AF91
27D3514524A844BC980795DCBCEAAA8AAB94727D09D3E3BC36AC648E6F7FED3E5FB455ACBFC5
40651332E70048B960F577CBD12076278C4B0B7F33751A1162CE4D06D064AF3F186912C5FBBA
65BDF101D88083B3F7328F2351E982EC2D9C871C8C807DB664AE828E723A9C65A2870FC809AA
38DF49200B1EC3BC77DEE16B61AADF0D6A066DD062E683951E93A2ECAE4719C1C625F6FB20CE
2C3E5FB56BC37891866DED0B2BE4C34AB6D7B3E4CCC502BAA326AE00EBAD830AB13DEAF7F651
0B58765F663577CDE9629C0B16424C4FB9D59B0CDA5C8EE03F2BAA79B5BE50BB4E877257974B
235942C4A437BC86055A26832760804FFFC6C2E9687975ADF6C5D2DA007510DDF2B67B2FEC07
1AC612C8990E5B317A7C6D9FDA80CF4176D0B7E2F1FCA673AFE816383991B37C191872448ABF
EC251D4F79631EEE96D3712B6B10C2ADC3B7013F93A4F332F48840963CBD3C4C98BC835E2D81
77FB510631D72D8D7B0114C389F8F3A2AD34F9B341F4164323E4391C612CF89A281F5908E638
589DB11890EE688D0893358F2C938319E2314B120FCDB0805171EC10DD31B1E1B290F07A9239
3E8FA57BDF449BA8EAC96F55129C59438915FCD9F238077DACAC432AC53ED2A03213E8ECDE5B
68F985EBF72265B80DD0770C26BA637E5AB0448EC2234FE659FA7D60D6CC1C9E4141BDAD8A37
D5E627BB13A7D969CD63AC1CC6AE2A32EC2C0EC8FAFC0F71433B47B5EAF9862D2B369CF9179A
8504230E3B837D00F74E54E7325DB2E1A366910168F00AF9BB8F79EE16BCF5F9476C15BC8231
82F844D461A4981815D59E2A3577DB3E4CC0B923EFB50EB098AA15927DA7D544758E7FA3791B
4DE2FCC8AC709A15E98C225A2A356E8217D50102A8730440BEAD133A23C6E488DA21FFA6E7F1
6D3025C3780E4E35108685F84635CC877A8895962BD3CC228303D7F5481AB7802A2D3D58C90D
C6F1E8D349ADF49215A8CA4638B1E9B8EA057F982A0B2DF4B3FE3638BB617960E06F172B6E51
F2ABB2DF0EC6687399DF3F3D0FB26B0D2D13B9FCA14E05B0A84E6A01DE3F20E2C9E395D5436F
C294D1DB4E45A1203E5E33411E42B8664F3E87C96EE46A1483CB2D03321074FCF0CA5FD383AE
EB1E50B88F951635FF86A6088A0BEFEFD866BEAC9B863BA95F7FDF7AFDDBF9F047B4CC5D17CB
F0E1965CB230D9FAC4D4AC392EE8175D6B865F3A1E8CEF2DBACF2723EDBBA6A4BC6B55EA8331
182B9EB8AE90C3AFCE452BA60C7FC353D7142D6266EBBC2C69C2BFD032753FE151E6B5C29B91
95EB737F5CF33933CBD2DB8E96B11DA807E40BAD957351690B33CD47419AA81E246C29231376
CF055AA710E884E40AFFE73E6810FA8D99194AA03711C0D934B59AF4410A10EB7E5D4F7EE56C
A1992DCB9D512C061D1BF72859C76769155441EF7B4779BF57212C83FD64A5A98BFD2CD26B7C
F1D2FD65627FC7E1900B231D4FF0F1B09AEC87E1207DFD73A322719566EC771957C439B55A7F
4ED202E80BDDBB8FB65E21A978C487DDEC50A47FFD2EFB1B4083B7A009C688A557C4B6195B1E
E4E2739EE39512021D49911F9157704646AC63B7566473581144F84B9F4F3D93FA35122FB65D
9DB6D813AD1A8DDA0B4F1ABA62C26A1C5F81769326DE954C56B5DFBE2CFE61C39933D36B26AB
A5311673A3BFD0830F899CD382E7579A84799B3EB35735734F3DAA96127727ABB92CC561C84C
414CA451F9474781305C7BADCDC551899C59839283BCF193D35D3927ED3C1B0633092BCFC970
EE8BFC484A74695152711BFD948CD5274E9C762EFCF47A9C61C604DA1B5AB9D2FF8379CA37FD
0F2246D6520808B89BA75466127ABA6B0B1278AF3711FE15B2D8D8D486E45DD76579F5858962
6E5BC4FE661C1C6C705756C906406A9920BBF5DC5A3D0135CC1E6552371F72AEFCAB43B23190
7BE893C0022D00CAF23C35764F70F88AC939BF00FA8A60D5E8CD03AEF1CAE04A51DCF7A064CB
428C84853780397D65BE31257B7C9D056B50F18E2A26017B495AE3AC8C45CA68117D6D49FFF1
5C05303A67C9A3A5C716E4A0124AF43C54828D5628CFDBE9097A28D5094BDAE8682903591E39
A6EE155F6459F756377ADA3E191C459D601CD2F87E29754ECD5D8B15C6A3E00C44A9BCB7F069
780ADFC8E7754407238F64E1E35A9BA3E5DA7473D2C2B02333904052C7D8502433AB06A47368
73713A80653F3979DE36353B846BE67D33BFAAA6979A81224D78F35E54BF9863B27D870F401E
1E603CF9819748F6FD1ADA901309409EA09F7DFF8F317770A3D95102247B2A694A90D68713FC
FE76A5508613F635617B866BC851AE68237EE37AAEED94C62376FB25C4BE712CE18DFE0BDAEB
70F8D06BCAA3CD8FDBDE0D84BE2B75B1C2AAC4F64D1504DFFD787DAFFC99F7114C77B9EFEC86
C9B7C1B0A832BF357413132456167377145FB796F13D6A36875A946BB62A7BD558E4E8129785
B96176EC60939E813AE932D956026EFB6EB11CFEA1E3227688180FBC6E240B46B28563D90576
BA3468F4EC6A11B4D0987CB80FB4A4AD69C2F92E5287B33D35341413E568CF5C3330EF4BBA99
9F46C0FCE4655B9668D965AFD0BB130BAC20E721E0DB58AE80346AD441182CA3253CFAB208F3
A0F60B07A710A19D07926C8B2591EDA2F9A497AF6C2C972E24D5D18C9C67DE9AA02879402C36
ADFBAB58DED298D269503538762405B986F08607D295269B9E31D69ADE289F584BEC73F9D3F3
29475BADC0D15D6F4361FBFCC2FD36A15A5891A9E01A0DA1B746337DBE687E023507490035E0
8599C7ABE0A25FA9BF917B7AF8A526B6BD1C16455D2EB130C9AF1568877242AD753CCFCB72DC
E26360F8C57B3EF9DC597FFAF3EB74C65AE1C0CF11ED959817A52C3879E1C1BCE551523364B0
91FB83FFD847DD8A81DF3A1E47695431001F8F7BF796CE8C78B1F99A70C5AD7EF5A8D4A65D70
399524478B692DAF02FDE6A4F757C903CA3B5F52837065E8BA6102F49E7BDB5547F57EFEFCB6
B7494BD00E0D1F4742710ACA8C670BCE6B770DDFA5A215C8E83908D4FDBEA869A931DA1555DE
D5BB3618030B52D524DD3F7F6ACECEFFB3798332979734A62C7D93050369F89ED9571F635243
6974B9E1B5F3AF0015A5077146D56CA7C3D8763126D9F1B3DBBBCD754E2F2FCFF856FA5F4239
C0907FF101DD3AD9C92F49B21931E66033CD7531220B132156799652E724CBF2634AD362AD2F
11F8607DE67BCCAB4AC97906A53FDE9D803063EF1B81D65A6B7A0E1859E5066FC1DC3AB23B07
86E14A894496A7460827857D42A384ACA92D1570D997CCED80F4A0868195D5654DE3BD6B5D01
9A6B1A154C1643C6DC4A5289A9F05B3E92F793F5541BB0FD22465497E5E0A25EC9F425648936
8109C9C80A1D0E1CECE2B0B3A1CCADA6A5439333B5E83C95B48F17B8DD037D9C0DC072703A0D
A3F4D7B99DF1A09F7BE26CAEDB884B136518B84B24A9855F559944403921BDF1274D4F861E6F
F32824B9E3D41FAA5D19294AD7AF40AF9BFC51729A8B59F652B995822EB223123CAC2C404D35
40C6DFE7052E2FADA3726D530E56B7039D4A21A8B1E1A7753CE11520D23E83E082659667D0B2
05227F92BC29E8FB63261FC5B54659F8E83CBB7BCCBCC2A839AF2AC3E319012EA10A0D030C72
9B57C883B66BA7A0C8AD810CD65926635C12F9A475D2DB6971FF49D095B6B3F1B3F59F4E7ADE
A60491B30E48308D9EFE57A2389A5C16EB6594815E88EBA0B6DA9937EC38E489290A47938C78
D8A8C43A5F27056EAED1243A92C21FABBB696B98C662F932D9ACE5DB8F6C7FEE5BB9FCE8BA61
5011B48120C92698942027FC72CA2A67073FAB4DC645DBEA02BC9F6967DCDAF196F32B6CDF2D
CE8E2E6310AF2C9EEAAAF40441ADE1140CD8A856E2A3AA8FE93A6ACE6A856B4166E140513D64
F68836ACA42DAC43F6FBCB4564946384C209C2FC2060F71B0C1CE39C9EE7790B90F37A099520
CCFA024EC129E0744DCB2326704563181DF55A012BBD7C0ED24D98EDD77FD345CFD258FFB946
5A27C53F34A811EE2CE430348FC021047973AF72BDFC9EEB8E9FCC78FA93448510BD76929838
CE2D8E1A8AAF66683A950355D0A83DBCF01CF14FCC5F34E56E7A38CBD5E960AF1AB4C49EA0E5
EEC3AD1D43EC73976E56C1CB367408FB5F8131CDB128718CDEB71D76BE0864D65BBFE56E3941
152C4B54354876A08E76DEE7CB67C20F835350B5DD789687575270B2312B61F5FE78113A8CA2
5961D24EFFA2EF382AFCE63C221A07BEFE29AFCF392D66621CEAE017A0A8540266D94308ED5B
98725305EFD7F8CFE71D94F0F773B7D545F7F862927636A60E886727DA52ED80AD420730391A
B199A7A0B8CF09D7893458F11E176D29AB3C1BE51F19A462FAB75F07D6A754614B685D616906
C92B29ABEADAF1E36EBDA0E482107367A3AECDA3C6652C51B05BBCCD81E9B68CF261B1369F61
AF72F0E1C18EA2169C4215B43477FDBF02598837C4C5CABA066186A615ABC5C37B875885BFB7
944BE1AD5D870C827504F6A166792C523C0E68BED1FD43008003B0616DFBA770D3FFA2F1D9C6
2A7EF37FCCFAC70031C8584062BEA2FD61DCD242F61A533698803D6F5FDBD3D9EF778E39D720
B80D21B1D1BC463102D52920E525B18BFED57E95A23665B23B600631DD7452736B3A1C354817
14BE7CD0FBADEE5F0C8B92238A54D1C02DEE2EAB0325565449AE0B3EB6A3517C00498D714C58
2F45B41B4FC57013A3095A47C6C1DCC88D3898488DC945C032F317118A01EE24BB1DACE57FF6
9F406977C532EFAB725B3B14D787ABEC205AFA4C7DD181A47851B18C37DFBF8AEE4D5EEC9669
C421FD10FE8247B036CA37C566275BAC5BD6771BD76FB989E9FBF87530521EEE9FEA785EC533
97D818D8AB1AC320AC254CA81A6D2FBE223590408F020AE09A32B5B4D0B69106492444118C26
3F76190F8E1C491722A75970BC80FD799A7A626707DAD3E24F88DE68D51A56EACF0C5C37FC62
227FD13706A0CE1845702C793BED92666632F18CDFF9A09639B63D9615ADE0BF09A319FAEBDE
4ED66D774559EB330BC05A63D18A3F8AEEA6DA25C4AB575864C0D875005385498AEDFC4D6024
F0D96E3FD34C07A77DB90A9507AE33705E8560D8F58D1CEC325CFDD03A11AABD9749B61D8293
833C41723463A87C3225B5866F42FDE371DA214ADCA186D9F159A58937AB904E73F6780AD29A
3041F456B26CA8D9AAD38FE751276367421B6CC89803B30795C7952162EE1FAC94D9952E3406
F5A67A5013F9CE089592D8E88180D6FF8AA04B4A72AB5FE07937EB37F1009D675B821932CC43
C99ACD8CCA478CCD197980B948D7B801FFCF508E9898E301A4A10783EF1CF8C407D25FE63AD6
F600187FA380240564DD7287E059362CE3F29AAB6E997FE43E7AEA4FEEC61497896A5BD84738
A8683F25ED5D194380728E5FF6510F7E9EE88E864B4A6CF2C5FBEC7717C71C95CC2D69B7CF7C
7D36B466323117BFA6122027A86FC2689618165D238C58B035DFC83D168AB3360C0C20B4EFD9
C52DCBC0278D296F29582DDA4CA0ACBDDE6713E9E898FB280B6BEDD61107A0B7E65285C117A5
F08C8757078138994158586D3239BD6242AB4DF3715496DCA928F9C4C091BCEA947FBF49089A
019E7EB0EB8D37E0300766E39C54F69150BFDC1BBBD5FE29886BF62500771387E4D38306FBA6
C5C0D344EE012E54B1DABBA3613612AAAF1CD1769A4A2878EA3552A30810A7171EFC94D0E081
038A81C1DBB13F53608F4BFDDC767866C879E7BEBFD61564D22FDF380C81E8A193E8CCC568D3
D2F7310397504150983FEAF625BB0F2AC246BB5268817F7A370670F6A5ABC35F948AB7DBBC8B
D14562DBEAC9919A0D9788102660521BE5C427E87EF217CDDD2053013DF1D19AF3D929D1CBD7
B7677D992DF8BE7BB0BDE7E07BDDC81CDE78D48D9A6CF8B0A82070F3456D15A8E5CD36CE1FDC
5F79D1B3A93E5500C4285FB4F18ACD571048A5B0F6FF3E478A9E53734220B92CCC20A5AA2781
F0F6A1953E278D3FACAD7C254C45EC865E17E17FBD6028D0078E1F067EF8020926A936D32729
D399F25B9192B26BE99CCC2822461F1185C917E9D337F5BA574816D355A34D29FA6510BC2661
0105A0F189FC493B80AB328D5CE80E2AEE5AB6F9E21734138B41ECEFA53F6F3A64673D6DCD6C
2C9BFF2D3AF599C801F445F51B415B0D977A9D2FC85C0D5921375F7BE3DCA28A1413E53EF4D9
1A8DCC34D7D07B47AA4CBB13A2C06145DD894D6045E33EA53D47030AACE849A6A926E988C6CC
F4FC39E0E8485FE62671C76E7439835BE74F412D885F3CFAD49B6310D1135EFFFED086232F7D
FE1996D86FA3149525C4AF05D5FDB6C0B7DABA9BB0B8B96E959C02ECA3C5C0783C6CB98C488A
228B8D4193796EA2A78C455C560DD52DE0B9A63976E464D79E72F0630A22A79763B0A984BECE
330D2AAB4C577596E7279DA3DD52D0085D19ABD720C25A4FE6A4DC3B0830999D93B184D3DD3F
D01DCD21A0D693ED0A223F027E866B609FF5D8908FA1C1BE97B9CD8D8756EC8F50BEBE8FD336
534169C8E86D69C37CDC6A809A6C7AA1B56D729EE41F62D2EDA89ED63CE8E38A7420783CAC1C
E1219674DEA065DF3D2E4344ECF040DA97274351331547D6138288627389B345CC06DBE98FE9
599DAA4546029347D4E0C2A2208F113F8DA606C97A8C5201B5E17AD87399D7A399B9881576C2
F1067F43B7C89B6C2E1A98EE287BD2E984F3E6DE4060D42D04B2A172F29FB55AB6CC1C0F9E7D
26322F011A232413BF54CB385FAD49563BEF66E5DA80E7E9C9DCAFF536B8934895EB42E7B660
C50F6676EE846982BF564BEDC6C593949B0846A91D8680DE558F6E29BB90F49FC97484D5313C
DE8B93AB884372CA95D56F04A9A0EF849BB02EAD6FF6576A39EF41DDF2F935A06D7A886CAAC1
BFEA230D751F8DCB5178F5FC201DF2975DC9CF26D5621B3CA253DA2302BF8DDB23C7A6DEB2B2
28CDF3D1C569F63460462AA9106A28610C4BF310F29BA8E1B3FEAB11586AB14E281DD4A494E6
68BE172CA2E60DD4B792FC9E0E82A8B9C70506E9BC884F1E2DB97BC1FC3BE12B1D9F4104D607
09AEB38507BF713194BA9E84AF5DDE1A1BD801EFAB50C2CD108BB4D09B2B4DC97348A816D827
13BD20E2C4C6B3984178E75E9228EF20E197BC0F67B7FC2AE7A8FFC62F0967180AFACB040593
619EB139F45712773EBEDCAD9E01B85857C28809E669D2AA8CA0DD3BDB93B5E29634B912A94F
3CF5BAE0A50419F52648208833EF8D7B47E68A3CFF32F7E501FCCD0203C3A3C784E1AC5D6FC9
67DC7C9263CFE369A71AA6A29F96F31B3E52143AE73BB96F708981CD1F6F9A86F82A97000406
E1DC846ACDB79AFB7C8753EF77479AA69661E2D2D3298FA77B8FDDAE6AE54C12CE887098A893
AF354450ABF93B41AD35503A39701B7248F0F097AC33A3761DE935E9D3F10E8FFFF7610ED731
354C09144BC05BF03C0E79B7D979FE6BF18712D86EF174548FC23E0A54E24A983ED36FFE385A
29283A51160A6DAC0B3AFB054524AA0F257598C8715C4C5B3295DFA285843B1BB42FA5F7BA2A
527AE74CB6F095D866F02F1BBBA218522B06B95E82B434A3A5C7878525BC6911E4AA07A969CD
CFAC5FC1C4B98C898EA65AAE267BCD53E1EE1334B545B182E975E388F26071982BDD8081D5B5
1D23F881276064F6B5D2CE5F14FB6C0639283F42E7EFB3AB17E6187A86959BC9337F792A1F91
1364CBCC425A4D4E89DF74C018C5388064B5C84542DCADA4972D31FB988DA828878F8D078149
1CD349C4C7C0EC2D25AA1A19165DBB2D2A1047F78F5658073FCBBCE0D27F7DC4E6394222F9E1
53C4FCD0627BB95F0C79FAB5FFA9B6211FE927BEB94F4895BB03767C748F5D498E6A83342F7C
2EA1DED7A5E133BF90348E1F4D06972CBE2086D7F0B78FE53282B0E59A3B88764ADEB638DB46
DCCBAEEBC190FF7BFAB2D27EC5DCA661A29BBD1B01C9CB16EA3D7910EFD0BFFC34A512A8BFEA
6402BEC8602B53DB206ABADB4CD7C78C1198D6739515759C6E9559CB9F54D2D0B044CB546057
81C490EACF951A7592FCE1BDFFDD568BD498E623DC1B05CC85C42A8C65B8E82D0F7C0CA2E82F
ABE257EBF0E783274CC113D1B00B187B0A86074752E0D7DA0D153BBE8718806D88A6D414C169
5A9CBFB9CBF54FDAC286E58B763D4893B23466A62301D8CCEF9CDDF5650F47BB3F7260D77BD2
8108AB8D805014C91EA948C9E22CF040759C65C098F46B6F750C146AF1B621210C0C35AEF99E
580588BDF24671443CD63C4AB126F7705DB2D55825C67E5C9F771F4DF75FF333267165FF6342
0D747C0349E47C1520EE8CBAE9DD691A96C40E332E5FCF3EF072F552E76A8BC30D6CBA315DE0
8F1DCCDCE8EBDF6058BE7F666D1FD482694D4B139800C8D7F978EBF3979D7DA72FDF28AD4C5E
4D15434F315688A59B5767818AD37A97A34825612501C3EBE5B87ECADF19CADE7D1D9A1507B4
7F8BF2414C941241F9D7571E0CA3EE38E2CB6EEB25410DE8D7CA11312DBB5C0B71B4A26F7C08
0717E4E5CD7544A1BD2618F470EDD331768363ABE380621133D181C2F672635E1CFFCA572D73
94495717149138E1559BE5FAFF38A517C12AEF06FD616013A6D87127BBCF2F139D969A825943
774B1239C93793C48974EFC2AD24E685D5CD353491AB6687C76E84AABD7E543D4AAFBE1FC761
F0357A7DBFEAC7099C7E38AA2B6BB7B15C22E6B4395A51C37CF8C2AD8F966FC27EC91B189F7E
B25E1D24F02E28FEE34083570CE11746755ECEB6AB39FD2E9A707662A3D86D0F8BCC49FC8309
A3CB305917BFCF323DBB8AD8100E63100E3B15B4495EE6E151BBAE007E86B45B9F7407172ED5
080675D9D7BAB722054E7C7AFE87207BDB4046B90393AEB3EDFDEC4F868166A8FBE14CAB0C11
F7E07A5FE440A869C018D40E314E0E5FDCD875DABD2A03CD6E456A67E410E47D7F90E0A34FFF
59C0B9B54D8D658EC522B27B9A66BDA5D4198ABFE47523B7922DBEE999770F00446AAE26113D
33D9630E12B740BE02904A33070E60DD2FC9E3278218012CF9C4B3110FE215DFA3AC2BB0B570
5E68F4764BBCCCF1AFD71243FF790499CA525967C15110FB431188A4EFAD771C3355C128CED2
68514E524A3734B5E1479EE5230F72456D96E977E33951C9B876CB60A9B90E674E0240E63DA1
EA7D8667DD19F1C84BA8DB14BDA736372B3FE99B0F1D8311CA191F21AEF335D2CE95CFB40D34
AACA0E288DFE5133AA0D76821A32DF357397B7D6B9109BC119A3B004185BFBFB00B712A4CF71
A8579549ED48FA9E0853387BD791A93F077D3BC8760F3B1612F8BCF20968F3D7FA9FABA9CD56
9369443B501BB6D6229FEED9BC62B9442CF87FCA9016BA8B656734E70E8CBD06FF8AAB52626B
4CB4516D16E82828C7D530C42C411ACD4EE5B6F166FFFFCD36F34B4EBEF39E74BD383BADCA17
9F9F9DE058E67C2907030B4D7C79E384E12D1B14F91A89A16F745D95A517B1EFF4B56F2CA043
903D31F1B9DBAE449DC2507FB8232DEBD64356E2CB8A675AEBEBDDFD4711586298257AB046FE
50BDD6A58AC4A12D4F2B583E6053C26B9993ABC7932EFA3B687C9B7B7E0000E437A0E0FDB052
A6B6EC0642A7D5BB5797A8B18493E4FF2FFCAF6A3868B310E165D21F513AF70B81647A2E7460
9CBD650865299426537F19F2D38AF81BA410E3E09D62A976D9561F77B0374E488D676745AE5D
C5EFFD42B0F23FBC52806C6DCC54A2837E1081C32B0D80D3D495BBAE6FD95A248BE0FA858C45
9935684D0EC5001D9A1CA84F69E65403DE0F259CD035287F3801737AF33BC71C87D9B735EABE
9E5E28AED522819F5030B1D3B5AA7FFA3E670626FBBD49A106C1D402D85341FEBD050AF159AD
14EEB42F95E84E50E2F70A9489FFF87E3EAF6A5CA35B64509824D4F99BF0CEB3BE7E26B7FFC5
A16E21AA249C7E7AB1D63393DB4A3A1206BDC026F879BFBDB4BB9FF4B7B69C36EC2DC6ADCE3A
E1440D5DC3BB9189004115A30CB104D07ED992D320523CE9EA2206CAF08262F2277A4A14D8FD
EA202CEC45293BC7026BF393B7E603745B526280E28C40931BE24D5B09471C83FC76C6B9AE41
903685D36AF67D6F0C9B813D176A4377E3EF8A29F83E0B457B20BD24418A6231965FFC0D5094
18FFBE21FDE498957CC797FB56C0BE6CC18513CA07695EE9B6EA6B583ADF10E15FDE42B99032
283934F29B41B8C784B23065513C1D0A56538B2BFDD542F14DC9532DC0FBD4780D9AB528C39F
006290B9A8CCA5E4077D48EC7D1B8DE983766A500394B5BF5F07BE2B13BF3D7C690A82A298CD
8107D08039EF0444D00001E2D3FB2A97C7BDCBDAB01AA94B44FFC432D154876306438124C9EA
B28A8DEB4547F69D7C2B3F6AE498261707CBE4A279177819F8BE6FD3825FFA8D98F754B6965D
2708C343888B12C2B28A050B50186F81191944EE04CE31AB323AC4F2F359E98873B36E7BB5F0
EBF31FB5249E1A6325C14EAAB8D025D8CED3197F6884BE5B11753776F41BB016736AA8C8E4A3
0127774A730EB2ADE964C5186711A3438EDA0F92BAF07E3013F2C611E5D7D2C7CA4D21BE2235
C51FEC1FD8B17BECC30A82522C6BCDB7CD6FF775CCF852C9EDAFB17EDA2552D45B7D617C24AC
2EB7DB101206D0A2C1877FE94A9CC450EB76A6754CAA9C640E8AF1BA699489A9C20A08FD2BCD
BFACF0F3465BFA656C08344C437F555693D7B631A684DF44D642AA05C4A8ECA4DC594B7F18C7
BB02385B46682A77AE2D9E7833CBF18846A20FDCBE27CB86AB951815AAA93067E1B1FD0A71F3
34006BC3799CABBC1D707A2213A17ED7B8FC38C0FD22F3E96A81CB84CEB38E3E8B63DF0DAD18
C354A9DED725F3ADAFBC1BB254F984932F4F47F5D25D1D788B72AAB104AEC40EBE1DA21A5057
2EDDB89641FFF135888DC9E346440F5290A6AC9A1E233FF3A5158E5D6B6821E8ECDE57FB0FA4
18C6D1EDA2DE34D314F509203D3BB340D587C837C64A9B429B238BB215258828D9FCB797F3A0
23A70D89E2D273B3BB04A75A87E287BE5E04A008F89B29FA765A65A716C9DF7BFA7B20B73251
8E990A64E720DA9D155CA8A49259765071382AB098DCBFBEB3D7C73DF77CB9DEC2AFEA35BA77
D737B9F49AC9A96BADA9ED6465C86C4DC181F18C2A0B67E8BB219581E627CBDC03E12C16EF9B
44488D58DBD6987F0F4E1991BA47C25AC3DC75E93AE7CB58D3B5A9F083DDBA3EDEB033576E4C
FE3231F3CFDDB3363BBF77A4288415447C7C3E9B30A618CBA512AE6CCEA7281D75F039FED12D
CF940BFF5C13DA6C7F5D60A1F98ADF606693D58E2252390F6C2DCC368C712702321741B16641
75875E2DF85D066B0F25BF64A138C429B22078A7877E82237E70DBA963975C5DE8927BDBBF51
B3604841595DF8A0B261510F174820C40C3E4392FE60FB1361514398B5C4F5430A4A4DB823C2
4D9A65C0EEFBA1A9FA0C448DDA1DDE2FE8D3E4902CBB38AF4DFA959C66406DCEBAF23C327D4D
DA5705820ABAA2F66832497058543A75CAC5C103E713BBAD60A80F427D928295CBCBC3EFD4CD
AE05C3D34A3D435EE741EBF30495DD4917E46D46BEAF19213628C4F680D4592D9C66CBC7C45E
EED59017ECA5DBDA6D250ED4CA67CA89C1FCE1E2242634C2A21375518851DB79F164CB2395C7
26639B845C0453C3CF7557DCEAAAF52E33ED390F944C3BB47DC323733EE4FA6CE2E0CAADABCD
EEBEA258CF938C88B3C389DB2F7403CD19A5B8CB71218E749E70BE3C7492139AE3F8B9840FEA
19CD36CFB0020B11D166DD35F137688C89A1E61C62EB0FF452689F2881863037D1A60427F445
A0775935D2DF7D8C001756AE9EFFA241D1D2B4D9C62BB685B4589173426D9BE03D2B03C30DAD
CEEFE8D2E90E37E235659E135A97E005C687606EFA555B036AD5FD81B2EF2A4D68EC8161E0D4
34885529C14C4174DEAE63499E55975F8425037C0CC91693EBBC5C82D0041B1D47AEB433828B
6ABA9ACFAFF096D2A1452885537FA9B9FE673D05A31566838C4D7459D650C97E000CA7FAACBE
1E8ED1EC718DEB823E8E1BA5B8BB3F6165335C2E866DFA99A110941BBC3F9C1EC194615CDBF5
A921BF572DA124D2BD61A2B6D974F01825BD76085C4C2A33EF924DDEC706A9FBF40DC572C392
E961B46DCC117E04537FF71FA9B630AF6CF92EB8613246279BE0B9A2A21110D89ADE255AE222
17626AEF8A48B9700C1D99D96447B713694AD224C9B205CB2AE65359B29A14F180897C465CA8
DD3FCE407E86BC5EAB37D24741C4CF66B4C0EB7F34DCDAFA9882C29B79EF34BA6CB051145516
35D0456D58D8C98ABA0F92A1CF23B3E3CEA1562026B2DCFF6836956ACDDE21CE86926F8E0C2E
1D1AB3AE74417AEA5B819EB52114CC8C122F904B142A5CFF1A24A6CB4C0B16CA5D137C4B7AC6
0580CF538A575FA6E503FA63C55E02E90F309A7BBEDF76AD31BC6A1264A8EA9FEC9C8F7B2D8C
B85E5441E3A478F0933EB1BE595C302B8D234562E83058A73CC6F3580BCC99E50A8DEF11E5B2
EA3C2EE3C5690A42C1119C913D3612C9CFAB9D17880C3B271B5FAB5A649D86D597D08413C06E
D9848A2744F28661C8BEE43F0B0F2C4D8795F80EE1EC7057F7F8DC5C40A81786AD402F67B19B
73B98B60C03E5F6BA38A2CA38B490BAFC011522D79D081E66EC40DC61D634C80D831D046290F
91DAAB10D06A46F4F8AD5DA253D52FED9A818B19BCF0A766A8E221D75FDBEDB380BABD77A360
5751FF0DBA7C471CBCA0DFCE46B237CFCD660C5A106F2061ACEA3B7A181BEEC37AF3FFDDD03A
C673185C89BF3E8853A5A0E3CFDE8811D313A5BFFDE5BF7C2506AB09BC1F448796BEDF58D7F6
58FA041C307348E2E8EAA767320D7BE3C17078109626B0F6200C740CB7BA3B5E651148551455
C8315220A7EF403A653E57DC85D73D6D38C32E9EC9BB5DF0BB3691093A74AA29C1DCA533B5F6
CEAD88713B289E127C065E9617737A2C2204E6ECE1F05F291390AE8E8AC43978C53CB8D0402F
840924BFBE624D1DEEFEED3C7AB8AC9C9422069FAC57343F50B2966B3BAA579467D74C9E7B61
0032B1E3B9904164A94897F6B67DEC93F229E74B8303412F6482DE19B9A2AC6994EA84CD2EC2
7F869616F57D37C88A6D57FF62F3696AE7C9763BB8543B80BDE64E9ED1BABA93DB1F5C85249D
78C4C0AA1BE6DEF55367FD49791F83B3C90A080C45C683FD744C5F61136E3FECEF0D0DCD6D53
6C7E4E5C940496385952E5521A2B12C1A638A4B03DEEB8610ADFD756A88EC20B58348014E757
7763A9FA8F120B9B0ACC81A85E4C5C4DBBAEEE687FA3A148E0DB9739CF17438A7F87F3F62FC5
B52F75EBE57A1305BA0737E34795B71D268F58419C355678C6D6A3F0619F2122C9CCFB46FFE5
A2E75424257DC257FAAFE402416205781F4A31A13A2AC579B83DCE39A1469793AD11C644BD4B
E9F4DC35098DEA7E69B3170FBCED858AF6AAAC310B66FA5E59B53CE8AF13D454074E7BFBC05D
6EA515E0AAA56946C5394E6393BB70A7AC9B2905B902AA804AA3E223F2902B01726C2A8A79A3
F8D048C52A06CDF73861F5AA87718028A11973000C93FE95475D4625F0556787B430782E24C0
C48FCF6B0BA91CA594C5D6D2A6C3A6E9F383E3BBF5970780E656A929CF6897F8B73C3102BE67
94AE60D6D7268CF1F91113A81A1763E4217BA0952BB4E0B49D250EF35BCC21358A1E2E5F2DAA
30DF89A0B8CE69639483D9C97A73616D61F87CBEE1C6AF89E8272AD0A8C43BE2AD2E0BB1F0BC
0F9DA06EF15F3A90FA3AAF161F8A4F0ADD4A0D937EA5DEE197B7BA923B9B1CB39A6AE27D232A
361060B3AA3DAF8ACEFE93AC7CF0FF20B9A4C6C4F4D3E9BABB6E96E0E489F6A8B1C59CF6F42E
FFAC975251B1858315288B3C48D424C58E6A4376F8033ED79B21D6EE2EF37FF1B72A8B4F3951
1B09F2E307B39B01074D76A35F19891EB85E2AB35828D7F57AF37067A6BF1D0A07C65D6F848F
65561ABD63F0BA1B5224F1DF25242B9AD535DB1BDF97BC607A2072488B1B0FDC2E2EF2A44F89
FFCD2591508C78061A8E0F3B29F30085353A7DAA4E3477C44990BD0A6D9AF5BFD3F8C181FD1F
6DBAC524EBAF280340CE725A5D07453C200C37D3D3D0859B6DC5E0980000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000

cleartomark
{restore}if


%%EndFont
%%BeginFont: CMR6
%!PS-AdobeFont-1.0: CMR6 003.002
%%Title: CMR6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright:  (<http://www.ams.org>), with Reserved Font Name CMR6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments

FontDirectory/CMR6 known{/CMR6 findfont dup/UniqueID known{dup
/UniqueID get 5000789 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR6 def
/FontBBox {-20 -250 1193 750 }readonly def
/UniqueID 5000789 def
/PaintType 0 def
/FontInfo 9 dict dup begin
 /version (003.002) readonly def
 /Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR6.) readonly def
 /FullName (CMR6) readonly def
 /FamilyName (Computer Modern) readonly def
 /Weight (Medium) readonly def
 /ItalicAngle 0 def
 /isFixedPitch false def
 /UnderlinePosition -100 def
 /UnderlineThickness 50 def
end readonly def
/Encoding 256 array
 0 1 255 { 1 index exch /.notdef put} for
dup 0 /Gamma put
dup 1 /Delta put
dup 2 /Theta put
dup 3 /Lambda put
dup 4 /Xi put
dup 5 /Pi put
dup 6 /Sigma put
dup 7 /Upsilon put
dup 8 /Phi put
dup 9 /Psi put
dup 10 /Omega put
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 15 /ffl put
dup 16 /dotlessi put
dup 17 /dotlessj put
dup 18 /grave put
dup 19 /acute put
dup 20 /caron put
dup 21 /breve put
dup 22 /macron put
dup 23 /ring put
dup 24 /cedilla put
dup 25 /germandbls put
dup 26 /ae put
dup 27 /oe put
dup 28 /oslash put
dup 29 /AE put
dup 30 /OE put
dup 31 /Oslash put
dup 32 /suppress put
dup 33 /exclam put
dup 34 /quotedblright put
dup 35 /numbersign put
dup 36 /dollar put
dup 37 /percent put
dup 38 /ampersand put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /exclamdown put
dup 61 /equal put
dup 62 /questiondown put
dup 63 /question put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 94 /circumflex put
dup 95 /dotaccent put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
dup 124 /emdash put
dup 125 /hungarumlaut put
dup 126 /tilde put
dup 127 /dieresis put
dup 128 /suppress put
dup 160 /space put
dup 161 /Gamma put
dup 162 /Delta put
dup 163 /Theta put
dup 164 /Lambda put
dup 165 /Xi put
dup 166 /Pi put
dup 167 /Sigma put
dup 168 /Upsilon put
dup 169 /Phi put
dup 170 /Psi put
dup 171 /sfthyphen put
dup 172 /nbspace put
dup 173 /Omega put
dup 174 /ff put
dup 175 /fi put
dup 176 /fl put
dup 177 /ffi put
dup 178 /ffl put
dup 179 /dotlessi put
dup 180 /dotlessj put
dup 181 /grave put
dup 182 /acute put
dup 183 /caron put
dup 184 /breve put
dup 185 /macron put
dup 186 /ring put
dup 187 /cedilla put
dup 188 /germandbls put
dup 189 /ae put
dup 190 /oe put
dup 191 /oslash put
dup 192 /AE put
dup 193 /OE put
dup 194 /Oslash put
dup 195 /suppress put
dup 196 /dieresis put
readonly def
currentdict end
currentfile eexec

D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA0E079529AF9C
82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA9351BBFB7CFC5F9152D1E5BB0A
D8D016C6CFA4EB41B3C51D091C2D5440E67CFD717C56816B03B901BF4A25A07175380E50A213
F877C44778B3C5AADBCC86D6E551E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206
742D1D082A12F0780FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC54
3273C01924195A181D03F5054A93B71E5065F8D92FE23794D2DAE339BA29C1C6F6561DEF1378
0383DAE38A868377CC7D396B2A05F341AEE0F8BD0A0191F51AD11A4D2E927B848A1EF2BA15CF
BE57A51E3AF07598275195C9613041F71C1AF39E61F9EFD5F6512FBDA76E29DE6B508F62F5CF
9F73F5288DF1C7B0B82C92D3B6358BADEC3CA20BDE55DAA7CC58004AA86B6CBF8C410D8287E8
8BF20588A39309C2B703CED322F030AA6069869064486CA651DA054FF3F5E56534CA358B0829
A6B954D89103436E6B06DAD1658BD4A95AB41343B01F5866FC87C4EDFC71F1477C98F8E11DCF
27EF743FF90BF91881C1F09C10EF68CCCE86263693B4699304958A466D9D74D7266A04607EE4
8FC4ABDDB1AAC9C2B0A4E942C3F65873884A359AB76DAB1D1BC67876C5016E7C5185C16658A8
1ABCC25A40A00CAEB6ED57285A39A3FF3CE675DE68E8FEE93BE347321DCD5674E11182F88DA8
5002FB8D6AE14FBADA8366F8603765489F5996C64D33169816AC5F355DE8A4FF22631424C4E6
61390E36C6B041CDE6227612506E4C961A05496DF3CA1255994DA974F6BB5B6ED7B0C96341D5
006B3CE0BC97B2AA4CA9DEC0B1D204F1C42194601A82AB4BE67C0FE8935DC93C5992E5BA5CAC
BC6A7F0BE7270F76F00BD5D4E05159DCC33CE8863F569433F7BC17E88909388978909AF5D913
74882D0D54E66402123733325D6C553F1C28AD0E4A6399C129F8E729DFD3EFB8C5357CD5D7C7
CA3931E1BFDA15CDD45763E016FBFF8EC15B3CD5D6FA53EA786B5DD281437596B5035DB20121
99EB57D8E02EAA11EB00BB17D53C37679A5B6B3BE23F0C530999FFBC13F67D6AE80D16092C36
E56160F127275C46102AF8C3BC21322FD4993B84082E09037CF590078111271292D7974401FD
5E8963CCA67571A998AB90109F1F574BD23AFD052472459C553B327FC5461135BBECA6974D01
79A4ED967F5E01E5F4D453B55E7CD199A05EDCECA6C082D4AA923DCB710EECC61ABE251CD6B0
56F1F5764BA16E9EC2ABC1EC656F9989B21B53FC7BDBA81B9AD8A4394982E62572EE2915C016
0C30666900BCF4E3B53B5365605D70AC1651E706112D9F062A9218B2DBA5C576B236547F6814
B9B0CE3A1446EADAC59C3F74AFBCDA90EBFEEC0E3BA548AACB796EBCAF5A6162A4CBCE569D62
2BF843A9C991617C57DC0BADFC6140C0992F04B15A23A7AF887CCA716A7DD80CB07E46560C90
1BD984EE07E87D29B602AE6A6FFECA39C6A10FED66CEDF7F39576E222758BD1B97CD9831A41F
23F81CFD640945AFC32B334C0E6CC4C75C97B974705FB8B1F8281E3AFD53B86198C4EFB07FC7
A6C328B5FCB2D842252369D7BC6B060B7E911F17450540B77E3CC1A4D523B66BBC05E8CB66D0
018B484C7025BC72FCF1E7CF428B0246D7A82E4903A63A91B060D78FCB48CB0DB887A81E25AF
F93F22E938AEEDC36C0CE33CC0306AEE691A6C9EF230EAFCE1DA59D0CF5607DF3E1078BA69BD
CC269C7616D78C9C86ABFE8E4766CAE7C81AFDC202A60D27633F10CD25DDC2D2D7E29B043EC9
0C22FE44D928CDF5D891DD78F11E1112675C11AAE26F56332EA4B1B30B9136E45789648E040F
C90F25AC67F5D4ABC099CB04269E31AC06B445F7C5CDB3A00B8D00BC5F0C3D63B60458791913
9340A3239541452FA1040F9E7BA16EAE5C0A6C9F6B488D0D39CD1DD47D90270A7B40EC3DB83A
12019E37AD74D4FECBB759C758FC51F4555FBED8A677C06F63B2F17EA49812D4516D2F688867
C6256DB907BA5175657ED2557BC4A2131D3F87710849544DA3B053D0B657D4AAEAE7BB08FA33
720AAB58CE1DA35C765C49F19D7D76157411457F7F72FE958C2716D9BE1C9A3F90470D7012C2
2213005ED123B31A176B94D61E004D68042D81D34EA07ABAEB52BE37C4D8EE9602EEC6B88E0B
7355E80245EA4B5CE013D050794824234D271B53D3907C09B6B91502CC42EAB7E8FC956799CA
9670AC2B8D813D76ED72A28C14D1EBBB71D5E5144FA66D097EFAACA2DD798358BAB0EF9FA553
F03771D99D15AC5614A31E29B6CA92A2398556E9A268CA6D7A1090A496215684DA2D1D40CF46
C242BA506570EC488D6CB925E36ED2914D0D09AEEF8224301DD8FE81A882CF6CF686FCBE1E1E
F44E3DAF3C40AA6A28FF919BC26B073EC30CE89A180821C75650DA504C319179109FEF87599D
2B1C95050DC587B384050C2FAEDEC784C7314DE343423F88154D989305B0E402D17F80A90E65
508D601EB0D0EDF578857D800EC1BEEA5DEB9131301AA14252BB1C2FF3A4BD2D85867A09B968
1E6E919BCFC7B5481FE72CAD91A4EBB7B31B746234E09798E0967E42CB4C498F14E202A9265E
336E334AB76581618E54005A3417AB81B0B4D346A806469E6E66BA65BAB8D1777D98E80C2DA8
4F09CC774AF6203AC37CD280B4762D08A5CB1D2AAC0A76A62DFC90FD2B089927E782A38DDF09
5E3C0600EEFBD0DBFA23575211A3042F77E47C6592EF49442D9D25BC7C99B46B40A15D3A7B2E
2C53D8C81CBCAB8E38199C3E36D082711554C365D184F468A6012C671CCDD227061941BFEA5D
2E7F281C823CC7973DE92DFD107BFD0AC88538AEEC860EAD04385409D552EB9A9A5688E1A311
9E86F4323F76D727752DC4CE02E87AB4D163A808D3ECA4C51E272360E9B268CBC2E95637CF9E
5F47BDB740094FB4FF13F303321BBCD15C243D560CFE6742852D6A5051037543151FB5CC8C7C
FC3CDBF58D3AB2ABC5D212BB19EDEA6FFEBD88EBBBC57090EA201622A09C55D76EAE1452F0A8
1E5B83E5BAD18055E011F006FB319D2BB9C5AE122BE85418E20C8A706D11E3065E69412AFF63
126E51C4F95AF28CC200C2B5D45313B1A8309A3A57EFD2905228EE3E30AF6BD0C75C1ABDCC08
5F2878F8CEE3551780E33F7A74BC101024E16B19B58D88225F0DEA02EF317B9AF514D59C2CDD
10FF334E26DEB03273F0A5F95B26E945F44D76BF82A7045C78377060352C8A937A876CFCE1DD
6CE26F4AF1DBBF2EC95E89D4CEEAF538D22D2A4EAF64F1E374DF1A345725CAEEAE9964CEA972
5A623924BE7821CE3D9341D845EA61526D90B13F73FFE9F133BB335DE26A08239181ED93487B
8045A8D18B321BDC3365CF214DA1FD35637E7A8ECF575E2002B208E1206E4C41AFB564A62846
4A5A2D8E266A82A9457EBED9582A68D107D1556E73E443AC9BA9BC935E506E78ED453935D83E
39336205680299A03FEF889F303EB7F92777DC20E65A589ABF11597906B06181608A940D2A0C
EF0FDBED238748EC684632C626628C79C620809CB7F4CFFD9FDE58D6A06DDDA0E0AFC443D2E7
BA980765087C9271FDA74952651926E9781513B1530C4A5461F871B8D85CCD09A67FAE4CD66F
F503A344ED3028B86471B5F94B55699CDCFD5D1733D5A840EABABD0220528CF21A46F949E174
2510C3912319DE45423E0DDF34D36FA127E60A6F882FEC83F09B5D8F1ABB00CBB83EC17419A7
A813B2ACFF5D30A0D8643CDBC42AC07F0080E29607AC520CCE5B7B9195985E327A599930CE01
61832A35D61B24C1AFD3401A9296F4E613DAB01480098ED888AA978EFD3516069C81B1FFE09C
919941810BD92060EB479A464ABA054C049E14659667199F55F9B1E78D1295269EA16A894287
3FC8C00411F2517F7651B5387D622CD6F462D4C9CF00D4A072EA7B4397EE05451E403E3EBD7E
9930D3FD1BAAAF2CE252403E12D4EB5F563A9E9A9BACFF34B554E159BF40D43FDDA78724B413
5B83CFDD800802909110D7CF2E712BD4042EC0C50DC3D78EBEC02DE44D727CDE9A3818EF937F
33E5869D1DADE6D383416C3E983247C40F99BA72074549E2C061BE7E6EDAF66BCA5654A257C4
6818DD2AF1EBA21A43ADF9233B3C63DFB25F441F000B2BAE2A28F91002BA72AA5A040D17F920
EEC38E340C01283D176E3A72926271935282C4DC0CF26AE3D7AF3C9B83C873E37DBE00F9BA4E
AC43A29400DA3F870378BE10A6853538FE79C6B32ACA4BA6B2E10A218AF99AB4035895408ADC
1158E5AC6E4B764817DA45DDC8F179C55A836CD5FD9656694C532415CFF3DF99A9689E489404
D07D7A4035512DEA64E87B6B0C575A5D5B0E1D88A2C2D7D3E98D5A21A16007496A3322045E32
6E3ABEC070ECAFC5D727C45F42F4A410F6124F20C3D5509ED837E5801286A307BF6A0A3525C8
5AD0CE6E2DDBC6BF52D4376CF0386BA760FCB482D987A477A1DC32D8C7BB91C2DE2816A0959B
49C938A684C08735E617F338CAD005AC16EF1A818D5A540BF0A8312272295196446B1FBD0FBA
C3215B5EA4ECCFC688F837CDACEA019E5650A5D12CEE637592437D9E4981549EC7E9EC150729
02C67B1795A0D727A405534AE081B2A5E9486D36EC1598BA80157F0D25D6CD211075D651D20D
E24519216C7C4C368EC7D532DE4AF853621003BD9084828FBCA22143EB5832A4BFE7AAFBD346
F2D31B2E1291CEADE0B631AFDDB29C6D1CF752811ECBF2B32F5B22765688B7A7FFA8CC840786
1B5451EF2B938FC4CD0FEDB03234F75ADEA022491F93CE40BD210B762679B34409B9208E9245
97F7E170CF0D98B9211F43C74CDFACDEA0A4D9CED41840DEC7DAB1D3C10637039BE51F47B873
905478AB6F4D46BBAEB726B2BF8F93A13DE42AF2E6CA8EB274B0893A3772033BB5422203865A
0195470AB3EA69DE75B325A77D88D0C12A90AFCE359CF0F3E767CC611ABD3D73F72C42617417
C8127BB3A2DD3C1A111E4474FD03A23B4D3676BF3FB4FDA89381EFBDFF114A741C4346520087
A97CA1233F3F2524307030176FA1363E3500C4B1B8FAB54F9B0F5ABCAB2AA97AB3C0933D3B84
EEC7C9337E97CB3C5B729ED09F31532355890A2A6D662C6EEC064F271DF07C84D0E809DE0A7F
177C003F3C851DEC6E3009447D4534DC8F3F71942E00A6111FBDC677E1C71A2F8BB360E64FFB
C4C26EB095895F135F8B48D39443EDE35B81806997330B8E614207E38526062352E029ACEF6F
227AA7BE354768BF21D03F7E8EC26372CF71670030A284AA8C294EC94DF356C5B6660A410931
D6B43A215A5D51149FE45BB2CDAD23F11B3DB6202263DF5B16A84C5BB8B75DBC662884FCE360
B8400BE9A75BB7CB24A57327FEA3821A31813F09C66E18E491817770E01A5EDB6DE8CE3D5993
BFED6555BAB5894CAD9399C78B9519F4832D858487B4BB17898F9BBEF1A72614078D30C1412F
54EBA90BB5E1C39DDA0A3963124C62EBB6970203F4904544CBCE72D178B4DDBAFFCAF9856AB2
5131208F5582B54F8841D8B15E0BFDBDDC16414C50EEBAE46DE35CB0FF48FB512AC60C5B63B2
D4102979C878C1208CFEF32B5EE434FE04177C1E2DBA6576D2781519621F0937ABE79FF329AD
F391800D5F71D8A2F213F2EFF727C340EBE9FE5B51F6AB7A12CB1EFD988EF33BE49596898545
7AE55A51E7BF8A931C183EACE627D5F72536B6B9A56DCAECE332DD21ACD090EF89E0D5B63781
178C316D0F329AA5BA9A03D5E8E914B9E3493622ED267F15551D7956B5A2E5527664D01E8407
D5E2AA79CC7CF42F0F3831A3C589DD7DC3A6DCF174D092FCB8B593BE6BF1E48A71BB440BC3DC
F84A4D66EF2BFA86D547B4931437393ACEE2C13CF5A4F12775C7F42CEABAD4F9FDBD3ADD7CAD
46D552BCB5B3E339BB7CF27F7FA114EBDABE3931C2559DF948197570AA4DE07AA317A76D5967
F7A12F1ADE636E3D7E79DDF90442C48DADBA4EEB9DD9EC59BA6C30009E0E018A188D7BC42034
5FEC793DCB091D79B7C78E1E12D521DDE7F1F482FE097A2BEE96276CEF8CBDE2B74E8782E2BF
8F3E8AADF22CAE53C08357AC868E3D217EEFA3A7F049EACC0F1025163D22A5C38C7667A26754
B48F6001B499B57A09F023041D3F4EE8AF9FB9473F89F6A8F25E65106C2FC38FA16B5889C8F3
79F1AD39E7ACC0E4C9C1102CA56B7040DEEF114EC911B36D2A8C66D5160E64DA7A03863E23CA
A837D18F4CC0839DC73430263A611E6E65773407635CB3D60EDDC8978327292EBBAD62309460
A391F02DBD90845358A00BE398DDA6440745EA7ADF4B89275BB76B695189485ECD84E4FF87FD
160A85EFA756E237F7825B453117AC0D9AC9E495FB628E3634ECA75FE61F877E8E6364CB5D54
8B93DAE2290400A2056E3410605B182F3C45BFA67B405083400D1E180E37CE74DA6301FFD34B
F2A8231CC06E2768CB2AE7477238FEE26001D8C4A4FFCBC9F4C34DFD0C93EA3F09CF3CA82A2C
295F93F9E98613F9DC5BBFEA7267E20A3C7458892A189F6950883AB7E9FFD3EEDF465F1D795A
1376C907C3E4180B467FF0EBAEB6183C28F14824544E9F5187AA80B90A2CCB0FDA2073C3A8DC
AB5C14D4ABB9B2CF4A3889EACDABC3E3604239F0C9BBD21D14AE8D0253BB49C89A20A155167D
F482CD4E28695B07F469E12C01A87281463A595A3066974EBEACA1DD593C38412E28D6688847
4384DACE4112C4ECC58C3922C354BD8E54275EF9CF0A99A282084D099E5F5542237326B12492
E14581CBC71F9DD6A451C51416269ED96821998B6B4CCF5E1E225F3968617F98B8ABD4BB0736
F771BDB80F0CE60CE1044CA921131CD84B054D21D93DEBFEE173F93F897D8814F0444D102CFF
109429A51271D65CBCFF634640DB0D056DD5EC6D5A7DB00E37F66AB8707E5CC9E0901E6042DB
CDE0038D8E3E32F8FF03758F604AB231EB8C82E670839B27C63A12D8E3B892B34C34501CB15F
3119A8489AADA5E86430A5CCE083ACA0D5F7B4FCABB924163EA676A06599296E460AE9BB080F
8A8C6ABEAC20F0BB797E6DF763B8E892C401CF91CAEF65ABD8824289D4CE9D111D8AD3C57296
9DB33C10BEE9F13D93DA3B43DCA9BC8D9C5FF121F203F638CF30FDFD82267AC46F887EA3824B
7D12B3F41287AA3481BD773E3C95EFC5AA951631180AFC694C53C60C34B8AA53CD5A086A27EA
42ED477F8A37E052A26B44AF51CB48AD39B7BB62FF1B16F051D5FF8D6330D77BF6B63D9E12A6
39FF376B8440F98F6D8C68A61FA98222A98095C1BBFC8CC6BB6ECEF2FDA9CD30562C6505747E
A2E5D1324A582FBE6FB5ED12751251DC8C560E1A0A0AAF29A732B783E4C413D9209B7B1C0562
6EA2E19102F78D93E31B660F33A725CBAD30F9A5F733C4565B344038B50D894208C5E729BA37
D9FC5EBEC645EEE4402C27FF7A1E69EAFDEDCD9848E2D38CD0BBC2733B51208EDF5FB1B96D99
8B2E1ECC55AEDD41B9FC3943E62F887F230A9FA7E5345459292C857DD7693E82F449737B5F4C
75497077F320AA9C36AFA72E36EAF5ADD2EA858F73FBC80D12378F4AA26ECD4109EC7516500D
E736FB830573F139722C8B4461D54AEAB9FC02A47B3BBE236FCA273F6527925F63383B2E2F27
545C14B329F31BCAFF73659AA5F486A43D997647E23CEBE06B4BAA25C180078EA74BB557C31F
4D85C2257470180394A3C739392C9B70196A340EC278859D02519E8A3400FFC54DCE0748A38C
A5B25687CF41FB0CECBF5243487BAC472079B769E2642C290F25F1EDBBA516B2E86A399EEC11
984CAF21E6C6F799AE218904DA51180E4E80AE15F246B03D06D1817BF0FB34211EC9EE9774C0
F32BDDC4CB0901893CFB5AC18287280B9E7A9DE903FDF83A0D62FD75E50BEBA206AF5CA1CB7C
B936279AD263819CC6185DAC22943BA684C22712AE3809D7AA9B4D6F4369795257F03DF774EB
F450129349484EA3105EEE9257AC04C63AC58A28CD0FCA766E4EAF042D1E426D6F68DFE42F76
B010FF9CFAC92B4C43DA45DF2068ADFB8871F8681A16C8A2688E0D0D7CD1CEFFD9F53E0548C6
3A89640FC7E512A28BF6C7C786DB16DFBBD382DA926ED3A6A825553B360B6949BF1914F40158
B37590729BD6131FEAACF75D29536CFC775EA8758162328979CD3E46E4E7E9CFD1E41A40F3E6
C7370967303DCC576347B38A3CC53609ED71175C514DA11E251BC9BBCB4D0701C208BB884CAA
30F518783DE9553AFD6BD1221C2FE5C3BDE4B435014822036C8ED6296AE76BEC4B00390A603D
B50B177F8DE59E89994B7FAC9ABAB633A09D4D8F15D1416F2DAF49F76341FC891C28C94349C4
412A5DFB84123EADB7D06943A4A8BB731FB2C9B6DB943C9061BB52EBCED33BF502BB42BA177D
2FFFAA8396C2033D27FDEC18E97B1EDBE1ADBC8822E3FC0D93EBA178B81E9A0C2E0C6A1A2108
0535ABFCB95ED0B2569BB6B998FFDAE266D6F182569A08E6A17AABF1E75B9978F96AA49D9FDD
85AEFAAE39BFF7186DD3E57FC50203EE6EC6F1265CE1248EFF71C4FC871F2243830B990074FB
5E44A47072D26960AD7739AF4F88799EB9D0B6E1BCDFB0E6D15AABB1A2B04E259539565C2840
93182BEC3987F37CE218FC019231CCD2D72860F931703DB69B947C7CE0610E47CD02A683EA2A
721D6CD2CD7459ADDB4CC54E2CFE5296C7B17CF3AE5433B03C38E07EC69840157EEF1DF91340
EF3F8AD3E1BBE858814FCD5E802BB138DB3626BAAFB69ABEB343B377B96DD5BDC93FAC7B8CD3
0E8A392D5069ADAFB7ADA60888B4FEDF876E1C19DCF72A684B37220AE60B805941040AD50AFD
9740758FD5F83A5E1B74BB916526A7CB9A82BC1DBE3DD0D49DFA8CAB479936223D6C2D9A0A41
573E2685C42B4BD48C11201F35D98FC29DF8F410C6BDC28BE80E4EFB42B0C9A930AB609841FD
9E81484D6CBAB60BA84AF2EA7A6F55D7825343AF2F278B2F33EA43796C3541D17A0CD8E1DB5C
FB4C451D338F3CF9BF431BBBAA5E860577CE011A96CE1239A4E7094053BC4DFD6DFD496C0847
49E3F900DD5FF0B5D6495358C63E5653BC627969A4B71AF74977B14A4905648D13DD0DBDA939
2369197BD914FF497217626356094490EEABFF0B1F8691C7E305B14BBF10E66264FD9E4D5795
A89253B7BFF5CDB20654FAC3B3E0B25832107BBECC4E118A352A38DD66D2F3B86B8891ED4E0A
3B7D43FE2E58D95B107C2E22A596B3B7CC8A889F8050D563109CC3F45E7D6167741A5E1BEEEA
C3AB3D2F569A9C5FE1F1888F04364E219A5390807C08ACECBC1B5ED2054EDECB4C265E0930B9
EA07D50D21C1CB3816ED462E4244A25B8FE5AF18A9196B59A185D81F6B3EBF0CAFF85B5CCF50
76DF75B2B75F22604D380FD357FDF4A61540F43BA08041034AD6FFC793F60181CBFF2DB634C9
465D60D3DFA059C154D01B3281D34A61FBB8F73188BFC524994613BCC3572988393626B047F9
1AA96D5BE6371EA36F5BFA51DD60D5D5CF62F5B560BF940D627981EE8653C8460D4159149CCF
63EA5E567655D6177AB0D4533CBB333DFAAFD082A04126B5E77150909C073D460B4EC9F28310
9A6F38C954F8058DE4A5259104E75BBAD841CBB3D08A1E8734FBC00D38D8FA7B26134CFDDA27
927326684C7AA60D8CE055BADD85005D34713861EDC650E5C491B4195336B8C193E024901966
FAFF3A8C0BFCA6D5A9FA4D18A05926537B2C432B59017E591455A599D316BF1D0857358FE124
D54FD5A9FD318B5CED74BEA721F2D6D2CF72311409850714B94C0861F070A81684AFB233AE63
6F84BBE8AFD5809B5CCD9A584E828AD7177D64F032374CB78AFC6C5933236D30CFA69B194977
B38C76E966DC905EC29201D32826E6B578EC8587A39DCCC98C0B777D06FD28AE08FDE68DB6A9
5FA3FF9C23DCF019B4FD1B5253CFAD6245DF2766D2DDBF3E23E1A1881D77010FAC2F7E8F9F8A
C87CA52BA0169A0F5535BECA3B5D18EF7660183E68C226060B519C6FB4F68F37B13CE8F04B8B
8CC5CCDF5E5FF5177E4C8A7F8F77388E01EF27955D264F710C263F2649EA1C62563094DC30E6
D1D4B0F4160703552967287BC17FFFB71CB101A1852EFAAA88A0B40A6E5308F0A594BAF33BF8
1B601EBAAD18BD9E44E370C6D27D2563DD3DF8F7457B7D0405D38874291455E643187FA4D0BB
DDDE118E8421973C4DC2FB1B20ED74D0337C2F27B634E730C8528F991A684C722C378C31F3EC
0E72124EAD08D71C5ABE8BCF492F409F848C2646EC9F6B530CA69D34DA456AE6A97362E4D7C7
9AD73472932C354E2ADCF3F8C87DF44F845C1FC86E9A7BF52A1E02804D581E4350F8FE18A776
BCB97E637B2FEFA7AF18803270C7F76FE05F5DAA44B8166772FAFA976630D0CA98A1620E1C32
51498CCB2781270060F5E547CCB14AE8A9472D07827AA6688E31122D269DD06EE18789B6FACF
11A391A561380AF543E957D32095E58C0D8C97825E93B7FA0DAAE5A53C6A7A6E3501E3F7E108
8998359645F40C60C4457EB18108ECEFEC777DF8566CB2110ADCC2ED34B67D29ECD0A84175CE
7CCE2836C9F6D2B66465F3B8AD6A8F0EBA79F6F3B99FC6712F3E2A762734B5F1DB56AB43D337
1578B99340496C0E35FFBA44A363C6A583A3A9C2CAF8D86225B8935827ADA893265E9EEC1AF0
37EF4368802872F82E51011D39A15741E6DA8250EA745A6674C71915D4B7B87A0E43BCBADAB6
DC8A11019BAD99B0F49952AE5D67C0B1FDD7B8C4EAE29CE754CD3E6AE0FF82024F043B8A1FF3
C8E784DD09F9946A60AAF416255AD02DFAE7124E5D10C54A4FE0B83F9EA71F8FB4B4DD9FB035
49B9B3911F81101C877BE0AE8F3E6B9FEB551CCB37EB4153675C9B62CFFB688D65A46254CDB1
B80CB5ACB730D161683F97DE363C15B804615C38B1154216CED1E36F8703ABB3C445332B82F7
D6321B01416F7098ED156337D578D057370930CA1E88D99B62936D36D05CCF733C3A6ED94EFB
9AB6C12358FDE5DD2C637896D6D0FD80DD2F045C66B4DE933919ADC8EEEDC64B41EF1A780FF7
4B4F1130436E9CA759FCF99B22DB2DC5964BEA151336168F724232E7A5E8D5C0C19F133613E9
F0403BE41A0A86164AEB76D537CCD042D1AAB33235BE8280860702DB9E62CCBB945E3F7E857E
918BC38124248A5EDB2A94024BE940B0C7E8AFCDB8374B9D7128ACD908743C9378043E91BF4A
CC7A65CAC32082C83AADB9398F743C4F20842FCE0AC21E4D2C823641D5A09C6D20C4E36465D3
37EA22336D1316663C4D2A9C9099821FFD48D4565A157198C1BE3887AC78446A91E08A8145A2
EC605DFD5FFDF8393D1B990B8140BDA08AB893F1711E099E49B75CD2934875B12CEE0F2E1285
FF61393CAD2DA732C500B84EBAAD20625FEBC3D52939E11D15C743E283251CEDA63FBD2484FD
2C0E3631A738D70477C76B658F376F8B4493ACCA73F37E5768F7A33721F57F72ACE29AA07ACB
33CDCBB15452BE747BE1F9F73814499EFDC23C60A6D717349087892499146E7B54E15B9EDD98
0161F38FA63D948DB21487357E5B05DECC6E7B01368793670B341DD720DC6DE08F57C505E9C9
BF17702F61D8323DEC372FCDD142ACCD608E6D21F780119ABF52818320B0DCE24B307CA5AEE6
9EA36E4B73BAFBA631619D345B336ADE490C5CA5C3C853AD921747DBF1AA67C4BFC80519B8E6
3142CB58D92A9C7BCC60B0C2DEE7DA2E80DDBBC4874691A5C9EA41B5AA20674ECD1A4CEE8F19
97EDE0B9264C85825694EA69D77C618F09C3FDC50A55BC8F4D6CC8CDDEF60B9DFB780CFBC2E9
74B5A701CDCC0BF126D5C3F9F5556A3F95AE04D88D557D0CCE13E86B3AE1034557F5D8F972F1
16514603A6068A50D5CCCB4F6E7B5B6B3B6113A41DD14A7CDB4CD401ED373228CC6B86E7636F
2F6205F06A1CA7C62D2452C10B5DB66B1B79DC0A034380DEB5C8356B94AB6D7D26272F42A01E
62362A75B462F2FCB4FBCC53D6840070A5BA3EF3D34303C1B85B3204EDFAB55BEDAC3770D27D
581BF70136247F0F0A6FA1E941833809C2DAA79C9EC014FBD0850379D9765F995B1A6BB4E269
3DB6BA9EF06E959D75CB1547005BC6C75B2D3FCEB22881C0043F6BE4A4D1CA25B0AEC8142243
7F51DD7830348622DD6F1D9FDD2FDE4C295151BEAC5D6C351EED10336A1631A17AA3AB4EF414
742710D3A7B93E6352BD260D6A83424D2CDF85DAFE0ADF58D23F9A639C59618BA3A897BC8E6B
6ECFDD1B1A028CDAA8B90E323C664821CBA37C96E7F9EEE13CC623754821F4D2679D76B2F7E8
810AC4E06DB0D4A20E3E9CB5FAFE06AB6A57154F4AE5FF706B4E2F9AED55B899CE024930B9E4
BA460AEFCA21A5066BD64667527BC508C6EE6B38678C864511A26DFBC0652365BBDB819BDEDE
9C9654440CAA6544C3CDFAB4004AFE9708BC073814BDA5FAAF682034E05E403F70572A847CE5
DCDA6C4643B1F0E669F5AE0646F894143B918AE971627198EC50E61390DC2438AE79DD86885E
B90D0E81E93DE28E2A1E6FCAF37C7E1AE15C5BA7807B3CCAAEC229C86AA5F3261520372921E6
DD44F156EA9242C80A742C33E6FDC967E755B0C6564F21DF883129BCE213C5FEC831639E62D5
F19CA001D313B1CFE6144C4BEC7E42AE6A882A080A2FEA2D88F9814B86A746960B66BC2645A7
795E272BCB744A0821D2424A7C88719BC2BF05CF6BCD0C806CFF0071545F1213E40CE8D0102C
466B9856C597176F312B1E2A75C55D79A82E5FA08E17A067CEF1B435DABB063DB922BA70C690
4B8A70EA972941BBE166E019DD34020146E518BD2AB9ED9ECFFA37139244B667086C82BE4743
F80F7E76718AF745B76408CD4F91A611FE86C860CBFDAB06CAB6B98E4984519EE027D270C269
00A78CF5521C612DA7778366EA83BD381467F0C76564DF7D16BDD36378E74D1C8F6587DA9EF0
60F3113B7F02C07B85869708A947496E06D792FB0FFCB84943BC3F7BBC1E73AF8F6A7F03E17D
91F5DFAF967C9D4605B26B8D83F1349687A01716B34D9D4C5526DCD762E211906C7F82309822
1328FEAD201FCEFD162F2DD43AF151E544DA301EA7FFB4CDCD8E4D7AB2907D7F14805F0F208D
BAA293128E45272DB99E8D1D16FC86DD75FA97417017B6E55B05F75B89815B3B3EA8F36416B0
A58352E03B36BE74254F589FC93BC89B363536EA20103B43FA8BA7048DE455E56E5ABFD689C8
DFAD3ACCF12CAAC3286F26FBA312E5F63ABBB0B522D1B24F47DC7E38A7BE6E82F92295E5DDCE
45D635D3DC715AB0075B264502DCA21E4F24FB5FE069A5D20DA56736E66D332AE71D7BB9B3B8
FFB5E7242B9DA4AFE73FD525A62390800E67B407539CBF0D7301C5B6033CA723AA64BBAD0AD4
77C1D634D66E66C5360FD7D991262ACDD745F8A4198ABB3D913BCE4664F9B74D9C3FDF68D67F
2064FC24F20801C55CC052775E1E8D29965B9B88D4869B5382C4F03F9151FB8B529B17FFF6E1
6126A032DC4BDAD4A73E32CB0042CF9B18D5D29CC1EBE48C1C072A0BE141B3B57AA68B60FCA2
E11BE2266B80E7A9F0D71E95E16852FAB3206772FF58D867CB67DE416F350C944FB1C309F4BC
73B9FBA920995B52D66D730A09B17393BE30244989129371D5F152CAD7B2A4A9DD6B0B7AEFF4
F323BE99ABCB44CAC56144B48C2071E47EC1E1973DB9A94C599C5A3D1D271A122A3E3C9008D5
4AA7846CF97CA609488C27C29AF0DA8E85FB74AECEC33266F501ACD07C1BEA82D7DD15B5B591
2C0AF116FC42AFAB4E6A8D042AE22F9A11DB75A26C73A8E9AB736A7A34CCB313353353CD11A0
0971A9C2D3761F44C2F69314DFE0C97F2E94C66EC7A3FA7F66E903A0C89B0EF64BB36997A34D
42AFE85DE55231EE3E4197B3DD9538840FB83A3CA4C93BFF61CF613732E65E17BDD4EBDBEE63
AFED0758D2573C71CB93FE0A646538FFACCB7E16728CA4873A30B806BFDE26C0F601B12DAA7C
D54BBBC7534D8FC1855CEE9D083CC6B23D4BEAFAC19B5322F631823C0572E895F88EF01FAE46
2621BBAEC4DC9209AB7AF266B9DAE2311E3524A0C82B87708DDA0D370F71D5005B48AD9E7811
E1D6521B1FD8089B400DF012B1413E67DC301987AB3BD84E37DC343B03B810DC9C27117D0322
B1A2CE2B23899C1635C19AC72BED67747F0AEC442A7D976E1B4FB05F8C44743FE968BB8ED652
F8B97C54A3EB9B700EA348A6565FB221E0FD5FEFAC717826889A9332D9D0E85D365D3EA786DB
2950978586D632CEA0F0642CDA07725EFBD57C2B6D2E35F911E996B3AF3F25172063554AB718
A2A98B395BF61F953AAD4838319F51173CB0E614282C9B0B5D4F3E0A44A882370222EB7543D8
319A7C918A57BB18917DD3D3130E28D734AD24779497B896AB8EE3BC40550DBD4758014464E5
C486ADB27ECF8CD325984385566069B0B582563F3E38D4DAA021B26ECC5125B9394361CF8586
6698B03B7B07E0F28B96E343537BFF470364C7349DF1A25BC20C40759358446548DB51AB1E57
A7BD9F599F2A3481241FBBD77521BD8A51542C70A49BB57755777754BBD5DAC8CE1540946D3E
DC6A11F9B6C3F77A719A1AFA129632AB389FEE1EE3DD1784A5E8E935986915960563EDE365B5
5039B0B98F70016096225A2ECBCE59BC4B06E97F50696819CBF067C46A55E5A5DADAF65B2703
9E84F50AF91E16BDC96E95D4A8A2D8FBD531850F51FA3F10D603C13AE0BC2686C37A6C993D69
1F57F420E6439361AD58DEC653A9F3D5316EA9529806881617C54EBE9501430D3262C83F6FB1
592B7940564F299E09E48B75AE4D8E885D0FD525D0C0694E7136323B0FFF3BE8595738E3F5D3
FCC7CD20C4157AD43BFEC85D14001E753ECA1B76A3FA04779CCEF8DF1249AE049E5D62738F41
8BFC1321CB8ED2500FF20EF3ACCD697BD2171BAF725B98274CE16E9181B08B9F6AF817612EDE
63EE9A000DBD3D6C4DF0AD3140AC9CA3736E678C26D854B724E85AABD9C3B1AE55DA1F9C7461
1E4F77E9D0EB242AAF39F6945C8FA7728F13711603D1E0E18571D33B0DF2D48FCE718DE4E0A9
FFC5BE8B72FF30554B031731BF8F90B1B3D21CF38513BB5EE7ED1555F2BF24DD9AC0CD2F5A95
FC286DAEDF1ACD32EFA045A4EB6AC18E567EFFFF4B4820BFB5DACE61B914F013EA243CDE2DDE
65B9ECD5398C9CC6E40B880AB647105D19DDB00D65B68B8B02C4E8E68D2ABF785DE73A3E3A25
75320A1B4F24EB4449609BD0FE79F0F3007A0CE8F36B9A7CDAC95A2936DDB7B9C4D4A61DC9F8
0C27B28318D3AFF01F9D013F5ED45C2740F7D3135503C131FDAA6B529C7D1867E1723BAEE861
CA2E6EA1C971A7941EECCDB1CCBBEACDC7EAE19AA0D75663AF5C7D9274CA5BE884DDE8424272
D8082F2DA0D1943300B3C754080E674B0F107E956A538696750D65701825EBB8237B814FB7D9
2CA577D0DD53C6AA7ECE346BDF4130ADB176D9F6D81F8B0E942A5A5FD819916D651942FDD619
DF9D9B16804B5FFB7F487E51FBDA96544696250CFE8918781815C9DAD4643DC3F65DFA8EDB44
4A874048892C602FEDE23335E8F00EA9A0E5FBB1816357C8ACBA7879E00D67B95A14E7052281
0335D32509941DC22742093DA9BA0A42C1F71D35F6FC786DBBB2C67FE489CC356BE9762032D6
9AD2926BD165B9C6A43EC30F0DE3D4204C62FD62828CC285DFE4461CD62AB2A7C9D7013AAB3E
313FF8C7D82AA62B6B3FC6FCD4740A7AD72395BCA9CA00BD9C819EDDE48992C218F2F58442B9
31D6861E72A38F3742456D75F9BEF69FBD7DDDC5108F09AE6FAD6DB5E68D347F9EFF8B77CA9E
757407B5C04EB66D1C961F4FDEEC1AE8A98EA058C2FE29BBDF4132A4DDC928CA3C8C232EAA03
8983F9D6A8C897D307D0D429368CBA7E452B70B560F540706B3CA82221456C1F896A97B53908
053E5FFD4E7AA470BB20F8B3E5045AF0510B0BCE923BAA19DBA4C59FB56C824C0B1EEC322618
259AD02CDB518B1440D85A00D7D8D4576099CA887775730BDA5BAE9EEB4A42DA779C45C20DFE
6CE526BA62A2E6827EBF1AD78D74150A2E88A1DD5BADE7381D95808AF8F0B8CA11AFFF68BDAD
6448E3B12A9B22813446F34484FDBA8D3DA1EE26DE31A199B2978FCEA142E2C3D8FB82286E89
0BF55B099E93B580FAF90352E5CE80252AC66F50A4C6D1E9CC2B6B5D2CFC3F577A0BBD24D372
210A1679DAB700699F46BB77CCE24C27E9E76BD65476CA3926D0BAE5B51348ADB3D9C7183B8E
0BB6D529A568743C85527C51F435722A7AD3F6744D99ADC6E45BBAA90FB5D641992E3AD1E130
72DDB86310CD5F381793DBFB6C8AC137535BF8C362B4D43740DE8A53B3026A9FECC6BDA4A45B
926B9DEC32D2915672CEEC6A65AF29157C7A01CB9B37A6524B058EC8A0BA7B5030880B57CED8
A4D646F846C99C5720DB52FE9A934FE64625DB32D3A6AD0F4A2C0357D72C45150A2213223C84
81F09FEA678C6032A418545C72BC8E4A791EB85460B43507BF3854A45737220F2DE46E86F4AB
2DCACC433F98D8D85C3396BB48F03B87A828CE5990340CE3FDEE43478EE9EFD32C5A3903BDC3
BC3F6F194090662522EFE138A7A4FEF3E6A077C8610BC2409E79AB9276BAD71F616EE2E50BC9
A1F4F4FC88D86357E312D4BAD0AC6926E5B70C4B622BD3CBC42D321F24CB44836F01F318260C
0E4DB21B9DB87E8A48D133146B592AC972968EFC3778EC1A411DCF24C6515585FC68E5040419
E46ADE0D1A8CE12E9AA3926FD5F510D975F8B541A932E5E543760D72E2F4A09DD3DD2C5884FB
3A004C82926F020BD76D5E36EA479D81A4F7C2197C6FAE2CB4E328458127F4BEC5FC0F29A954
66088DF467636738DC896359AC4D7B224E43616B075FA04092F201D0D80FA2000B3ADD4DF702
D30F5D5BE575D827FECA31CDC29559979850E7961583267FD757048851527BA60D4AF06501C4
D7262B18748AFF9C130A75CC797D0944B349678CDC60E37A0364B4F45A5055655A150ABB2DD7
38140DED04E652CD955DEF4591D6AE8D56640477EC4C5DADEEE3956798CB93547BED68CCFEEE
A0D9441F12ABA9C3F0105286D41AE57D8E6EDB0F95B675E0400833EDE3C9BAE709EC4EA82921
8445E48FEB0AFB368DEDA71F48998FF59BF293603C685101A203AE52F404EF0B12A9138CB100
00E4B19F4B958FC9C413E5FD262603A63AE9167AA770CD04571E4749076C609D080661B08C8C
605D43BD4A4C6CD9BB5CBDF9205C147B2573CF307D04E63AB65D1BDDF72F2B816D52AF7C2424
57E4A398D21E9B5811929F002E6179C56415D8D7AE8E876D129CB3EF02B8E8D10B7DDA8C8FA7
264A973DD80AEAB5E088919DA2FADDBE07B77C1CE53CF2B0C74157CB83B30AF9D2E9E08E88BB
77D098F428E619C8B0EC4527A81CB0867A11109E34CD8D7281E2F8776D036F153E0E570FB7F6
FEF15831B1C735A34258214D9CC4D87DFBD4921915205FF566C1882070172FF777BB02128016
CDAB13EF3C71157349998886DE9AE4E7D9EC993163433A376BF9220444B2B21BAE83D531BD54
857A0436963B97895E81DA0BB973D629FE43A82C5158029DE6661A313C1459A4AFC80F54C369
99E3CD80CB757AD1A91C767AA9A8DCBD4A9A1F72FF4FBECE2027400F62C2BD45070CA98880C2
B18BB246C20302E017D8D13B20A3473EB0088B42BC8E40B898D2A033B25D48FD673ADB331E48
5BF487DFAE4ED64F0FF6F19FBEAE344873B94BF0483D1620297F0C75BAEF5B3B084F5D1A6BDB
174E71D53ABCDA2C242E1D4B5DEE67D1AC7DD0CA49B8AF2A67ABAB932E106054B258B15F7E1F
7F2EDE5E1323DB23B3E84C7EBFE3FF21D6B5A9B085205331788768B178FE952CB8D1577E45EF
32706245EBF26537835AF0806BA6C10A10FFECF692F73C9EFE9DF45EC5FA91E429324DBBE6FA
6F6E8CD3B1A1F8CCF827FF8F3613B1EAC6E499A6DA594C0D58EB626BAFE2023EC5722101819D
B23E5952120E46D11305FBF4658AE81AE0E29EE81FD572E2F0308651237E3AE64D91708ACE42
738F3260A77959C5C09EB8C48D77BBC54565665D2763D765F0883B8D509E99DC819AE636DA0F
2CC97C981D1FC2E711FF46A79D34C51D6DBBF91F9243B33C1B42F70784070674F6163AB5FCA6
D009461BC9FA67694866375BCDD7D4A3F32AA5089F94EAC222E6C111F54B7CBF0E44570DB7DE
10BB3A0F8C15B6F2EAE1AFDFC192AE094D3C2F0806680CC0D05622F84CFA52A61ACCC7A45439
F68DA0B5D92F5E1CE47A765BD3601C65C0013B6E3C692A52A64B37736E9BAF6C465990133A8A
B7F59D3D83867CF35F691231D89FFBE84B152B9F5845133D56B21B815912C894A771711D1076
61F76A09E80881A08C8936FB8C2F213ED9F3E26D1B631AF76B0E70A6A236B97B57CB2DE62A6B
2BBAC86D04D14DCFD05A1B583262E13B3B61F54B46D1DE5D400000FC0005D3B29CE8FE915435
A98801722F16061E0C6BE2DACF4C9A95E586D71C04102E2B1529157C1E9012D4E1C283796EB1
16FD58DB78A5E776B237E04A115710714ECCBBEC6149CFE785FBA569411563B6A6E27CC0DA9C
F3C760AF5D4683A8914D95369B8281833050D5993C76FDDDF41261FF02C4B04A9CC6B617AC1B
1163BFECFCF4100120C9DE9A7690D38122EA9F8E12B00E899C6425730B93AF80F4C75475B3AC
9CE475619E9A0A61722216EF9FEDB581708BA0830CE500465AC278A2F6E9DA3659E9171A9317
7615E57FE875B67C26D06A35A0122895ADE6A49140307BDB0DA71C3714C0FC218F34C9346521
BC1D9A6A700AF327120AC07ED9B2294F5052EED16579094EB92274C3E9C155FAE0CE973CE9E1
D5EC7BC2E55A2D4AAC34895F92D2EB850D85987610B21AB824388218EDF15C37029831FA3729
035AD228BA9BC1A1A89BA107805E39397F9C6C39E280621C5DE23D284D2FCEE8E4006362BB19
3DFF997E8295C33925C3251488F8607F62CD5E1B31DBA8B024A05C8C08A494C60BF20C1C6B0B
49AFF964A5D7EEE70372FCC7F64067BE78D35B476403FFAC8F2803764E01D95CA2F09718C804
26D456FEB6E0A5B8985A5DC0BB0EFFCF2B6D1F9AED5A069F80656B069905DC124CD97A38212A
3936C4F4E10D0C31D7F65607E18A56FDA33739307613DB5C6A23A7ECB2C6963922E41B104F2B
FD66E04C09553BFD0F53AFA4C43495D1990ADDB60D3924A55DC881D2D9A0CECE4C22345AD38C
B3E7FE1D138FB8C7CE8EDBDE5FC343C598976099AD62CA8C8A76EB75D6EBA44F58B5C770DFB6
609598427E545C02EC89C9FD8053004F3F3AB91F693CE3DE7B01E583D4069357A75D76F37C09
635A26892232996D5764865E8DFA7175EE6FE95017ACFF302F452CF4DAC840AAE747E22177DE
87008F7CCCDB92B4DBF12F6C352FA520E6866C05BED7950062B05276B4D96103969B9CF09D99
A8AC9C099EB50BBDF794BCC45E05496CE09A6F403998219565A555FEC536F4D5BBDA517A090D
0B67BFAB57F922FD0C27CE96E1AC02AC7FD7B88B6DE2B40458E319C3BAA49ACE54DF3DD618F6
310EBD4306E2D9D13CBFE4F9F2DE6C0C39024844016EA07D23124FF232EB70B53F0B4191D325
7D075B20A31CEAF725C3427074FE96FEB9F6465883008511132D7C46885A07E5AF39C4BA7050
519E65B4D38780A48AA704786DEBA7B4B330EBE158AF624AD254A1A749456E94C602EFF0A977
2C870F557EFDDA6EA8A10BE9248B48F5FBC0D8B393D379F5872E223B677B8CE32363578FFEEF
F69C5EDF1F7E91438D973E99768A134407C02B05883DE8FAD81FF6C27709905A5170F25E0A2A
431FA40A6B018F59C10B18D8FE4D46D2C63C4E60A967608532AF681D2DA344A6EF71F60E4026
103B9AFCD9690504F3D5A350098CC25ECA8E12E92E22A70692614C33C588850A185E079875B0
23BBD0F05261BA6361EE012EECE6D2E6F7BCB18060AB11338759959AE4743DAD5706A885B611
744B36A85783822B11D724571D10E4016B3C3C136E189CBA8580563D9E5E569AAF11EBC0CFE9
416DDC0D2A29D8B08BA1CAF0880C095CCDACB2CA4D7674E578ACC90D834BFBA7EB5C4C8A40AB
A549CA42AF6180A5292E9850B1E071372B6B6297D850E03E5FF8AC2D91642D390D82B001D730
0E3EE7A86640CEF91A8D99EB93DB3F5909D032C4E96971E635BB7C91E90D83E592EAB38DFB58
F1AD02BE7721D6BD8385E33064B2B22D4A8DBAD7BFEF45014EE987DEDD0CD66F4FC2787802B0
1C975DE69FD86A1B22C2B8786128691703D15F2FC1E2B6DE0C8FE861C3B9182E43F66BDBD0F2
41C8913B689AF91BE5FB7109D9E29B05BFE1A5E5BAD52606E85D0A955EF5B15A5BC34D645B7C
B2A403B12986FE7C3C1DD42449DAE23846A62B0658AD2138677922D75C0BEEDCCCBC3E0CB7B5
52FFB89F1126548D55EAF1B66DB7452BE40DF63CD57A22FD8A6EB38EFD4546922F9355021893
FB4144E2511935E70B7E5AF27B5E1749A1960E52E64E369B282D56DB767AD7C16232D05E0596
A046C2F4445A28E07AA168291C01D1F0549C6CF0FC5D88A218AC9CE92F33C70E3652FE323D0F
88B3A80707721B2B54DD4191AA609C54C91B2344AFB0255A91FF86BB6D9F4AC84B96DABE42B2
489F2271BCC0B4791C8297CC690C5C68B8F8C3D95331500A66E66A3E4600A10E97246B70DEDC
0663C9C67C4918FF523AE4911B793C0F26AAFD5A26C5998A97DB03D54DD837C089B58904C39C
71F4FE95CB1F8AA78894575AC14C8D10C2840F56F2C7928510E7D49F09C0875B2AFD91E07F96
70FFD34A14D9AE40193EB68206CDBD2E31894EF7600482F202CB19E77C6D330F8D16F3CC9B10
94006D096D482C0436C8BBCA4BEF08808012FD4920FF8836185659864368589AC9E94C9B9F6E
561731B93C0838EA90B14FB4261561CFF897E42523062911383F9188887951C53E96C810478E
29C223A19F66940804D41E01B4E7EF1AC847B51D580706B9D7D2B813D4D0DE97D7EE997577AB
151C6CF638019FA597B64A9992580AF7A16CE6BA589017D1BB86B43B0ECD592F61E794ED14AE
7675CE054D9519C70A80A9B3199BCB038DDC4DADDB53D84576822DA07B00CFED311EF0DC82B1
D7511BFDFC4779F91B3DA36D4F585B395C154059A2725613A03F7FA733F7153E4885B27DAED3
847EFC84F5F49568CB9A58BB21C8E73FC9A2A6DB58EF10E7EDDF0AC9B28F0C452136238125CB
C3B798B0F1259BEFC7AEAE5B3A43FADF533BB5B708B4A54EBE510BB6F49313264D81124E701D
8015B8187CA6C46B9BCB3B0894777E12F77989AB72769A040A0C943DD014024BDF579B4B5F1F
EA1CD54195D526EE609643ACE049319A7AFCFCEEF372011B49D2449355B9486F8C44849149DE
B6E8FDEC097443165CB754B387BA951A3DC565F94383C8177CA3BFDB0BCD398EC2B5F1C534D2
C48AB6BA61F23676DD7B470A0C8E8CA77EE7C39296F5FC7DEFAAC9759C04C6FC4FB87EE1E607
06882D2348E3069139B41423F695F83145BFD5203562BFC3D05D24DCB51F8BC14CAF104D8990
1A51CD4CE65F9DC6AFFF54B81DF6DDC0FC7034B199D92DB32A9736615BB727C043A2DE9B2838
DBDEA294CBE4B558F8A189E30F5B055F0CCF2D9EE461C6F07AB6AF85B878B1935FBA429B443C
4D4B967F26B747F7A1086811FEB6ED5407B80ADE7BE5D3F77F00B27409D627FB00B7733AA1FC
7B0FEF5FEB7548E7D829FA56DC4EC38DB398E0F490B661B3583D13B57CBED4A36F0D6094398B
9F2E795A003B98533D3797485D294E5AE139CFA3C2AC3A46DAD7BAC762807FAE98D81EF9A408
354E52E30B9DEEA8716CC6434DC852824B36B479035456839B1E7F31E6D9E14164325589ADE9
6A629BD38F692790C7F360DE1758419AAA309E7E1CD97ACD8830D09A23384FC3184ECE9F1B0D
670FC7CAC734F84E2E13982B9FC96AB1E1500E3E5FBA0C9BB691689138A57A8669DFF340F8B4
88CD9232A9BCED68B568DBD5604CBE576C3B85945EFA0950B1CCBCA38DE5F60C6938AB8FD48B
C0F31D5EC69E91C9C297C18C7028C1D5480780DA896D4757E67074DD421CDC875A0943774B73
E72B409C6E597D561D17F109FFD2F15A75057A52EDCD4036BF79CB480785EF8DED48BA747FF0
8494A9095B1403A6236FCBCB2EAB4A562A2AE5D18BE4C8B439005AE9C8508D18CD7C4C021715
A78CDC33D2E0CB490674B48AA723FD53A8D9D52B2D410EF0B8E0564B33E51547D03732B98814
580AF4A2FFA21648F3E80D344B5FBCF881AF31CF08FA4C78D5FA9CF7EF6B2A7CB27E7C2091B3
BBF544A28CF54D7B80C3734D8129358E7D727E3E7C6415D4A3027DED06DBF8D25BCC638451C8
CD2533B51A974066B16954D701710DD121DCD5C3E23313F8F55E0D278D7BE11A66700D30C111
037EB13CD00AFBCCDF3112E3178804D8450784EF2314086080980836228F5EA30D5E5833E28A
948BEC11AE423B4D6C4EFA2B376A9177ECE133A85EB57BF2E2EC183158D9C2D70103E7694909
E0D465BAB98EE8BEB4042244919E4F6A7B575D397FE3984347F0500B167B4911978D1230EC22
AC03DFBC9316080B309FDA31F34EF3D0423B07957A72A2E255E306EC3B3D628A366C6F10D0C7
8A18804B9ED697607E3DB1DD6F3C39627FC30FBF62BFC04373824696C5194A3D735EB6CC2CDD
FB427BF1E77C891277AF960E70B9CD8B79C6DF15F2217AE881C320371CBC68CE6D0742D70BAF
CCD6D72632CE3D0ED26DA6645613059A88E707BA64B41CAE8F959973F7D4934CDF36C0EEC2D3
0EAB74D0CCA12583201AA12DE9B27BF059984005E410786A131B165EA2FB09E96B495DCE7C91
6FD8BE07123B6264AE41B6FF44225684B50F39CD0BE72C7C9DF945791DE9D64B53E5AFBD70C8
35F9EC4418421534362A6D43857B651B45C009EC06604150A7587A0B058F1E8BF0A5FF1B41D6
C3B7210D3219B3C001C7064A7ECFC940FAD290486816ADADFB3E992D2DEC4FCC3B65C7148155
A0674C1F6D8D1B6DB30D67401B5C25E5C0ECAFF8C7132D0255B5D58DD96E8C619F6E2A7E6C87
21BD60904F41AB8A1E802380150D8D470A84C3BF1DDC92B11BEEF01FE5D547357B856861ADAA
D8DD81CE7A03A1AB5F6A1E9BCE448B186153A376198EB6A6DCA45D3FE074A90D6FE5B42449E7
3A02AC5E7B38C720EA43646E8502128B76A9216F1484380CD40CDC1541002EE9DE99A24A0093
2498CE9190ADA5DFC70F3E31CE1310AA0E7A63A3C11D1796C50258E75E0B94CB05A49359EDA9
21A4E12A6A3F801105A77651F118539136B38824C542EFA9C47ADCAA6BA8839C41F1A7EC1457
A0E367D7559F656D37353A8AFFC427840474C2E9A2A3891B656CC5330C51DA3B9E316CBD96AA
020C9307B8476B218EEFA3AD404292C28E635A0D86012EAEC5BA7A84D8E733E7F42AFE31C7F3
E91F91BEC1163F92CCB7A9BAA30C700FEBB2F265BB9E6DCFD42CAA36F4B99DF5AA650C2474E6
EECF00C584A3C6A182563FA829F441205C8ACF53F8460D8DCA81D7DAD8CBA83F0FB75AA188E1
89492C2CFB2C521B52F86512D47D40392CA4869832C254D5C4518E0B323789CF51D96C2DD808
326C7EEF19427A925B40A5CE2730B239C0C3CF8D2878EA50F120AE0B7A8CD4B1C9D8FAF8628F
4992624C157A255F35A1663D0CE06AD38E4B11819F5E258F5DE09588E0831B0ACD4B6274CBB6
585126F5302B4E568090C4FA6342682474E1AA6DD85642C66A04F0B057ADDCF1D46F960CDD59
685756763C2786FBF465849841854194A3AB88A6B14ED26DC53D22EA8B92DC580692C3848A2D
22213F5D286855058343943C663F19AAD6A5F139E9443E015A7CC6AB71D569635A319BFFF835
CA9B72BD5C8F90C254AD98B277A33DD77B0550797FAB37EA0974FC63A9C18CBA1509804E89B5
C8F1E50106C765C93514C492C91B105605CF7A49D46500310F10622CD9C068120CDFDBD2935E
0C190CF26404714A62A9D33F143781BCD1E7F64B99988FD3F09A6AE2BDA166FE05490C8D620B
A7826036B8184378838090DE5604DE48B708379A9ED26C39E53B59DF689B91C1F8D184B4C168
EF37FAD8A144054650E035D2C26787F369DD8CFCF6CC1D2CEB3183024768B524365778FE6AA1
0ED72511761F8140B11ED569A36DC5B55A040C2803847BE55761CDADD0BFD227AB51CFE11309
D3D41B75453F38229C4E011BDEC1B4408AEC5F4F29F4F5218651F83C3610125C68C6E95FAD39
2027BDA90B78BCC09C8D0B6477E753A0B5D88A6CFCD86E2036648C2E146BF0823EAD7C780B7A
E01CDB4B4F64F646725860CE57C7741A98F81E3B7E614C15A04B26440FCEFA605388927C2BA7
8FAFDAB30D7A2B849F8093B8EB1916F10A1422E72A76924F999BDDE29A7D4F67155046508995
89F134FB86B97705E70EB7DCEE54CD5767B73596C643CEAC575272F3BFBB1457700A23B29EE2
48424339334712419F418E02936158427D34E4DB691153DB2B99D27A043443ECD7360455E0E4
38F98D58FAEF92D24209E19D2C8F4B5EDBAF08159B69BB41975A5154EDF54EC7BA9FDC6E1E86
ABB31CE68D27F99368A9F72CE4D4FE2CB8C603C8683A15B591ADCBC931D36DA70916936458B5
24154B3CABD02411EB7E9B81B6FD9024C75860CB44A02B8611FA623556CBE4ECACC1C466FA3F
9E511406DA816600AA4C02EB94BB999B73A0DCB6EC89406794ABC37E29D983BBE7A6AE48C913
8BAB3F4BACBA06A1D3DC9508D26EFA0FC7932A38FF991619D9D4FB0464610041BCB7B66B5DB0
C2AC15E980C17D87FB7239C3B8BD586CA44D125456BA17D87CFA4EC799B5D161FEA0309F61D5
C51FA0B7169432AEC362BDB0B158A60B4B7BE5513B2438E6EE89AFCA620CEE8B2E68BE2B2D0B
65A3508683294E28B114E6C27AB1BDCF76AD0A3B2A8781C2D7283F11AB3CA17DAB03C5E75414
DFAD1DA1D9F16D3D28FB783FB4DBCA823F3CF15FBAAF2F5B69683D5545AF3ACBC50FCE5E9E71
CAAF5A17D59E35C0368D369F3DD25978D9763173E75F27CFD3F5FC074CD3EC3EED8E4B8C430A
7040E04D276B89AA2008C15D078DE4841FFAC5754B478114000E1F9E96B1564E6FEB1FD7855C
6A51F778B4BD044F33BA6B9A492FC9172D810E408178B3F6A91D009EA78609B7207B465240AB
474FD84DBC15CD202FEB6F4A5F3AE9C45720CA21CD0F81395C5F8EA9BFA39688BB222A81AFD4
43D50898EF2213ACE51A23F802B016D3A9286186B71425D1920AC92C859963ED32D04DAECFAF
C9EE138A26F989AE8F6DE3B790D5BEB715169B52824F6C83CA43280B681F3357E8390A7815ED
63AC0BC505D94D10515089655753FB91FE221D4DBF216A43ED71F390F08B3A58962E219B075E
630C3156D2D187DFD49AE508670107A1E9B3165EE4EDC882154C3625B9EEE1DE0883BBC5D8DC
2A7E1DFCDD347E0EEC3B46B2150DE67F61BE54EC04C2D4F25E66D5159ADB783C3CE51E7353E7
958626CCB5E29AF6BC546A68515F3C30DA79F0E2ED493D7CCDE675557DB696BDC0D6F19D5F57
3E54862DCC9ED6E61142CD0F746695CF73F9447D5CCDA7E52038FEFC67DAF3A6D852D3B05449
C61630615A88CA92A73177F6CF7B837309ADABEEE3D569BBD40D95EAA15F2C293B367DD5454B
7FDADD4829E27C16A66F9506F667EC98C6DBA1DCAD8D28D02054767415F6A0A8B3727AFBADD5
D1D7F6945E76A448299CFF82F52D533C8D82D49E3EDA5F4A46FFE58C5A853D9128A30297233E
26E2853118832FE5F85323BA553DB4FC96FC35EC1B1F3596EDEB811FDA9FFFDC11498D15F4C1
E6CE4B979AE06607578866B63B42D8D1417302106051683C124E19BB491EE8357AE52AF76A1F
95B20C29564BEFACE6D46BEC2970A8CD2F910AAF75E1DF7811ED4EC50583FF8F699232926BBC
F3626F202607BF41C3EE16123BF1C1DF5B979886C2E2E8D9F28EBC2B328CC835C19F229E6B7D
686DD098BF2430D68C0120674C9964B0E859F99656CC242149FACB10D8A0991D46819009BB11
95B99552D07949BAF2CFDDF8ACB7E42922CDD37CACA1999AFB4F065078E919E015BD66C1D775
18EA454B529867F2AB90EB5A3E0D9F64D8030F6AA110EFF664FC6E5B59930BEE02F24B348405
1261DEEB7D37FBE433D816D48F976BA9223D667CFFD8D5C89AD1462EBC1D3C330EAE52C8152E
335B9B257B74682269C5E6E9A8F9819CDF94FD235FA60A6368658C0C67A3578589A939A0B92B
238EE837D62CAC4B53D20DF16A9B92CD5050B7008B1B031ACBBCB7868BB61E240573FF1449A2
761271E7B5285A14F56FA42ECA9787F26EF8E2793D9F2A6901C648DDFB9DF67C1FAD3F1B5EEB
7F2C73F4839539627AFC8B8C592AD3EBE317E357A5C83F909C4CDBAA7A5188A205F9BCE94280
E11E0CA78FF634B8BCD69CA9C639648BD4CC38D516C85A554F7FFD5C1A78DD75BC28971A3572
CDFF0303C5C2E628FA54222D3F56DD9176A3F0A434650807BD81A2805FD3647EF4B59D2CA97B
34D96CABC2B79BD39827A50ED89CE6919F44173B600961602CF335F7E52E0FF37EB353AB9C53
B210B0A92F4051B512D77B6E69D73264ED1B399C92EF215FC771884907D476D0DFA1FB924DF6
DE16177E182722A943271C9FC80E848EA168189188B478C9289B37C3ADB960F61F3A8BBC2A2B
F6776C711330DC2F5485DDE4B9D40F634D8D106B365BE229AC7559925D863E49C58794AD4B7E
14FF038714E16E0214CE0413ADB392D4D3ACFDF7115ECCF27C1EE100E2A59A5A08601E3D091A
526511EFEF8731FA9A31F2918BCF7D7A2D3454D090364258FBF7D947A05CCFE84D6EF721A392
52BD2179FD32EF4B88E6B855280D14CA4F3AF7CD7D03C67E5C90513D97CEC4152FF830F8BCBE
6A902A96121BFBC38A606EEA49821113A21DC28082BAE270949817C228F57243880161AC2B4F
0538B99BD4ABD245E8EC2062EB3A766F57BFF8BB7FBC43D68A2EF5CEB6423FC9C6CA67831748
401EC506A5395D10EDFBCF67CA51F12947D48064A5578A11031B79DB599768C417223E36453E
1EEC14D1A5E01ECF91F92CE33D610535EBA8E8FD64F61DC1C5EC1FE52329EE2352E14602EA1C
10EE3E7314A96B745FC2084F28511C65B874EBE0E8F19A0EE5154C6FFD01384242DFA3B1458E
A90D6875051CFE72CCDA82035973972E8AFF1D6C17B375F4788491991F0AF5C2EABB7818D2E3
D9302913DB34E9E671CEE403AE0B6697998B83F50F132F423B2716299B3B509231960DAB656F
98F6FC045882E81730DC444287BD1B1B0BA4308AB9D5818DF12AE4A31618EE4684D1211290C0
FFC2C3154DFFD280060E3B09839EAFA4B9F8D4FF1C45816B9AC1146BC2D6EFEA59317BE0BA9B
2B6C4E56E8DDAEF49C98A53949E5CD63585A1DD0D497719BC323229481BFEBD819847B08DAF2
DB7652B33D15857A8D832D0844B1D55E8CB5F250329AA92ADC484890382EB77497BF8E8843F5
D349C100215D74B899165789737118CBCE5536957A0729DBA4E1425FCA2B6C57E5B716037460
72C9E2173C540B4844A95CC09E77408CB31432928DE4D7E535FCC58906D0215129B31E37C724
F2588B51A642E3954E0ED4BA89F1A26BE138D360EE19DF0EBFBE94AF21527F96BB0B859C837D
FE54A5F62572C7777BD59DBE7DF1484FF30A6016DC673377DD64DF72F99EA0AEC9709E21F911
CB76361FFA0EBFCDCECF6323F6F1F5F32846D6DDFE87EFBF7E9524D1749264BD792F9A4447DE
3EF0BD70A2CF5947183B797CA67BA1F2CB4098179B636AC63291F95974FFC9D9A0ADEA305C8A
4F603390828389F0AFDCAD5B7EC51FD9885E4E81138456068D2417FC52FB6E845035E0F59C9A
D04E7471CD8B0A674F790D5F0A8AD2741E4A4C778E311539D08492AD03BABA27616044BF8C25
B0270CDA37948982805DFE7EF9A9D9A604B7ADEF559A37786872DD642217FBB9D103E5A40BAB
2CA8B4F445ABA973E598B8EFFFCB29E1DF2FCA560A0A34998B7EDD72AE90EA4AE7BA338868A3
94DE1B9E5FA06490123ADFAB332D5A94DDDCA79B60F842038C10A34FD7DD94192E5AB40D1DBF
F6248483DB1EB548126EB2248022631FEA52FA5962A404CBD3B7E8F87B8CA34BA34EDA78C2C2
87675D73158FF098E8BD0F19A73FE4C99447A359F7C213EB28A4FA8602A55C75F584AEDB192F
38C1313E9B725882761EDC85C898EE48C642129A027B78CD06D1A7739AD4516D112A47536ED8
C92185269AD4623EB9DF4E709089C7AB958804803A5143773BABBF1503D6AF3B246055CFE846
77942FAAB4C6DF4E0A8099C89A1EAA0795D420C95456A3914DCAC80B2A2EE27C792247F066ED
F65325FBD4B2A82CFAB80A411CF1E2E16C66CA26EA8970DCA4F38DAC85EB0B2425068BE9A279
450B5BE475DEC61065D69A58743479E14680DC750AD200DEE277EC79413A2C1F7CE23A46A027
B0BAA624749E1DE7FA6FFDD4C4213972349C8BFC1CB6125412A6672C02BC6EDECE55A961D9CE
0C83E3F249AD409BECF3A90549D901A2E37E4651AF169DE78EF396286AD9AC3F56187C039BCF
1DDAE5C0AA08FBCE8B34DDFC8785D5870A846EEE33AA82D01B40E932F07E082A347B04B37F5E
2E2CD1BE46F1835E62DFBCEADBE627F18CC0E46E8B488DB9C9C4E597D6C91A5DF0AD1F1B6E72
E7289A66252D58FCAD0361AD9D06A95D103528A79957F0CEEF0C60CFB9F48E5733CE1757352C
98B41D28974481A6F16B37444B65FCFC9DDAAADEBF359BEB8694410DD103C23AE1D012A58704
41677828EDCED461E891E5A0BAF35231555B70B28854F94FBB362C191858E5F61452C5ECC782
0A07C62E2A1EED7C4D0B6453670B7732E7A550284A2751B8BDF1E81F9F4B0AE91758E381CF2E
D8D90E26ADC3D1F64264C6C6FD1675A8E51AF360871F21C189C9E9C3BBD1EF03D40A7A8C3AFD
0F2590682FC34438B01FBA0718B72828680284B5591A0BB88043EEF8FF33139EFEF9342218EF
6E2D415B1AA7327D078FD392A8F6702921F77A0C5EECAA46D863E3E2FA2106F299A58E48D36D
325BD229AC40DB25AD9302B2940768EFADCF493A8A0F9EDEBB178AB7210155E75796255AE185
F20581FA7F653131DA3FFACE3365D9AE2A65811A3CD8B0F25B0FBF27B8A481EB30B3F7DA7EFC
0B8F6083C9B5F1C99AEC62848D06066CED1E8DCD8AC13FF293921D96099D8E27196F11E5427E
ADDB566CC697B66F3035E295DFDE0929318C45CD99221BF7521630C5B86475887186B3215C27
167C347041F3F3F4696D0760BB61B7B5BFE5AECBC22AFD97A53B0A576EADD0051E803F6D3B71
89793D359DCB18C6FFBC9FDAF24059FBB3B98786F82C1F25E7A89890BC1D32360ECFB378D1BD
D30742F7CEF90C568C6AC55691EB66E437DF0012A6E448B7BAFEB0F8646B6330088EAB2577F2
5849446AA7BE23C438E7C6DBF7F3C01606F054BA2DDE742C44864B9DD827AB3114C1496816F5
0FD37D9B9AEF1418EF44E7AF26F1E7EE66F4F9C0D4297A68C4D0FE3BEA4816F9D1FED363BF08
779C31194CC6E43CBC93A24FFC973928782826982E2EE69633E948396D4C18A224726B7F060C
11B251870E047CA409DA46AA6B54BAD3ABB19507D5851608DDE73F16D7ECE480EDF991592EF5
057998DA0D8879CD08DBB52AEB2D5B2272685CC5103920D868D54FBF37AF9AB039E879B8848B
9B5DB12F70B56108F312C77B51D61E7A60E58DF12AC8FE6C9E3BD8E97E700B4127B6F7F75E64
872B4EA60641D3B889C6E75368DC12F346793830D2D6B6631AD83691BA84DCA7B010DBC81B87
241F0483D5285DF448C6C2A4C8322A8F42EEE43A1ED59DE042CDBA8233F3FF18B2523E31E44C
A87C4E5FB79BBD7D6666D737CB3B0EFA10D1F1652674E24838BF99B0D654020A3DE4F69F6668
9760D851EE7F0F17655A7ABBE6C3A57EEE23AEF62829AF8BC9C61D67B401D91F38E5D5906A30
FF3FCF82728941963518732C0F1E12BDFE656DACD2149183BCCBBFC630E9C0A6D21FCEB551BA
9C3E651FB1211158734DD36EA9EFA6837EC8AE4D332BFB36BDCB71D37CCA1A6BECAB601CBAFB
C754721764759E3B07E478860F7449EECECB6308FC93F52E497A7DBD5191BB3756BFD0E7C59E
9216E9FA72F40EAA78B2347E4A133A1100EA807B788590F6F52CFD2096C33E600E67B8FE7908
51B1D577176B41090040A49E131404F3CBD322DDDDC4985B2049177FD4F98F3B297E5F08C4F5
A36E17AB1900D4744E39B9D1FC8A84673EA106CA4FB9A1FA482E9E78645C4DE785DE5FC17B87
0914E82F3A90F112074A056A9D5C638BCDE995C6D6FEB32A24EAB04B7A03EFA1BDFF0C2C8D69
04F9D22EB4C76DF83665DA1C07C6814E363F9EDD83AB0FB6A57A8D3546BBA181DE68D39F2862
C1A4DD67AAD0D31866A652F178C329A30834C87D19B8F2A7DC10ED02573CF15129533BF7829D
C5BAE9B19BFBDFE9813ED78FE9B7AEB27E5D7CF408578B61D9C545CFD4D996B18183164C5299
7064C2CCE2740AC5E604088DD4F7CDCFD178D25FD38F1144E158078DB691FAA27D368B48A61A
3B5D628974CA505D859D41BDBCC2D40B28BBA6FF40332AE88EFB9666784C1391B1E8172C9376
8BF36A069C37632D362C37E700ABC19BC41E33A1F66F931F9A8C0DE2DF233A8BB1EB300218C3
536612BDC142FBAE52CCE9B456939308F30AAD4FD24AA60C1331DC1988408BB1092AECBD82F4
5F3984B0D2BAF91BCDD3B25234B11F2A8E7871F0460C983E6B2ECD098B3488A2782CC2B1D8CB
A059CF2EEDE6CC82C15A8FCBDF2A88C52082426548E8363BCEF01B3DCA2A55A9BB6E785E3725
1468159CD601FA67A977A245BA9F9B645C58873EEB03B20C43BC7D47CC2647F4D90D58EBD6D3
192F349EB8C0891AAF352F52F75B68FE6E3AC5E14A25BF9820534E8DD94539C69CB501239B80
87F4BBC52DC1BB3AF39550471E65D1907EF416316B13ED8499F0CDE8AB8E12EBE71F1D12BC25
2AC66A4C5475D6E16880107F196FEC9E008F0B97498E06819BF64CD2A28D8CB034F525997E45
EA82F25EEACBF4FB40D701CBBB20394BB12E5156DF6053BEA6F92A6C828244E6FE909110A9EB
1A56637783CAE12C29C6BFA7AE03C599C96EE9C2E2283049379BB09A9740013734F69D53F624
9EAFC7D4A9761CC2F083EB471ED8C92053A9855C3628CEF5C871DDCB3F5F5A28AB6B3183DCB4
D539D5EB043743DE628EC9B1CAFDC8942A54BF81FFFC3A1E2D7FAB2C7BBAC771D2B554C947E4
12DE48244B9749BD59F9A694702703938679311906378BA2FB534D6E92B4EEF296709E0830C8
35F7F6EB912F6CAA66C71BA9C1D5AF3EE3E4F3AD87FECB4CB8EE0FB2EEA8E6489C9ABBB26D2D
5D0E9609FEDE622CA57E21F3AB7EE46972F94B4FEB6C5A47FEB19FE995BC3578880F225107CA
224BB765CD0A397541A25ADA016CB9445005F12A0D15463867A7D3A4F1C9347307D50A85CC85
5B9B0E6CCE8A84AB0F3465A01594F9F8746A07D9A54C7F37D97D22AF719128A3451D0F590675
ED4BF59A5470B2DC674C740F1DE15BB3DFE2657606A98BA86AC92EF9F0586974528821AE57F9
65FBE57E238E5A0896DE594935D75659BE9ACC8DF2DBB317B1CDC88078679B8131638A29BB39
DD91C1DD1B22DCE5335C7AC44DA762DCB07CF6B8E8C60DF812D8CF9F07F4981E79A5B6B14CA7
F402178495E31D0DA40B026D1175F0C023FCD30D409E705322479F68D9DA883CA5BC60AEA820
4A166BED2093C73E8DCF1DE0BB5A811823212556673BEDD0AA4DA9445DB40729496E6315EE48
6DA70900574FC341C36CF82DBF3AD8736986745BFAEC9CE9FE9F78D4A22328C02DAE418B3F03
AE956E9BBCAD2750F996C10A8BDE3C20C04BBAA0F4DC782A4E51D93BEC8878ADFD6AD6F1C906
53C938D62006012045265CC682781766591FE71B645B5B29DEBA407449573417AD77C899FE86
E5B74F4B9E917441891DAE48167A30571795B584969FE6861B83C49B3563895817097EC43486
96BDA102272DEAB512B5A5BD09F0143B8271F9595DF064225F241CECC4E8C6C0554D720B6266
4440A1DFF2BE8879C710C48D75E9B14DC4B1058F06CF514B2C7990C81AE7474634AB330C2C7E
E35D0D1CF317E13DE06CCBE706ED3F5E1479C3146D047A3A719AB8240C2FBA04FD2420A635F4
0D6BB22ED55C6F43A7616D7561954477F484E5CF75E9DC90CD3FD07D4D917984FFDE43B95108
7F1A94210A1ADEAC955E80D30A98393F42E7E94C99DFF7EE07BF7C92F62FBC098BB8F6874DDF
80CC38EBED99F5F64D2B967080CE6CC6829F2A3CEE28E3E47F6A87DC7826D5862C618DF8754B
D1FF6139CC1C3DAD575E04A332A41411E24D19301047E9A6D5B5EC65C8D63DFC323D8B44F979
52CD9FE9FF7E828166AE1CA3829EACA58E3C1B2C43CE568E3E0C57C9ED05AD3D1E54E32D9E75
81D407EB2DC29D5E72F1167BB87C8F46047DB1C0BCDBBAFE2B52A168D79A95D6E2C48FD0EF9D
E0AE1E34A1C295BFC336C42E95016C5BE41228690B167E751E76BA1504E0C5181E7A29DCF4D0
54B8E0A7E8141F4B17F7756A506380CE00F9C73F31E2BF296C74ED375CDFB5317BDAA17BEF52
4A7E0ABEDF705C92B665017B2623B082F4BD2E194F5CE94CDB2A2772AD0580BC14CA70AE63A8
BDCEC1069F24DB0963FD6D0312A873407497D58D5351BB778CE6123502C5140929B1902F33D0
61F6270384195F60847B065EFFA3008181595F52E0D4A827704B2E378F2C2E447CAE54595CF5
3EADB388A47E18E241D85016E9E68CAC87EDE0366857CCABDE10FF78405FAE23A0BDA41DBCA9
68817F6E175FCD441F6C52C711AD58D67D34102A25E12F043650BA339CF0580A6FD2F0BB8AE8
1FD0E623CF87337926A4956DFB4B766D6DA606AFCF210A8DB955937701C0B971B7429E0ED75F
628E28DD052A3D221DA00A4E591F4A77AF08CF96918883D4AE867A7503C7E68177F3DEFF7EF2
3F86781FBC5F8A9BEF28A11624B28DD3E840ADA704AE19CCC47751FFB6A51CD554FF66292D0A
B2DC3D90B9CBAF3CCC70C2B47FB7CBEE8CD82313CC611F427FB16BFFBB5BB2D52BD65AB97A28
75EA98943794620128D14A29EB11EB6D2050CDFE8EB349879B3F3E907E43DA92E8A91147C881
D18342835CA6DD096DC948FC2E1DA214A8925E9D7A22A00AAE554FF07B061AC68895F835FD9E
D15C05BCE07CFCADBDAF286A005CC75E182CB262161267A633346BF725A9A0A04B8EF94C217F
32C1D32369484B1011EA7C2B330B110B64727D0CAC6C64F94AADCF1524C511E42005FEBCB553
E2A74540129A8823224D1FACBA76E9319C8F9FD603A29FB1F94A6BBD96DE40F4D60A1FB21DF5
3D60402BA42B8E0FC2D285C6B8429286295E74BE626765980412800110B5A1279EB289722E98
897DBBDE4C8235AADBFB2AACC84BA5981E8DB24F16BD13794036FB00FA3781F4CDD0111AA799
DC890BAEBED6F286A64108F4324C63853056F8B481B1C1EFA0C90B254CAD693B860A940AD23A
F903BA06774AF7EE2AC7F84B6D28DED16C69052A5919C9EFF59C50EA308D8F513DD23C603068
2BAA4FB3DE5CB8138358525257C3F9805079ACD9212636EC7A14EE6C636392FEB3E8200F1A2B
012659F267CF4FFBAD5E515E0B84D2CD1AF4CCB0E80E0C2A040C122823DB694C5A763EDEEA60
47327A7C6DD6D27EB911871C2C631CD3F9CD6F5C6B88A7B184F1335584B658A104D1ED06B5C9
26B36C8111698E374FF3F57A17D298DF41285F39D9094586D3BFB479C2E8EC203227ED96DB43
08CB7B9F09153360F74A0844EBF54186F9DCAD23B1E43545A250E98CCDD7FDD43E834C1E31A1
55D33C95814B0266BB2EE2BAACC2BC51A82CABDF8D5F43081D799BEE94C8B3FA4A344E10351F
A06AE12C2C31E41F2F497ABFE826822A7BC55AC5B6805F09BF0D69DEBBE97794261542FE0A5B
F91A3D1FE29A39756756A688AD28233BCB01B66B5077C31C6E80263725F2058E4C2502C9B1FD
F5B37F6C938F508B2FAE50037FF264AAFB15565B6B757F574CC4BB3BC9B6F7A1F3FF533C9FBF
104825F998693F151C027210033E8548FDDBF9B377E775D66E1111BD3C9A813E6E92ED4E2A22
036CC2EDCC38F1EA7DB9C1A889327A3FF08AC9EDF551E15B26943083CFD7B0DB40C47E347099
74784ABB5B24B6573B3F3E20CCA4F2DA3A567C5F2DA5C1B3077A4DC373ED8D462CBD31036D1A
45A61EF33E4120BF00B816A6E11EF5E8D92CBEADCCA93C35A46F3C2BF29A76AACADD4359D328
8FA4D50CA3B18687564E9F6AA92E24B8CE880E794ED254D0416806225C3D705298F5BDCA3B08
7B00E02B3F650927CCB2CC70628C2C1995EFD5471B7A2E074D65E07527824648FB49397739D5
49DC203A36DEEA4087D174CB8DE80A86D95DD097EC18FA5F5B46B341309348755BC11D281ABB
5F05E7989CBBC6CA86168CB794E82CCBB29410BEC68F0CDA748729553D3F4CACAE0C73471735
AFB7A279D13C2A55BD91260337C71BC4F95FD3CDB812CBFCF66542603DFE8E15FCD860B7D4E8
22DCC12AC4C662EC5F7B95BD0B8F9B0676E4A87DFE73FFA75DC03FA69D109DA3FAA5F23236BF
21D0E43AF41D4DE81409C03E7F60D6B60741C951474E295126241CF9923A851E60AAB36165C2
2AEEF0744A898173286689F4BF68F8C6056D93260BE37AE79D83EFDE31F3BDA46EB7D9D1F8A2
CA5A6B6C65EACA53DD625AEC471AA9D8B171E42CA2C815BBAFA1042A56DDA5970700BD64BC2C
9DCB9C54B0E5B0D6A1AD3D770A3ED7136E06F651B1EF628624A3347C2FE02947D22A8E0965E2
905FD32DF91B3D0D6E79725AA62F63F1737F87F12E42785661B2CB4D5C15AE6DEB82049171C7
DD8E233139678149A4E57C79D4019888F504D2D815399EC1E0AC02DF325BFCDDD1F2088F8666
8C3B776B579C8E01F78005B9EE888A1066C53E38038E81C4024E3F49A7391E4C026D2CDA3EF1
46B1746FF6148CE490D49973D78C080F740079E6D1B312B28675D082C6F2EA52A26FDC7AB2DC
124A1689B34528326A73F07F85835C65A3DDEB5E010439F28C6934D37432B1CB9C5177CAC63C
39088AADC5CA4F0EA95CA7EDDAEDF84E50C507AF7CA15E742BDC8EA5842C88E7E57F46254EC9
43AD2A4FC2F932AB954E7365F4C351F7DB3435E1B6E4B943030D8E4D9D4E6DE43E14A76A2307
30512705A48E2E502A0BF9A649151718CF6E91A2A668936597BB93471961F2453987170443BB
8AE7E1C6B2712AE465C742BDCCDE5196A55BFFB7E820F501D1B21AA50D9D071CC39714351533
9E7EEDC62B913F5B07B53B494DA42E06DD5572612164D333AD0FBD00D70DEECD4714BD8B1C5E
E30191596E94A475F669B174D917CB899B587743D9101458B789E97AA4778CF0F6FCFA1B7EBF
6F454E4AE912A9685BFE7527AD4064808A326CD684ED278A6B7B710FFFAC3D9FEE59F5A66289
0CB56472E3A882584477012594D7C0AB8814AB97FE68A61D4AECBE0A4B0588E06CB839415603
789BCB941555E0D7470CD9ABA93DA31B0DBAED80816EEEC8A34D12EA5B8EE95EB3C66F4E07A1
D409EB96E22224DB74C01CA2EED1EB0985ACAE003B980BDAA10CD7B07F8CADF5E967FD202728
E128ED8FC717CB9B352E4EDC67F934903EDA4185D8F650F43A7579A77E4D0E5D7A4739098D36
402B1D5B8786F82C1F1E0288274126D2DBA06CB803B055D6D63E641F462554755BB9B0CB6839
CCAB4E3100163CF3A8C83BA85B05D9BEC3D8D5078D5ACF552E502AEADC0EDA45C75C77C40337
82AB66E9D1E76BCC6A0DEF719E10536F73073984B320D76C8F37A58EE2C194E0299A0209DC23
76F23DB1E88AE7BE87B5AEE85FD2E92685D0C4E4528FFED2CE9760EC9E6754600A62CF6B14CA
027DDD8AC31F5B7E0815F3E5F6AD831186AE1C5B02CBB6AFE6E9EAB572171E86D9FA6997EBB0
7BAFADFF3A425F2BC7AF37DFE5EEEEC52C7D27C8ECF8D6445A4269F1E952F9145637A86DD5A0
BC0A529A6CEF1C0CF080AAD6D64332C602A59F791EE82ECBB475B82F36157A423B040E8040CA
4CFD8830E5756F92B84802450E44D5AE4BA759578CBA4742BD319550CB3513E2C0B4AB2D0401
AFBEAE94273E454D557823301FB80E9F250935A7F8190B6D9FD15800338F3EB7799786AA5725
325ACD5D01B2D317B461338A5C1FA380E0BC0C10DB08C89DF3C59C5C135951D3D5FA8848C9CB
240F9BF7C5386159780C092FB231E9BDC19D581D3BD3365662AB0A5ACE9FB20AD21EC0BF566F
5463B20034BCC4C4260B2CF2FE438A4A552B0CD3A6ADCD6AE767B67187C81CC2C7D01131C9FB
758CC2DCF329CC96E9EE943593378AB642D1BDA9AE365CC8A4BAFBFFFA8A5464EB3D4B6C4CCF
E4056945A2A4BC2EA6CB6868AB239B55AEA85CE08218197D7F5AB5FF6BEAAD68EEB3E09A5BAC
D4D40F7DA27335301F631D567BEB7833B327E6EA0520CCE262FCED078601A90555FD58788C5D
263E29310A5FD9C5C68762E3335996A7301F35AA1D302B4C4CC387C2DAE1D2AB2010795FBAF9
42BBFC6CAF22D6F62C50ECEF8E3E8CFE90CA0E831FBF8D18DE72EF2DCC8E7190A014E5C683F6
89F1C851D33A6A13D014424AAFDB5D58F4F20D8814C30FE886E3DF54DB48AC89C1BEB7C242F8
A443CE95B7D6F2AE419D663A36ED78994CDA5972410AEAFE23AD531FC2525D41DDC70BFB731E
E20793785A2C7E32A48C489626DE56E01BC69081497BA0944CB01F7969A1A432509ACD803B38
71BF0FD7C35EB0D4C1D223A6089EA5CF9D66282514909B0D6B53FBC19121C57B0488DF664468
49CF39FDB90E3AAA3B0DC649788CEB63E8ED9DBC23E0E15EFD4354580B802BC8F251A6517A72
20716972EC50CBB7649E6F943500E77410A768936D1F02A8E973C2324724B3820AEF63E269AA
F0211F7841F31004BC113310744F2E8F187F3AB8E1827AE0485B1F80994BC1331E5F9B9AF4DE
A238BB2CF767AF0A3B02626897B8E160B9AF3E2450DBDCE19CDC45B489C5096CB6A17A087D9F
4D5097FAF3D631B73B469EF9113F2F8C15467170B9838C88FBF8FE47B56BD608B18CEE0E9990
F88E22030FBF3DC09F57C308F7A0FA0329303E2A3560F3C8D6ECC7517F3BF4400528850C6636
F2D815FE04E73CC3FF3E0AD94EE8D5FF4A3BB88AF81B4B83142ED118E18A3678B297A357DCEB
AC141E9729DDD097218CF0CAF6B28B02F9426F4E4A86D3E748B3746B0A730502B04A1569E507
2E01C26424F5FDE3731C61F71B51E44DD2570C1B9020129BFDD96904B7F843C2506CFB1DCB8C
5F362425EFD20061277EDE6F7F587AB40ACD9D64FFEE4DCABE8E0DAC925EF636C6EE2DAFD640
B3C05CA8BA3E0A1F10B57B3E73241ACA7CBF0F888E1FBF1A7039C20D641BB183BD6C451F0B72
33ECCCD2C17C45BE5D880CABC11C763F5D97135F322D81F7560E51F0EB90EBF9122BAC1D5ADE
C39EA1FD8E7D6476B1980E4C2F8E06573D4825BD182F485F56A1E1189F14FAC45711FA1549C1
A5973FCD328F50E4D6563D5A1E869728397F6DAE520AB8C6A50759469EA5F8BC846D9E5D2CD1
F561B160792EB7BD1E9A34BB11318A91BEF506FD5108AD9EE611889F99E78DF01D0BB9FDF01D
010EF2A53D1518AEBE00A930B11DEAE4505BC2F7FE07C8323CA3F5B28459FF91195E611C9CFF
5D74761CCFD186420470A5E9F4F17823CE457C5E683112DEA7DA9A2FF466F630F199BF6E4BF3
3B32A3949F2C4316FC238CE6FB4C206D21E2A25AFE2E95AE04AAEAC6773420966CF448DB3E42
1F40ABABF86F3881CD9EEB6E95C7F5761114E27BF12D717AECA2B8F2C5C895D18028B26352F7
A51B7DDD9C4A44F82B270B453B4D1A7986AC1529301C091C38AB06C802E09AF4972C18CB7542
16F615A0BB81736D7177C8B8DE4E69503405A417F06AC56615243C3829CE43A4A463F22E939A
9FA40866F54056862A647F6452D2A4A2049B990FD72F97A2091201C6648ED968D3DCD86EA3A7
FD64FBB09E02EED37DA03DEDF95F9203DC98350479C4E0C8375547C2F40E04AD9394A0269287
FE92804810228945DD1B2DA7C0317C77772EC72A8959A746AFD5A76E3953A098B04DD9B25C9E
FF457846F4C0EE304A4FD5DFEDED3130DDFFEC042F2BFEA6C59CCA7C366C89CD96D6984D85BE
FE42BCDE78D5E2CA34EBD362E5755A6EDFE7EA9AA03BBDBDBC7F5DAE59CFD5ADB9780CBA062B
10DFDE111A2AC1AF1582527848E47F88E2D87B499D3BF14C56BAA1FCFA4E6AF8EAA7877397A3
AA6D8BEF55770FC45DC45A094049D144D809223DC4B4A98DEAD0A729AFAD4AC3C04EF2C8F70A
0E0187B0D69A4F972B64C345087F6B77C932131AEEA7C9844B7E51A30C314181428F4C613629
31A069A462168B82A54B010D15DA6C85DF863D18D101280A786CDAE1C7F67BA1FFF7E7073F01
63910BE47AC47FF1898949E393AECA6F3A5AACEF6173598BFB0F4DC56374CB5AF1EADA100712
4E92FF222581CCF8150B90B52078FB8E27E16268CC0B8A780CA46B530DD0E05BB465A0234154
A3151D9628ED99459C5AD24176B01BA55D9AEF48F090489E2D93FBD3B916F951C932E27DC61A
8112EC9943E4D0DB32E0F92FE775936C74E9E62A9D1A41FEC65E402F13402BF661119659EC3F
D84826018B4F4CC6FBB7A7385819F05E8B2FDFB3684F3905A849AEC9BDA45B7164374D00C28D
2BE519C9E253CEFC7DAB1807F90B58D4D6CE89E3AF72CA25B0C523895515658ED4E3E4A9AF0E
3C323405DE0ACC85D3642B002EB444CA69A38ED7EBFAE2EC1B2B043FF2ED130592973A81CC68
99E75440FE2706A9CB8D291E4D9EC29009E1351244BE34E09B0E085EAA647BD0861A1E9942B6
FC848E527DBAC887628AE3539994558676466554563D4C2E65C7CD5562613D1EDE0004F8D61F
FD8B06518A46D6A5C09BD4742D14618D95F3507923D323066688593486CD5140C1DE5509B5BC
C2A7B00F144B4049018006670FC4DE66935B6884DA39EF87B435D6DDD7A8894FBEA38B5ED717
8544A3D7D13598A43698CCC27B170A4F82A14A8B8909626C101972BC86E33959E97BFC366E2B
CACA0E43148BCAB457B26C6C7E6746A67126E1BAAC4D47FA29A3DCC4DC33CCF32D022375DA32
3EE7A17A5290E717C80D4AC06842943423B8FE749797FDF92A589969AC26B493B41170777061
775B613579C780D195030389CE8CC9D09F20A98B5DA20103A979575B6D5E3BC2F3E1E7AAC4A6
CC8F46FE871BB471758A9C27EEF4F15F6077FA9C8CDCADF6AC7A61C62D718121AE02595105E3
ED477405422CB32B20396CE3619684F725E44DFA47B48223BF4C60E4813A34DB00B0BE904E50
E5C91BC8C2269AAEA750334BC02CDDF2512CC6932AEC98EB3D5C92DE319AEFEE5ADB2076D7DA
6A7BFDBE12D31884B1C10E52591B16F8552CECF63C84F805D02AA162A6B51D0E7F1F5618E47F
279CE922F0648CD35B1E03827491190695096F93DE854246BAD576C518A4979EB30D2BABE688
958EB49410BA7A742CFFE71122125D07A9115C5F987F9302461774A7843C8B47D1451E8F2282
CE63033136A6C5459F728BE90EF0AD89ABDEE4955621A6BDAEB535B55E00BD699C42D4B20000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000

cleartomark
{restore}if


%%EndFont
%%BeginFont: CMMI8
%!PS-AdobeFont-1.0: CMMI8 003.002
%%Title: CMMI8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright:  (<http://www.ams.org>), with Reserved Font Name CMMI8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments

FontDirectory/CMMI8 known{/CMMI8 findfont dup/UniqueID known{dup
/UniqueID get 5087383 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI8 def
/FontBBox {-24 -250 1110 750 }readonly def
/UniqueID 5087383 def
/PaintType 0 def
/FontInfo 10 dict dup begin
 /version (003.002) readonly def
 /Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI8.) readonly def
 /FullName (CMMI8) readonly def
 /FamilyName (Computer Modern) readonly def
 /Weight (Medium) readonly def
 /ItalicAngle -14.04 def
 /isFixedPitch false def
 /UnderlinePosition -100 def
 /UnderlineThickness 50 def
 /ascent 750 def
end readonly def
/Encoding 256 array
 0 1 255 { 1 index exch /.notdef put} for
dup 0 /Gamma put
dup 1 /Delta put
dup 2 /Theta put
dup 3 /Lambda put
dup 4 /Xi put
dup 5 /Pi put
dup 6 /Sigma put
dup 7 /Upsilon put
dup 8 /Phi put
dup 9 /Psi put
dup 10 /Omega put
dup 11 /alpha put
dup 12 /beta put
dup 13 /gamma put
dup 14 /delta put
dup 15 /epsilon1 put
dup 16 /zeta put
dup 17 /eta put
dup 18 /theta put
dup 19 /iota put
dup 20 /kappa put
dup 21 /lambda put
dup 22 /mu put
dup 23 /nu put
dup 24 /xi put
dup 25 /pi put
dup 26 /rho put
dup 27 /sigma put
dup 28 /tau put
dup 29 /upsilon put
dup 30 /phi put
dup 31 /chi put
dup 32 /psi put
dup 33 /omega put
dup 34 /epsilon put
dup 35 /theta1 put
dup 36 /pi1 put
dup 37 /rho1 put
dup 38 /sigma1 put
dup 39 /phi1 put
dup 40 /arrowlefttophalf put
dup 41 /arrowleftbothalf put
dup 42 /arrowrighttophalf put
dup 43 /arrowrightbothalf put
dup 44 /arrowhookleft put
dup 45 /arrowhookright put
dup 46 /triangleright put
dup 47 /triangleleft put
dup 48 /zerooldstyle put
dup 49 /oneoldstyle put
dup 50 /twooldstyle put
dup 51 /threeoldstyle put
dup 52 /fouroldstyle put
dup 53 /fiveoldstyle put
dup 54 /sixoldstyle put
dup 55 /sevenoldstyle put
dup 56 /eightoldstyle put
dup 57 /nineoldstyle put
dup 58 /period put
dup 59 /comma put
dup 60 /less put
dup 61 /slash put
dup 62 /greater put
dup 63 /star put
dup 64 /partialdiff put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /flat put
dup 92 /natural put
dup 93 /sharp put
dup 94 /slurbelow put
dup 95 /slurabove put
dup 96 /lscript put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /dotlessi put
dup 124 /dotlessj put
dup 125 /weierstrass put
dup 126 /vector put
dup 127 /tie put
dup 128 /psi put
dup 160 /space put
dup 161 /Gamma put
dup 162 /Delta put
dup 163 /Theta put
dup 164 /Lambda put
dup 165 /Xi put
dup 166 /Pi put
dup 167 /Sigma put
dup 168 /Upsilon put
dup 169 /Phi put
dup 170 /Psi put
dup 173 /Omega put
dup 174 /alpha put
dup 175 /beta put
dup 176 /gamma put
dup 177 /delta put
dup 178 /epsilon1 put
dup 179 /zeta put
dup 180 /eta put
dup 181 /theta put
dup 182 /iota put
dup 183 /kappa put
dup 184 /lambda put
dup 185 /mu put
dup 186 /nu put
dup 187 /xi put
dup 188 /pi put
dup 189 /rho put
dup 190 /sigma put
dup 191 /tau put
dup 192 /upsilon put
dup 193 /phi put
dup 194 /chi put
dup 195 /psi put
dup 196 /tie put
readonly def
currentdict end
currentfile eexec

D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C545D25FE19253
9D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB47934F62D1F46E8671F6290D6
FFF601D4937BF71C22D60FB800A15796421E3AA772C500501D8B10C0093F6467C553250F7C27
B2C3D893772614A846374A85BC4EBEC0B0A89C4C161C3956ECE25274B962C854E535F418279F
E26D8F83E38C5C89974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F024
867411453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBA9B440A6DD72BF897084C90
6B05FAD969086ED21AF0AA1471613182B26117D7494DD9F9270EF3ED8DA4D957225F75D06023
7B6DAAD5A0AE3E702B3D1C437835B93B8AF1F9E7D966E739CF3AD5E256F90286A34069E5BB41
22F94F18F3485658D0D25B938522A8798215A417CA2CBD20F71C5C5FCDE21EEA7BB27876D93B
A667868A419287FE59BCF538980597DBBA743DBBDBEBC61E3286DA7977833DC8BFC5E52FF5DF
5EFD9A92D070EB769E31E760A50FDE012DC0057835E8B9B046FCC83F1A0C40326AFB4E3A0CC3
BFA35FCC64E32854F32EB7DF10A19F95830136BBB8139DE1663B7FD7BAC3F9964D303D4235C3
C6B4165B66321E4EAC9FE3C023919FB5AF90213AB8CD67F43AF2B5754DBD33F46D66881BF047
E19A8413E9B75F6CA2E411ABA3AC218E83243AB769545688BB11C96D144E31B8B1D3C06E94CC
4E0CA93E8AC215264E7B8C0B6A8B0A8EAD7DD22C978F30353CCCD8835064F3B30B573862B9F6
F1BB4F9F0EDE4349D47F002E0126BA5B28A1E973729C67A9C6EB6420FEAA18CFC71EBBED657A
C70A29F6FE28E1911EAD4E5FCE01F01553E49DBAF680D28E03C219FB378B7B185F33D4600360
AE9BAB21EB320A53838687730E1FA9B864BB874B1C23A1D0EB0911D4862455B2CAC2D26FF4DE
E1790712627E288D2BA460988B27A67DD7DE61E16D7269771E1B9D34A7648B7F763FAF32337B
EB5DFAEE98C7BD077B8D166DFB1D304082B1329BAB5A3F2B28AFB91643995CF078E2F621AEEE
EB34BD429A9086EBC1C72B8BC1C64D53D5A3F6D45E6B0A43FB098BD06D342DB86EEE5D05C450
0CC41D49A4962B9DC51E6BCD91AC03D6BE5E553CDA72D202CEA7AF493593D127CC518769F82F
035BC86DCE69FBBAAC96BB78CE6684EF598F25E1C6A31D3F28C37E02E0F468D9BDDB2F728157
0C919A7E5D6A22E711EB29E2BA33CB1A13FFCFB5EE60B61FFD8F866A7DC7DCCB662FC427EE83
2A4080BDB420DEC645001D884279A089A0C5136A279C307E18F8540416EF50587ADAB45513C4
667F5E4EF1739242C7AF81D11089F7F62B3AFFA74B4AC2D124523FA915B8A66DBFAC8DACF547
0462BA0DA2A712E265F9C842411C0CE6A08C84EB696A3FEC3ABFE555382DDED81622F1FE0DE0
E5A6063014045B8C69A534300FC41F0BE40092FC6D0F9E5D34DFF0C426931B3F47A9A4CE01C3
1784E7BED780C2640D818A8B28EA5874E76E070B12A648ED4101C378A134C6E33709A0B8EDEB
680B3BF2BEE3BB9AF99F45A782E6BA676DD2454F30BBF4EE1DB06E5E4313C21C68B8026003DF
667F6EE572DAA19217BE5EE31DB62B127412A09122DC0A9C0EDD96A0993570877527593D2E91
2770758341C74BBDCED80EAD5C98952EEF411427B9F65DB133417604A367344E486C0BA25EFE
E39FFDCDE57C803ABA1E3866F02E724DD627C296965ED85E96B095875FA363A99CAD79019785
CE9FF9F659B9158A174666A4AEFF45B5B243550C9293F0C139AB065C9B2AF19AC0BCAF65AA7D
58B5F24FA7C33A137881D3A7867CE9C0606F46435CB688D206BF9493B500AAD7105895368B95
BA4425333C1F242885E87CA78CB97B7E81F218F823F2AF84B9EAA4AFB3A51CBC49E9CB381E29
FB8CFFF3034EF1C722503F3C9D9646A585D6AFD7ED0A7B8D559F461CD4E515930517044D0B4A
D4AC3A4D3B72023EE85A8EAE09BC0D1BBF2E7859E9FC6CB284554B3B4A5528E82269BFADA90B
A4575BE70FDF15617DB098A2D0EF645C51A66D93ED6D5CEBDD3D4FD065907643C27E144FC89D
ED5ED10D01C1E124614B52CD092612E1969763D4A274384346404C7C15074A418DA629D1123D
E6791B056CC9C0A3EC537C509FCC8B70E698B0E76C1629828F6329A71EB59CEF49064774FFE9
87F909979FEC183A62BF1E69D3BDD8086F77500EA942EE4C193B4CB3E11A7C5A8E3697F2BB7D
DF5E1B78AD4BB17A60ACF255A59B2D7ED18F53A4D5796D826263EE3E53ACD120790418B0B4EB
0AF786D312D7C7C4426C5904C3A7577A643BCCE7D18AA14C37603F7BAF11DD21BB53D044A4B6
159A342550EEC56C8E664A843B9DA091F88ACAF0EBC75BD51D70483121E4151154EEA8807077
8CF7663E5AC0038AEFA78C9C21F9DE964C93272D5FF2A55679832992C51F6A3D8523085DBC98
18DDEDF60B4E84E5AE6E770EB2020E8F5DBDB6F00A170E635BD34CEE46DA79ADB08EC9D0268F
38B5E89CC46884F9D73D939BD1D3EBD890BEF71F04140A1C08C128955EF0BD2C3353D6DDF20B
DF75A2B0F846EDA4C3F5EC44CBB7F95EC85EDE7301D8CE9184FD69BAED86CE555F0A2CA62C51
B90A2F4054F4EE75956DE6B4AC76F93D8B1618B5380825BF5183CBA93E46A6377BC81CDEA928
FB9793F8619AD2B800EDD88D4394AA582700EB8B0F7E337C60346E7B274CE276F6176D29BA9E
E1E2530E42AC119F883F51C39D68E4E10210B7EAF1B09532194B3C5A9C1475F56E08BB040584
76617A9D385717F0935FDB33915A70AD89B46B2A8B5AC5FA0269D55ECE06B8527D8094A372B5
7A8527AD9B5E1AB061407210D103FCCAD69CC61EBC0388AA514E77034E8E63EFB9C26FC4C6FD
0C711C9D22CCF1D7F1D73A8A955D22163E5A7D6C2EF097476C7F0430DD267AD2A4354B464840
FDDC5236DD8CE5BAC0BC742F5D0CD3635E3915E88A3D12C698ECFA7F82AF1A06B9B4E556D744
01034059D15527EFD05B4AA40B0C82C7436FDA71E7C94406363B632072CB3A3B5E5318044FC2
959B4552661391367798A23B222E94901C62D3059A9755DC866D2BAAA4F1D64D0A8A70A74F11
18DCAC1D05FD7B1FBA47D776AFE8CD614AAA3AB2CE279E92893518E1BA3E50A815C97D7180E8
CCF149EE977D5C4C291F92BB58698149D30510AB6C7A09BFDDF236F33F12E5C68F9E3E334C62
A170DC3514E4C48858598CCCA7DD021A822D1BB18BE4863DAFEAD512AE054B6A21691701E975
4EB3A37452B3F24B7071EC6A74C73ABAFF68B6E9ACD16305E96E2AFBAAC487F7CC293AD5CCDB
CBFA95A0A0BE6AA2B708A156918B5E019207394C913729F372EEDBCFCB77A5A9BD8FF100E140
C71B0A531D77A68A161667657A80F6411E661BBC400FA2D040A306DEB216C5239B74E293A4C6
CA9BE312B877897E7F593A826614DEB7B588F76986FA7F38A22ED99E4F46DE910871EDD1BD6D
849761FBBB0923AEA7BCF6879B8900028E30EE49C18B5E4B391827A069358FB9469EC9A11ECB
C676E8F44A31FEBC79CC82193A04EE59FB0A82663625EC3FB0EB44C625E10B19D65ED70518E9
C00680595B04BA3311A715C9D975BB59D663711D1893B95239F1FBC1B43B3FE89E1A2EC02F35
27AD8E633587FC7F5C8642F0BF7CFFB610166C187AA490D94668615C3E0AC68B8C38749E89E8
1326D10566B1C323605B935752E8EFB1ABE77A120C343586EB52E1EC2348134094F3419BD8FB
52F3BC76CDBCA032C061689A8BE68009DBFD963F7C719EA084ADB78A12E93116CB344E3719E9
D4E066A18D63656F6A8B6EF52EBFFD5C3B1C303BF896055B896A596707A113CF5AB4D8A1732C
885B5D2BE98E8949EF163E08D2D9FB537041E4B345C1C2A262FDA6F6B2E6F3A8BFD53492365D
856788C43D37507FD6F867B55DBC8E3663AFB662362861AFE8B3CC5D066B429461A118D17E91
E877DE062CD3780B82371CDA98C0C8EB8D3EC9421438DE852AC7AE342C8726177F075F9A9DBD
2A59388138440AD3CF13E4907E459F739792D9B03426A08F41BB476EF28697DBA87BB4AC39DB
38D73760506B3D73AACB55836F8FFAB48AA9ACCC08879253BDF8F8B2D47615345E182863A497
015483A1703132DF7894346DD628332BFE7B20BBE6211D8B3A4D0A5465F7BC32FEF7A5262409
6F8FFC4A492014D9D9D1EC997865A66A3BB8BD4847E9D5E2B111193A1FB4772182DB32DBA892
4F75C7A52A0DA38EA8833CC41AA40FCE9EA018FE34F65008EEB6972EAC2CEC537461E6E1B161
1622F368A1A1241CCAD2184AD832016BC627E5E58D9148D73F7CF7A9E37F0C8F1DF7099F75E7
81EFDE03BE799F668D99D551AC50EC514093E24C431D88199D562B7632A2546B14CF1C193FCC
4422010360DD647F3228D414760F53F0583629CFBCCAF821B786AC580344A661EC9DCDA18DC1
B7FA3F108E8262848E7DE08832DF74262B0CAF010D3F6C60592A33BF3FF9DE886B8BB909362C
27B8FA49CD155780E03E34CBF67907D36E696DB8A19F6B1E5D361C0952BA1F09681CD1F4D527
9DB6033C067E844F8625553E9729D477B71CEC655BA53B2A29462BEE213D3FA9E6A2A1EB292B
4EBD6E040BB2FDD4EBA9B3ECC1B065C8E8182BF6C161187BBBACE178EF9119C9221BC52897D3
4441AF441D4F97AF3DC4BE3C019AC623CA73C33B66CED3079E899480FD389AD6C53AA1E72948
9C0F4F48DC9460B32C965930793EAA5E7BE298987DC5B8E4A043341BE14322783202C94E763F
F47CADEB8885E8D3A27EB118A708C532A912FBE10F9219CC3E89FFD2621F012BA2A50D3B32C3
8C0EA5AEF30796A54DF5DEFAD6A0522847E7A6428103163F6BAE666ADF5CBE1C85308AD051EE
D2FCB6F838DF49B5287DF8A6207D5084791EB2D88E5C011335FD149BB239F965A10EDA5F00E6
AF0D4DDB42D6C4E8169B7361D0182B983EE1FFDAA508F54B992ABB9CC4A97735849C368CA03E
82CEDD8A80310A9E58C415817EBB007656A626A5EC55766DC242854F06761634F2404D369A0E
4D5038E9A2DC1769427C08BAEABDC3263B2152FEF9E5FEDEB17198055D7CE538CB67289B2B71
63FD9A1A4205147CB25C45202B8EB3216DFBE6E4AD4FEA2EFD4199F73C24380617B96724B7F1
B82B92E31603795063E855C0871663E74A4DFF81EC4C57E18DAFEBC839A2F7F0EA56A29BF414
F5221E056C121FBF9F464FCF4E4C9AED12A786AA9CEB188586BF5DB842098F009095349E0067
4B01F297D3F03E0C3002C537E944B50CA86CF19A77D065280A60AB636C3B41323AA092D3AF23
75493D1B27644C93337B5641A26418EDBCD16CD72A5AAD366021918A08AAF433CD83ED491FFE
E09594E7F0A8090DBD20796EDABC1C8E279ABB6CB8B79C28EF5CA567D300F01BF988284D9BDF
97E031CD7B5DFEF22F53031B23D70727B9415D7CEDF5A3F6D562CE8381EA3659C8579A6D49D9
00E9A64E70801B991C6A35162AC359B05C18CF2E12520A617099F29A9394E7F13DB7404F9C5A
99E28F5FA7A5F7D7880B297C2713EB6F8E3F0D07A47E29BC4D7B203BB43472D497FDD1A5D744
0DCEBE901758373BD7515E481E303F7E3D04C1CCCA302DB19AB6FDC13C288D5DB62F528DE9B7
9B148C8570471DE0BD343CD3D65140A03394451E9DDDA940316D79CAF11E348F678B9938DCCB
9068445033825CADB0A6E571AF9E433B3AFB42C1CF77D03532EDF7495EEC82EB69FE4ED39B1B
892ED99EA53BD9509A601CCBB9559F3E2426B51324E671D8F5E27F474BC660D02DD6CEE8E163
2E17C39B0C75B375CADF1196B3F4BE77088CA2DD04A0621C077EF829B5B434838BA8EF2955F5
270264C923E70890523928CF5BB04BE0B6004D9405B6F41C31530877C6F2FA13083213A55ACA
D2E7DEB48305FA536FA532C35E8B1650C6A13ED8EC5315729B7B1E5A3F589D04678A1F4FED16
5923D2A030C99D0490F5920FC1FE15AC12F629B5844ADBF13B02CF604093C552FA8B197CC7E3
8F8AC442E35578FBC72D0EF6D939A20C5764132828086D71F223DD3CAE1F65E9947BB67EE960
80875B4F1F81AA69D4118D9BB8614C2BA0387352EB5F4EEB869B27C4EAD5512F30D7CDF9D28D
FB09E6279D07D7F96D5EE2829351E6100BBD663C28EC6398D2C6D16F3C881FC71ED26FCCA12D
840D5483CF10B5D5AD19B4D4FD60B462C1A701C59456695F8F82D73C147B6F8875B23BDEBE67
4ECEA3A8B98C41B753B77A6ABA8AB6C96ED2E831C93488ACA8B4BF84AC06F6340D562530D0D5
FFA0D54219CD706BD612A5D0396C19EED4E91ABCE6F2F1663DED489EE088CEBCD7BFBA33C99F
5C97CF4F2D10DD429C791E51277483E74CDF60D9FAF66702610F22D1B4ED71D2DC470C84A46A
86BC7B71430A5388C2F2D0F54DACA44AAE4D1D0BE527A595800A9037FE7D670FFBEEFC134BB9
2F6027314A4FE819BC5C1EF52D4D598D798F02B71188B892FE8CA9564DE0517E93A9E9EE3896
9F8141153E0E64DF7BCE4CFEBDB61BF9DB1F106BEB9C8F1A3C3B83CA393EFCF0E35A4A48226C
4B9B541B22ED2860366AFB10A754D35AF394E9308F9E50AD37CFC0AFF6D51E60903C5C300B2B
4C791C2CCA98840A2985970194BEEEF7AAF324794EA1568D7859A80D43F1C4F38EAC08C6B3E0
3F1E4A033A9A33F07D6903F8035B3632FA609A28A6D156E147CFB892553B3ACF9B4D43F99118
8F7917B37AEFED17471B37EE30EA578EC8342214A9D7529C5A97DE061CF9D62DD2059BDBD4DC
B92171D6DCEF294F7A328B2457F5A3D74F47786C6816B0AD065289970DF4652BC565759CD7F6
0673674FFF8864E289301237A2248B8AE4C5EC5FED526C0F728866F3490DC95E62A0BCA2D74F
F5E2F4EF96F38AC72A0206490B78E430D710DCA080B1E7387270A7A4F7573264283F085FCCFD
FD6C30026AA278EF59F7A246677023A964E9BBAB13B32CB30B4E3618EA0FF5AF04D928391D9E
67C43E56BE00F5C0CFA5F6C0964BEA165ADB2D4B74B5EC2AD82569A62AADEC8F346021E68B0B
F6E6BBA2407F634AEDCDADA412D43A5C4B2F2135F3E9E5E8D65CFD43F4E3DA8E525AF550E0FC
DC10395C129B037B2A6DAC777EFD5C9DAD4BFC9A861449C08D3DC7F1771FC172752741DF705F
389BE2B256EC80A43BF379FA28EF7230D36286FC3F0667F21B1EB7941507C13CB939D828BC8F
2760D580DF01A7CA14118076C6FCAE37989FD29CBA8E935DAD8655F631EA6560EC5AE5249B7D
B86A77F55F5922B6A2AE94AB6E199A88D457B54ED645E57E792DFB122B399F3A9584939BA3EB
118A9B9D378BA19526D351DCF0CE300C28D895C6DB952DC353FF2344FA603EF209A8905EF34D
3AD863B185CBC3A23F6BAEBF4DE2DA1E4DA5C8A55C9E5C8CAFE77C6B0FAD41754823DAC73672
BC1FD755058E9F8B35E97286968BA9C375F25DF405C6C6D712AF224E3AA2E400BB009DF45732
0B2C13ACEF8FF422D20B83675E041C442E770F7A89AF141B0F2D7C0991468578750D4CA4966B
53C965DFB06C10A81B5A24C6D3309F921DB766C55BED2B43ED1BC655AA128DD54F8CF46D9DD4
C8D7EB18E7A55B15FE42E39574F1E5C8411EDC9EDBA14B1E7AD8A2E956445CF2F2F427194A0F
EC78844ADE29D7A43F7E0922228D6F3255D59FD7F8660902A6C760733006364285AD08B537B0
FC98B8C66F47FF23A922B4A5264274ABF2CB166509B81EF9837EBC028B7C86B627B9AE0BD903
8F567CC61879195B7F92DD22672708917359D77C784766FFA6D2E9B2F171694679E54A3C0449
BACFD8B19DAB8DF9D4B88541259C8946E0B5D772E8DF9173E32D5A80C571E15CD465F7CA1DA0
7383FA0D85E2472256BB99967897E536D47EA366FBBC2C9105B74340400777628742820E7107
B69B6FDA68304A40C91A7A1FA6BA0B59619EBE00DF91C6F3D21FBBAAD08A3B305FBEE1ABA791
C56A80EE7389CAF1DABBA278F11BAFA2CFDE8A2054E58AB806D9727F6A3F7C7EBE4EFE63F980
74C2F7CFD63062E29901EF4E3D2D5E0BAD4BE96382D1C295FFF3DA9644FF0D2941614936BCF4
33D4FF6D41216B06B756BACEB5FC5454C20F0377B58E32C7ECB42416992209A500481779055E
2894626EECEAA23098ACCD6F94B4645DF6C9DFCBB2613F06B1BD577E38DE7C917F97CA8330C4
611B33767D297E4EFE50860BFD70F98DD9B0F3FE5343BE21BEBF67154248AEB3A2D306A5B302
105669122D86E83BE4F04FFF51A10A8544B4D4E849135EC5E3F9AB542EBBDFC18067564E485E
414DE0A00C6B7E876560A69AB23AE66B121EF55B3CE185C2DCEBF14A3734B89A07BC286839F8
70508375128EC520FD4CB26E862240ACECB88BD6B26FDBD3AA05BDD32CD10E888AA07D76BE16
7742D0BD0E131BE6E9DB97090771F86CE98994E14DAA311B6E3CEF7722552C553158D9D79C59
80AB15E5B768FD3EA7CC12894CDF1EBF3A68DEF3D4CF88427A21DA520E916FC8C7AA53B4A323
4F19C7F77F4C4DFC2C602E2BC581122F3123AB7018983967F5D85C66278F9E3E3CDEDDFB173F
DE86411043257CB4DB5E91D2F5F7673C9217F889C1DD570E2032C7D76EFA5908261600AC74BE
E665F8ED3BB0A56733C69E44668477DB93DED0497E5760F68BFFF7BE314624D919C9A3BEBE8E
A3CAC3667E2ED796A856AE7B5789A4491A9FE3A574F1EA819C313B3A170CEE768BA5B6BD6060
2D4426F9EABE860AA83CB86023E9EF9809A941E29F521EFB419E6EAE9E9B83AB05A754E69FC2
3EA7D3619865A142EC18161428F501106D57E19EDD785F633B43655323922FC7110EBB1B7BEE
6DF598FA665ECD389540A35545736930D015C8FA8ECEF5ABAA538308D4B07A9731D947C95540
47342865FACCA912E2D16295635A7636ABFA0E9829C0BEB1460C9D410EF7BB49F3EA6F565857
B248E738239C43CDC215A1CD4717D18ABD3F75942DB475D3F96691DC77B79E232ED41737C237
A6CB02C881916769E1AB1C759B36C8CAD1BD60E741690187E8260BDF4AB0FE5B6EDDDD21ACC3
C66954ECE2409B5E76A8A3E613E53F024F0854D2460673185ED4B14D0D245AA34D0F5A3865DE
F7727025077F623D24A075AC5C4BA0302D4BC64C19A374D2E217274A1FF2085EA08114A326A7
C3A75BCC275FA724B96E2A497ACA4705EF561027B629689CD299CBEFB1630FE4E17EDD58CEA1
F17C9DBDC9E5137D5412EC07A1F8B8A67390223FCCF562BEA08450135201FB7266B89E140917
DC752F68C759730DC6D843A1D5660619E0EE4B299DF09D160A1AA96E7CAC6246DC3E8E1147AC
67B33A954FEBF1A037927D6F95A2097AFAD44C57F7FFEC85EA99B795090934D82D1D7A3985FB
6207310544AFE8B99ABDEDED565B1CB68B11C0E04C3B0EFF812E407FCA1E395C95878AB0E189
4258976DA888B589334758134831018AEE6B78144CD5B975C1B9AC2E22F3DC7494B9994FE997
648C1D86C62491B589CC74E00D95244480AF698A66D681FDCCD5A172879DCB90629A398E79A5
16F256F4EA5F1EE8B28A82AA924F5FA669B1B39468F3EC7D17EB06B7B9823A7678C88D5435A9
B74835FA23032DD3579E858AD8A39ED3A90D44AF449DEB24FB6FBDAE56ACCB50509D53793F38
92648A00B68BE2E76D83D4B609F6AF93914480F548DC7A40DE4B0C781D5776EA318FB3DF6A1F
763504011D4B7B332E904266FCB2B670C14E26BB9EE1C34253ECADE5058D801E4F260E84DCCA
F516EC3277E9A6337290FCF2725E538BB3C48E78B84CD9067C54B55EB1113E7095ED35F95BDE
7739120C06BA3D43A1DDA569B496347557A29D53A630A1952541A78B6013D0EBC1717EABBCE2
212649C4704F83C05A867BB012FB467875B3C81ACEE3365434D839DADBC63803515FB4424A46
DEEE817E797069EDAD3602AD42158916D8C38D5B03161B60E96AB69B74FD5DE8EB45313E1AFE
0DF3B16CE0EA5BBB8B0E4D3E083F1EB603FA14E63A2347647FBCC5DE1124958C80BB637DD6FD
8A61D92D5F2488E505BC710837BB99939C0D5C2BF0A94BB76187ED92B0650C24448F134B4E32
D86FEE388CABB0D79AB4318CD562864397AFF7D2ECE03AEDE0113498BFFF775911E82A833376
CE0D42E92506899AB15C6BC552054D2F2B6B637222743FF2B4D911924E15AD49871484B0FEDD
F8D9B99611D47DCFBFFF09643777593CF5EC558E19DFDFD9BDD7AAD3453945189BD8A3B135FE
C66258E16D620553F66FFD9B7C84D0D53970C11DEF9E4DD4C75319A80CD5B1EB9BC2BDD68A17
91DCE48FE9B6117C9EF66961066A57401C179F9C07244A4E3799908FEA3AE2278C86FB350BE1
DE41DE74E1228B4CA794636D2B9D2091C1EC14EAF7407551D39B19CD49CA8002D30D237142EA
33886840C2D55686358B11D260B2B54720CE3554B9F3719AA3F4FF12CCD9DD9C1DFA44903719
8C4D49C87FF2680C8A0559F4846A5C47F7B8E8EB3835AF4D355AC2D650AE1260CF4AC7EBE753
D02FA7B5FE814EE9C4A6982C54536089D4411FFAFF46AC2C547D8A1F41BF22A2A2A2DEE51A1F
872E409FD1491EACC63190A47964E3C5BC3BF3267AC4306805109C8276D6AEE58F61EA0F7AB1
B3413AE3650CA71B8312BA4147F38ADA08B61F5F4EB595668BE69E21878BC8B026515225B059
8711FAD5E57B54FFC89316E9BD4773374F052AE4618B52230182F20C7063575899363A2A0C6B
DB3DDE78EA71B8AAB813D96E8A44205A96E975192F9A78BD0A055AEA03CB72AE979438AC9141
18E6CDE466F9CB274F4AE05AAB8EB30A4D717C0645900476FFB68530178AF0431F373DF8E10A
DAFDDFEE713164F23E0A4B0BDF7C22B87864B71BE9FFB4403F60FE62B48FFEFF3EB4D1A0EB01
33AFA436C5CC7FB0F04FBB843F15C37AF3536DF2D63A19CE375F315ACB58420EDFC916F9382A
9F13166CAB1FB3094B0FF3FEC5BD351176989A7CD1D45B5CAC1CAC8316C3B6C9F93909A03785
652ABBC17CE47CF9F8AF4E8EC22DA5D8C99B6B4960CBFB65E76837B6C1BF799BD7923F0D62AF
F94649AD29A5CFA9609D02DFB72795D46902E620692139D10451E40C98857578F44F9A4F6D31
1E9D13CA3BAE922648D3A2B04DAD3362E68C1D259FCACDDF5CD76E8A3B1B2ECE370B9CAF0D51
46D76A0B493E07CD6689D57195CECE6D8DE29D1E55CCA4C7BA8060F5105ABCE8D6ECA14AC09C
829AF2A37B3A216B3AC1F8F242EA177F16EF94EC09AA96C8B5CE2D0199F8CBD52BFA35D06B5A
E936FBE57D9B1A5800C2A23707A4255A88E1596AB6B358CD40F61C3B1B18A82903246A2E990C
6E7D48BFAC7E51162A606EBCF17F2EDD6D9118937D7C55361DAF3B62F44389FD424785EFC81B
CE793E240B41A237AD8546A4FA04FA7E867D03CA25ADE2143FD0E4539752DE2603198CBAC0F4
A30EF636119F9BF344A96E152D709832F8A84A6B135EE4EA8237EF38086B98222EC0ABD27D1C
54D977F3551823672557C349A20525869D569DA66FE556747A218A4CD35CB6E307E648681138
F96396DAFEA2826472A28BB5394B5090C84FC05E396245A1FAEA5CB865D4132E27BE88D87BBB
C007CEBF69A18D1EB9C793E041C9CE04BED0AA7396BBF47FE7B6710C3B76DC04D6DEF6AD1CFB
E6005E257859E58A7796BE879108339E413603CDBBB6EB21A8DDC512E19D95DE278F78618CD6
0525ED9B48687FA60FE1D171A95496B9FF3900D8466F485D5520E6D1412B2A6D8D7E793F99D0
C76EA9A7E35F7B99F9B3EA328F33287B579180BEDFBFD263F20C0A5588613A6F5D55329129A2
056B7E872505B64D6E358EAFD812571E1482FE750830D7FBFF27D4DF9725432A1E755EEBB263
63CE1C6602715675B402F2B203F721CE2BA74EA410BF643596250DA8E2CB2D6323BBA5008C5A
5D6C775C5F6F7621FECC3CAA5347721D9BAC5A301191A89420513C0300478600592C2FF2715A
33769FC96680A7DF788AE67ED13C88D77680271A93818078272F2C541EFCF998478ADCD6744D
715446F0469F4170615B17217BE0EF56F30DCEA2A63A6AFCB1AD9F4760B7A5F718D1A019A4FE
C0068FE570B2F5CF2B39B1590B8114A10453E7E00D9934DE4CDF34A85D8B4DDCAD654C2AEB39
248DC5E15532F223084431D8B0A291387CE4EF5A71A06C7DA2CF8C4548DED9188825714769E4
A92D7AF9107B1ACF6BFE19858F1D9ED4689C5C62FC284D051491C3AF098CDEF9AD6FD1818636
89B2F2B842211215F7F7411FAEB078F328030059B4C3119B57E0E961880F408AE50EA0F84F7E
600A98CCF9030B7BCA883E1C69759B642656D95511D7C38CE426D17B8A1FE8117198E3B6DA08
00F7CE9CD5E7BCADB0C3BD00E85290E9DB2A9D79D279D9A940DF83A62790B18EE85C7DAEDE25
49089EAAE49778D7C0AF4C995EFAF04AB1EDC529136527B3E1F12B51CEEFC0EF1517F9F5D64E
8D5238F78A5A1C676E333198A374455C75E85E8CBFF6A34CBBE9AF23D6947CBB8D02BB9BD924
16D650AD7C688565616F7E4A745061FC20737ADC530BC4C02FA82646AFFC2ACD21B018B5FFF7
C461ABEAAAA5DC2A04258B49B9E4AD2D5278A472D2B5F163EB0CE0A46724F99F5F89C0482889
C544373169BAB927FAF7AF451C664B6EB7366EA9F2DCF0DEA442B17D26889F6BB334D998641D
70F2F539E57501C698195B8031CAFC002ADED2F88619F37B51DD94D57C9FBA4552710942CB4E
09EE8108C0ED633035E70934B9F970B7D7168E0AFF6E64B5E36B3EE7BBB94E1288FFC42EF9C8
9B5B4AF8A27277275B498CF4B00FDD3D022AE73FF71105FF7852655C47F7CB97BB5A74D1072F
F234A06CEEE66D9846A22919DE8AB9C529F6A497E48126C64D139CF9DE0BEFE488B6F3A246C1
8B99C626F6841E75D7CA5ED680057A7C162EB906BD3D093D93D44CF99402522A523ABAE6DA8B
C83E931CB08BF96435C287D281C986A1803B19E1D8B35EC2E6B2BB95361CECCE82E0144C17F7
4BACE7F4962F886834CE12F0F3E5436FA820650F5CF9E2D3FC425379D5BADDC2D92B4D0DE618
F5B886616FD6F934179E611DE2BD3B179ED251DA586CD7ED0C8A304376BC33FDCA06D4C447F9
D21E73430A0314CCC895902B6133C82E9F63BCEEA0D6B2C8A94D48BA74794D4432990F9AA72B
D918DF872D359F8ED67216FE1D978777237FFF91EA7CA8C480D6EEE737051C55625AD145C9B0
AEF420FFFE7099BECE79CEF11CE15393F11C982BFA053E98C6B7C3FDA6371DFADDAB6F99DD54
290A931B17ECC8E20D8F1337549184BB804FD9280B47BB65E477FEA627E2FC26255C042E6A64
3340E11788913BB31931E8D97B933EE0BB8B836852EF6D86F57E587823FC06272ACE98D5D34B
AC804F59A972BE92D8586CE85B82FF0F29196BA0A8FDA61B0EE3FE6C01370388AC2233639A8A
10709211357A4FEAD9DE513E0D6D14A398B65F94EB45BDCBC9D1F850BC68F48C1947FC5F404C
BC62A95D65E0121F2A66DF7E21B5B8396296E69FCA6E1F8520C9E6C34F1A3FE014BA30890D50
81C05E1015625BDD20E2A191334D45671EC87E207BF0B7FA76CF0FC92184B9B447848D5A5541
1C18BC46CE6E57BB540FE15F490EF6C26897637A0E7946AA8313C0F9C77266204AF421B2F7FB
6EB12C9B47C9855A629D6B6A6E83FE964E380ED0BCDC6ED700B39B62133CC189B7275EB8E1DF
257319A8AAAC0415B620A548AC00E57F0C05960162DB483894EFC51AF3B8D4EE82B2DE929CFB
67E33E0A6879F55E07C7699AE62E79E93FF61827C7B335D43ECF9CFE4797A0BB32555D8F47F6
1C487E29CC12A18214195A933D3C80AA89136CB703C237A81A8BD7CDD11FC7307778D37F9C3D
CABC830F6C8627B9DB9CFF6333D4A54C2E68221717B4C6BA39866910A6AA2921640B553BB346
BEA3FC8A7BBED5F91B5D2984D66B47719AC6243F797788294E575B712E7B53A6B2C3DF8197FB
4E36DCFBDDB1EBE022DDEE69C2D708A8A8322AF0BA41E51756EE0BD6BD5423B56613CA12644A
DCB3BE5669B979A8829B59A6558CCCEABE7DD95AF76D2C374B6F647F9A4452F9A7ADF2103165
81F204A6C63654176AB92ACD3054432F59EFD63549256B93CE54880846F75BB5F84B460F83B7
B17BF089BC37B5E5A869E3B2155527849E9D665978D3FD6FA6E49F341AAC1856BB47B90068DF
49C9AE0668566F535C1BCFC904616D299345BD7C5CDCC929BCECCBCA99F34C228D68DCE53866
676A80BE008D1484C97D74D663412655151ABFCF8876CE94C9A8456E261201EA59BF42CB69C4
E2CA3211B319175A8F4FDD4CE2E2EB14C97546763DB16642F537DDFBBD77E412AF498C61862E
27CEE067D695E350CE7EEDE63755CD50AB0A2406BCCD282AACCBE1E4DBEC9531933261A3D9CF
248FDFEEF0F3FFE2105FAB8036152FB6985528FEFD16722078E688C24E9F7350EF4A96C7AA66
E4BA378A7783DD445875C4476B73D6EA579ABC18352BEBC1FB2363886DA7006EB5C038A50E4D
721C6F31CEABEB5608116C9960A1981AD53C41554DF33DB3711A05DD6810362F3127614CCF2A
9BDDD8CD1D2B0AA621330D58C70664C3E5ECDBCADD66CED742C84052802B3A37DFEBF88B1C69
82C5355351F8D003C747DA64F0BC6140596D899E86A09E5164FAB4E923ABADEE1252F54D5100
8A42F75E3A2B30CB9CE51D484F7E497699F7036A3C085E0D6E9E11ADE94188E4CD211379C567
87FDCB9C2861585AA367B7C5579159E68A7603D1CD98A3CD984C365A0E0A4D9B01A65CF8DC76
AC8E97B4A6321ABA81D300384FE63468AA41D3ACBD9E2E2EC890F84B19479BCE8E37532BB9CA
F50BD1C74476083399B7A32D083F0A8AC3A30372C91F188ABBA2E7CA1119D5A85F2A49247D28
485CBBB513C3D494F310CD9055AA14A67322DA65AAD350DE4060D78416B2DB63EEDE914FC635
16AC7D1F4B02D7D0B5AC32E2755E0320D475D21F3BF0A048036961702BA25968E204F1E95DE9
766DD04E4FC4F159E4FA4F958B3163AFCAF9102A25E5F08E86E9F90A0D864DB442AE483ED16E
39E4AEBD31CAF3AB54DFCFA3411A0171F7E0250FD50D4EA408A4F7A0913C9569174AC16E7309
E26B61D4F90784190BC88E0ECD57A8F9D94AA172BBBB263D987CD0F105B4D6711C7375D5B2DF
5EBCE142ACF383B5949714555DD6FEC3C1050284A4C87D9A51DA494668C98ED3EBE399304F22
B4BC7CE5BD232BC8CB3FD26B8AA815BD114E9469846B2C76A74535BD2861294BF1D84251EAD2
C227B86CC5EF3F79E7D5CD23B4616395403AB4AC26E9857BBD4694D6FA538A638BB947137A18
6583214E8A6F15C83D130985E452B93B6E53F1844FBD2A5CEC913F8E8A9A3A04906996891575
4263C44637E0DAC34E7EBE28F373D09BD4514F26FF71310A8A3E0CD846BCB4AC17C220DDF8FF
9FE70673C1FDF51F2850B354874CC183BDC1FC4A13FBB9FD66B40380E348B28505BD07F98101
7A8B2F6921F34C0D2CA5AD763DCAB4713C85148B5049CBA0F9ABDCDC9357FEA489603A9D231A
CB3E5D16F1F3288AA853CBC4BE5D5331CB9CA3F8BD68F90F63719E4D141CC20D2798FC996224
D9CD6A365376FC610C27F44D1C7D2C4B15AFFC1AC95A8C74FC3E01FF2F3802B362C0C780E19C
91E8C49CAD25CF8E5F33AD7485A40BC65121638CB029E594E149EFE15A09FE85E835DE458080
A6E1EBC7B60D9148C973F852AB8D876917B9C8A149F76658A68702890782BDE4BFBB2AA2DECE
2D99A792CB91876649E079BA4A6B4DF85D4DCE5F28A35521527D0E99C9D1947606880B1E3F91
DD98CE5142CF2C835348C2DFAEFF4A0B6ADBE7D8F8F414FE3DE073216810BAF4C0F106935EEB
6C87F9783F3D033D590EEC97ED9EDA7B31CBC1EF3CDE135BD31BDF03028B3B2859A94456BBCD
E51F704C6B726C3E5AC238ADEBCE15C781F086B58D133DB503943986349EDA6C96871833C48A
ED739634CF54BD4948BCD8CC54741532241DDBB86C89BCBF5DA5210F7356ABEA7B5D7770E726
DD8FF989E8B62AD7C942BF869FCFA7033FD028C88B9D12A9C7FD216D9497FD6298088F2EF552
BD8DAD52C33FB0084DE3EA83AF35AC5E959BFA35E54F75E1EDF5C09D6A6B2E8B8E530E18F25F
D6AC3F6A954E1C8645DDB6F6122D0FBDE31F2CA272FF1B681130E572B7D3FF0222D5130F1818
E3B7519F3574518A0783400E51C49AAAFA804143DC181C5766B5A033DB82ED974B3E85CB393C
93745B2813E62EBA228FEC23CE5BB03A1250548D117D74FDD46AFE84E8B778FDB13AD5EFC0A4
F26D799299FEF9DE033A1F1D814739CF1FEE0F4E6D81D721FE080BB16036FC998CF8A26A5456
EDD24890CE28E88054EDBE9DF693C19FB20076D13C47496B43C3F4AC7A9C046D169E3DF9AB6F
4ACEB098A630775B91815B5A90DB2A4F3B2943CA80BDDE9684C926DB09ED948F43CD95C9095A
136A5F5482CEB85EACC0998A1AC866CC9B5478A51695A5D49FA9871ACFAAEEC397C9CCB7EA2A
4B9732BC3C3341FEA4415F1EFF5B1C40EF391C3F4669C89D97227E27DD962B87E79E375202C6
335490076A43C82C91B92506BF55C062AB393611C14DB67172868EB0BFEB760A6077A388C80F
FD3ED8DE4E6E3772BCB94004FFCD679B2C28F33D1835130F1E54717BC5649B1E53F6D4230DC4
6CC14DC850AFF3A9BB6F1E534BE428D31C764FDD5FCD25106A2AF1475074BEDC7EE66CD21A98
9650A4853F99C7124F714225D18729ACE296F629023A4A66A9DD00717C5945247A1F9B442BF0
686BFBD668797696EFB67AB27CD8C4A88732267CF386CC9B6A3E25FBEC6CA4582D833C60D9C8
F885DF2AFEA7F40A66BB4240C6F98B58DAFD70E9692C7E71E79BE0EA1CEF25F3619A956E6835
17EE867DADB2C8E31B11938EDA15CA039701035B303E9D9CB4BEEED3A04CD8675B1A7E4FAA19
27503AE0F0C58E61097AC68F40B18516E452AE332529879782CE0112B23C38BE6D24D6CC876B
4833278EF6057F6D0F86148079D561A0EF31519CB7E37BC9DF583B20554CC3CE7EF509830AB5
EEAE9684F5B1538812A83FDBBB5A853C22522BC471763B20E7CE3612F63612F955394010CC2B
7C2B810EC744508D47539F455D35708EE5A5202CD2A5B3B5BB8E4B55579F6508945998785754
4D9DED45535816F7EBDB00EC17E06FAC142C0D880F53A68C897F6BA3AEBCB24969CFD22AE6AE
D28531CD2F4A413E92E9EEB2DCB0A872259031E7EF149175DE4E432AEB8316658DB3BB53EBAC
C8B44DC6F067576F34345A68C2B8ED904824C6F66293B51367F77B76E7972E89DA9399EADFA3
A7F75A266893CE1E95BA10BE0495830B1AE982037221E874106AA19307276581B66ED5BCF97A
EDEB09DFB0B95601D074AEF08D2F495EE67833BC392E73BB263437634C0EA2D32D1242679CCD
839BDFA7AD9D078BA56B0BB6DCCAC56571A55C3680DEFB57C50FDCB0FC967074554DDA3CF1FA
742A3B1F51B887BC8C65EBB90AE01855BE0744FBFD7F2E117CB23B0FBC8B811D8EA0602CBB4B
AE7985DF0A5B800771AEC2F99D7A4EC66644A6746AD23E5576606D5F679365394E9E0636D6BB
44BFA25E9FDB633F4983EF92141DC1C71A67F28F39D3CF5C06CADF2BD4E05147ADDE3F50EA6B
D2B117958B0A395F2FAA26993825DF2682281A6B95A887E66336DCCBD00A39EF855178562C9E
92738AE54DD6FDD0B68542886FA782E1953BFE4EE2AEA21F8FDEB59FFD6F4A8BFD189DD3C0C3
45BFFCC3B5177FF28EA539648113C456199A477BD929DCE489CF4A4C26DE0EF71062CF1B664C
3AF5E4767B4467865E64A8903055040D298F87F13FEAE895F452D2AFA9CC4F57348EDCD6F7E4
B44B78B8AFD38A51190D0CBF71250FECD9BA42D67D68F60FD13A7646E0D981F02DE812378161
3FF1D2F2DB1A0C806724C486A1FBF8875833B4AD8BFCB5794E407433712EB91694B9A41E555E
D395C742ADFDB931DA1007EC2E95CE0A76DA31EFA24B17ED89C6992F23D1335B557AC3995B95
989BD9F08160FFD0F2A45DE4413FCC63570B2824040843C9AEE6931D3A6EC7B4C95D8F66FAC1
E5E15F802277E35C8410630C376462A0FC629A08438B65D2959ADE6086AD239D1EB06B149C2E
57C7771334D9C2A09F6BF1EC56AF77A2D7D022D7369441B5E0AA3A0FAB0F446BDF7827626342
3D255A5809E1F77BDFCD0BBB28F0C04806CE05A25BEDF3CFFAFE30D0FD8FF89ECBFC2A67B61A
B7EA4EABB4E9C2566F9468A2306236ED57A29B5353872B5FEF6A629E4015B5364FF9A3A51B9F
7C22C23C772CD5CF57E0585DED9C659EEBCBD31ABCAEA5C8DA6ED3CC0764814FC36D800FE906
422E1080286F8B34A082ECD5283B440F86074E697F424DEFD923D2F6B7A1187D295D31A67FA7
E2DA262824466E761682A4A18F159D3F7D7E61D95A6A99FDE9E475CD9F2EF0BDB0B49FE2EA13
74794FE351B0B0C853157B43740DF84EE9379DBB5681902F04CE310CB08251AD235D3F173066
2979FDD35A1FB637D22BA4E4141655F0D4E3ADE7BD759D48880C02C272FAEDA3EA3C4C4CB286
FB987EA7CDA3117B4383D27659F2EA657EA1EA00577C50F2634085C9D93C77FBDCCE09D2257B
EDAA68F5108875F1A58B9A9F762E0E6CA888FDEBEAE39E49C39F7D88212FFE938972219457DF
C038989D85DA668BFF668A5D83AB5B20CE00A32B08281D8657AF13FB75F5FC406B50383B7E3A
511B47E06CBD344DC789F203DBDF9B9D76480054FBBA6DE8D2A5795A4300967613CF567ED499
3A9D478FA7E0308B71E21AB6A430D6D5982EAD91A1B310394C3429606433253D3165DC74A910
8EA22912B2F4DBAA80347505837B9C8FFF1C50E7FC36AB777A4FBA266F1C3C03A070752D6234
F2727AA53B2B856ECE4850067C182CE18F4D3F63B832F54A290671EF492F32416FF27CAC8E8F
DB6B3EAD7C69020018A49BCCAAEAAAA9F550E35D18A50F84DB6A298C1E12E56637BE28C68212
EFE1DFC0B429A38AFBC875AFE71EE182B9B9A40063C8CBE8E7B0D46D478D726A5AEC7556CD79
B160D6F2FD15FEA5ECB5A176BF25DE6C4E0484446F4F8B094BBA494BD55A3806F1F9142D9345
FDFC7A4C728171AF21257E7401D71732839FCB0219ABA6B9DBA70F321590947BCC6625FDFC67
3372C4E75FB69C4394B24F57A042C190816E90A4E899E0B70E1799480B345EC2E6C32F556CA3
145390289FDB97B3B84DD28AD91D2715BA59DA571580D7297B775406E69D50D725C17DE1A3FF
E2DCC93ED476A293CCF79CE209145F0DC1B8D55AE968D36D1BEECA3B9DCB31143A6A215BE6FF
735E19BEE36F2342D1E3F51ECA309619A8B8A010322989E11D37448B0B31C1018E14A220C402
6B0EF4DC0C141849D080D73E3351733A3060DF8251E977B6899B268383077A1ADE0CF8646465
F543D7CB3C7235FC20BB79B8AB409B4012A37C8440E7B24241B253CE228E341E756ABB9523CC
07D3E8533A8E9B065F9C65393BE11269C80F85033B5819830B4D1C847E066E0616480B817072
56E866988C17EF603AC91F7F892828912E309B98F0C5371300FA322CB5F5CAAA0591291EF6A4
615C35F24510861AE6DDEF2DA888E8DE2F1423102F45B98E45B665D860C640F08FCA0DD9E5AC
EB68F5E1ADC86423BBD115779337EEA11724FA1DDE6B8981819705AE37CB4F5BFBE41C34DB86
3A96309791761BEFA2BE19AE7215FCCFC0CC4239EE70C8BCAABF5CEAE58344BDF022CE39A146
978513B11B3F0650135A07CBD5FDAD9448B616673130E6D2325F0A915CEE01ABB307DF475F4E
861D7EE76CCE7C914A3A17066BC9D8739D5AF6294D6F70D21B01365E0D0C58F40CBFCEDADCEF
171F846833A750F56AD226A382144EB3F0B4C88D446264BCE36BD797AD4377D6C3B3704CCAA7
61881F4F04D6DEB8D712DF0CAE05492D40F4C29EB1E05C33322508895ABE7B811CE270B3417C
0AB52758684AC4A8145EFAA73C27A405933964009793832FA191239DE0D266355A0ABE7E9B8A
ED924DC2E68B4AE236CC55154EE0522D6CC51858DE0C19530DCC3E02418C7E56DE6C9AFF5568
37303CFA7C485B2B85482B6A05C843607E1C903D2C27762F285FE786CB6B261B96ED3587FC15
292D159A95482048CEDDE126D90F927F77E0998231A070F448C18C5017F5109AA02691C40B9D
FCFBCECAE2169CB72EE8478A58D00B1F3ADA4F27D5B6FD0D4130B4993C92E9D02ABEF3B805D2
4D4B9ED00CF23B13B02F3D48C49373C9F50B577E2806B4F2909D04DB88FB1443C46F75E85C90
77C594C124E3C03453941F41A5664518B20425A5F2915FB1ACE8A516CE5F6B125ADB39E4F76A
ECA8A857633412F972D25561CF65E27B1A51ED760EB0589699A335D3D11CE61C232D4BCE65E7
955DBD6F374BC9552C1AEC2BD064F9E625479E2DD962C4A632290D88ED5B2BF5454FE871CF43
CF6915DE21357C0EC7B96693967540C418430ACD908C58117FEADBEDB44995226FF61E72665E
F730C6159576EBC7551A86156FCA85AF26391A8D6EB7E664E8EF2991DB6B0EA5084343F33C3E
F389228006E1D3F46A1088201C8812850564DD13EB0B9D13B81C3904DF761D110E646B9979AB
E521F1F2FD6026EBDBDE1ECF490F42F81533A6122E79A4145F80D224CF1C0709CA4868AD37E1
4EA3E05A24EC785A16CECD09A60D27FE950D14542D3AAF374F8CCFB8E20B47DE335F4AA0E9E1
BC68408B7DED2726308BA21B36BFCE12B4EA70A67A6B733739DCD34F0C7C7815E826C892F9E1
DA125AACFB402EC7395EEE63B91277FE075DFCE8359803EC3F34794D661BE4A4488988F65B86
30ADD1D4ADC5DF3E26FB06C5AEC246E080927D0DD878337FF845F1A0A9F2B18A63A92EA0E908
D4B1F79DBE83B6B783A364718B1D05B38B2F3A88595A4B366504DA1861DE181F8A49EF2B4ED3
77EA550607A599292B7C8CC936DC44EEBB5C7796220825191A81649BA91BFCF940FD5E1969E6
094B31CFD2911ABF6059C1204FE4D724F49A56AE12803C0FD45CC2A95E63CA3CD3274B406FF3
CBB2FE85F30F52411C6445AE807759974258EB3A1EE9E72C96BB23ACA7596A97113FAE19AFE2
A157B8CC6B16E29A7CEAA523A5CF2D6C8B16204FF711B2DFA0F08A4EBA6BBFD1C4B603B4FFC3
2CD8497056B699A6AECDEDBBA164DC9E9B341473F80D628D025B19E35AEF898B1143DBED0D33
3AA60919B5B0779A2F566B4B967077A223C542DE8B0D54E45E819C8FC8AC85DE157AAF6D34FE
3CD673FFB138E7045EC617A432B8CB5E186888EF54CD02D6356D6C8F330C8E02CE6C4E559837
066F933DCE4375228558C1309B0A909DB8D750FB2AB68E7914DD54FA317ED9797CA7CA1535C5
DCD58520D03412F1A94BD90574129F74ACF3E46B7F2FACE2AFC53D6CCB3F0AA47B405E103609
FE2E9DF78E4D7863B594CD7D8FAB98871E4CABAD022AAA108A882044E4ADDB8EA7716E5EE238
CBA7ACD6ED9F9174F07BBD1DA98A4F2E275F9038E9BFB63490A769CB91BA21DF98FDEDEE8C17
974EE83937BFCB5767DD7B983915855A464D0DA943F1516E59059D27B0D6FCB3C2E1FB876522
9F94D1D5A4B21D2AC554FE4F0DB95B360E655D95FBA14E60125D0E81B4EC573201E59296351B
F292E7F5A0D4B7460BFE55EF2F1723617062193D947D569CA0F6DD92DBF5B3F7A2775D834128
B392F59A6A0F7C40861B4CA156ED601E5B5B7081BDFF05B0178B5671ED3AD1B86386AD07B596
40CC7E4FAFA29FCE8E80B81D166B5CEB172B28C08586FECB16E55CC693DC5D4D0B6F24C73A1F
42FB7A4D3682E860CD1E73B0E59645B9504CE6660483D1CE3E9B01BB7ACC7C85EA34C5F629B4
5BE307232F92C2BA9526270914F1FBB4FF075AA8F191B2C122F96A35194D0EB32E34AFEFA6B1
5639A144F54C15E2519F2B12E589CE8EA362EFDD12631F50BA0CF35F6153EA2A805894CBB5D2
F70E3180CCEAEE72C4FD5B97A68422134EFAE186A2C7F74D8C7C870C6BDD8B287BC89D75A9AA
938FEB99E7A7DA2A84D66D02713258E3756DF3F5E1DBD50CF289A24C3CDFCDE19E766802EE91
859C742D25A016C64C8C9CAAF0F133CA78F07AE11C30F1BE1DB579D57D905123FC2368963508
40FAD1E507481DEEF7B2799C5C1E728FA9067941BBA409094D9E73F756EF9E762D5124F6DD9A
D33980941437F9C3C4FDDFF51A9D83D85E834601B259819293867501C578B458C1CBF0F24B67
0E47A56EF46701B260E3A9A17B0B7A0ECFABD3E9561B5956A5402C4BB7D1EFBCB72A5028EDCA
47B5323329229BDAFE18740AA172174753CB9C4082B8711C62BEB765754481EB7A9FF3E260DA
B0F4720B1470D578188D667385B3E5AB464FB6EBAEB53F7A319DFF20C7F4C9DBB7A6342E7FD2
3E1BFEB7DFB93721ECD09648990C71F437DE8AE75EA9BDAF17668EC5A90E0E0EE04E6D592FF2
6139ECF8AC6BD368EF4D41D53AF7FBC286B6712E24CA73F601685D6DD6DD554761EA09928AA5
73A8FAB20F204C42F07C497915A280ADA09804A8F793D1C347BE765C7DC10E309FB8ABF13FD9
781269144C8E4BC6F3E28C8FC149F225BDC7B9ABD794644B0C96A11377322E81220003F7E348
AF9499686556FE4F835C5A785E9623F01FB872842CB67F5C9DBBB909FCC61C93B154DB1347EF
E7DA6B95A08A0CC06C76828DDC579EE3EF5611A4314950D9B292C5288CB4BB23172AE91E231A
98FEAC73AB070272154CAB31BF59E0FC8977E2BEE024194A14D7FED9C85DD91A683DD1DE2C4B
39AC3DEC565956176E19C09FEB85B6819CB9CFF5ED3E5162D64F1C0C230F18EC5AAE9FB10D0D
888BBF20BF8B240209F3C795B69590768DEA6DEACEC20D9DDEE28CE24BFF3C7007D385BC2590
7B199D99CBF3C79FA40644DB71405929413BC59CD893E98D03274A15DCC235ADCB7D6C0B0D78
95233C0286B75FE82E88EAA083A0477DDD970F9CF95C3433FB0D212F602D08D38ECDE4318FC3
6D45DC7C67BF9B45F795700EEA8BE7D9E99F3500700384D7976212E05380AF9E23347881EB0D
56043CF41FE3BB18ADE219BE1E38AD37F533C068511EFB5C1FE269806E0826F1DA41325CB9A2
CC9B22A3C32CC3E4F590F8ADBD35A124888E31E09962430C3E384F86685CD10723482A8F153C
B2A35E176EE21021F390206778DEEB6C3F8E16A442CC61E1D093CF37086CF6BB2A4C81292131
E40AE67E8B953C1F334BD439AA715849A8C513AAF632D6096E1F56D8759534F0E6FF91B50B8D
47F267F7FEDB3EA33C8566973F8045715D0722C51CB5D91BC38A0FF32A05CD1565338A96786B
F8B284539C2985F1200C80E4B415E50B892AC9A517A0CDC4CE7AA9E104FB6EA53ADB120477C1
5E93A6E7A173103A00E49C3B906AEE69D103DBC4211CDA97A191F200666FE8565BF2E121527F
915CC59C373E4E0943F3CF21C6A7059EECBD96A434887F899015A613C8506E0BF5F1F24D2222
D6E57D9194A25651C5A9F564C6E8073399C3CB3C4974526603CC2D571705829B50EAFD8C0038
DBB0B8F0EC9B51168C82066DD0965FCA1B7FBD5CC27444B1467F36A1C298E83BCB67676FED2A
ED77942DF301B7DF5C36AC3912C055CB31598332D37FC411AC39C57940E830C860FBAC9C3B30
97BDDF8A1CB41DB19B748FCDA8FDA5C11C965833361405F3C4D367FA8AC303A1A4F74E7B7642
49B4E7A5FC56298F3F7460E36766D19C617AD7E91874741BCC357E034A2F1345BF8E5E01CDF8
AA13B08BA3A029D41264A039D4B83EB053026788613E3D8B51D8513D1AB0C279C6661EB8C147
10EB38DE27E66A90AE06B25B4B23BD7F83243DCF38419B8E3CA605E2042E878E442413F62301
A09E0922BB261AE35737F36ADFF93771EF37F8BDDA4E12DF8DF21C94BBD9535B6F75BC584467
A860F872262901670AF6A9DB8AD28D364742173642D1569F2113AC864A5ABB9012B277683484
9F5136C2D85A04137ECE9AC08724E1386943DEA2272FB47EE6BC0E90D9A9200353FA9DB88D99
FD5FEFF701F16F0E0EE958C420A3195FF79AF3DE86B975605D2880643AFD728CC1B091BE8FD6
5D9DB7C9196F0568D79135EE3E4DC95D61134C181A14853BD93E15D27B8D5F627D0CB36E8C15
2CDAAA10AA02B9A6E602FAF042511A5FB49A515D9415FF920DB59DD5EBDD335DD506D94E15FC
3E4BDF8258C1E2B4331731A9AA35678C5B800604024B88D483D214140A9F5D22B7E2C13D20DE
1C911299468DCC801E481ED5C40D3C40923D49D7B8BCCCAD5FB64A46F692BD6E782A5F74ED16
C86235E5FCD9D150ABE50AB240DFD19D74D3E0958B445337AB94B228CA976D556E243B906A33
1624F295B2D0A690884F608096E94B360A975A622942C5CDD7C8BA6C08B42EE2338D907EE4C0
84D954A9D9E1F7F89B3BD508E3717F12606A1232674268DF8D6218023E6B6D646834DE78CBF1
11435FE66582669B4DE746AAAAE8CEDD16A36849C35DDD7D963B9387EDE48D89698AF8A30BCF
DB30F3DD1FC78BCE8220F4F4E40244D3A4D0228ACFD8C6C575339D8D99691EF5027429763751
84F4A1D165ACFEA854D6308444795769DD448651216D43448BFEB89D0CE6C754171CC96DFF39
1959DE60978DE38748F1807230C2DC537A7FDEDAD78FE2124C4BC2EE2612434C7E1EAE64B30D
899AEB33327C0A2DEA85BD1B9D0C7C71F647D5D7370827DE24C0446D90A4105AF0B9EFBC26A8
F83E1355D64CEAFAD76C255D2970FCDC9483C954BCDAD22E856CB3893775416D27236EE5AD60
BA92ADE130D1930525B76ADB89E9846974744C0C58F7800E95460B5CF012A2311DE3E4992A4D
7ABBD9232EF476FFB5B631512CAE65B5ECA0D71AC1F696BCA532D663443E6183BB3EA8710C20
B0460BF423D6A898B8E61AB0139E96825B73D0E113552F4C5A3DA6AC1559A0A28764C7726B8C
A49C7E8824125A90EA1B94B91F3029E2C56616AEC2306EC5F63FE4136690814049B33100414B
98095A81F770F5DD97D5FB304C29BB51DA11B0273DE1C9B04D8568A1C4B16EC349386C731E1D
AFE863C638C326F7D54DC71DB47378AE293442500FE592450BEB8C3368EE7D0AE5572F70605D
7A06DCBF53B9CFBD403CCE2336115E73D7988FB55BD189CEAC03BB72798C0976DFBD6189126F
7E37113364A03AD545E5E9E2F88CACC7B67E645D05E2E8B79E17599499A9604E2818448E8587
A1506EC778D6E26DE7646947996303D7B51990BE23CC3234E5D251568843BD646BE8AAA7D5C9
5D3D22FFCD72B78D92FFCE307F81A0C2D0BBBE3C0517BE1F9348D13D3E631ADA866683863487
232A0F41426EB0A650B94B12F8D0A2010DE848E8F04F435093F016BE670BDD5582DCE1852880
C5634B12CB0FDDE76D5546B41DE45262CCF3B6FD0C030AE2408B436A835BAA014B8558204423
1A8AF664350BC62654575906472CA43CEA42ADCA86E5D69A7547B9107A598B8765E7D9F31526
995FE9051C9CC9FA9A4532F6756EC3A0F6CA00DF9B6D47DF4920D29E4050C4293E7DE5AE4670
C0B0B61E82B13FDD9C7C51746003EE7859190208E2E3C96466F8FC21A13D0F10C78BD3517CD7
4ECDEF41F4C03AC41BE7953A5ED7B82338562A47DA86DF52688CB97CF3457645D2F32BD235B5
2F5081B4552A029637142A0A7C9700E48F42D54FA26D4A42E9B25285C126EA053536B3E27F97
2A055F418145D49410B963DFE11C36C111FC57939DF7786CB0871BBB7F0495EE0F47FA1CF4BE
109A75271812306312E7D00D7EAA2A2DC5E21D93218E01143556B0780E1CB50E8719471BCA7B
D40D78DBF482E0432CD8C7D65371F5E5C9B1F8477CF8AA7D84E75473F02D2002FA39A42355B4
B078FD97B3E47D49521DD01366961D16E4F5F919F80DA12DB2ED65DB27D2595C0396905F53AF
2001AC5CA867D08942408E47FDFB057E4722819830974A0F737E1EE08CB67736E52048D033F2
2C516EC8D2101020717953ABCAB1F08413835B2E91D896CBE1EBD3947F26BC15BF49FB1CFF21
56800675C6708FEB27FDFB91C2BF89672C4F9624C5993DD74D2D435895F74BEAB04436D56B0D
3B8F2ABA61B4B48C6F998D2633748DF2C0432BA0BC09D469F8A33364D04A5323410F7F51DFAE
6221459EFA2C0CFB0C507232966C39675E19D10580DDA4B369F847E92CD8DD6A4DA0016C29DF
E2516FD2C6A43E0BE3648A47550F7A466FD8133000D7BCFD3718C2CA02E590A6CC635289D670
40767CAF5F645B272EFCC9480340A9FDE44F9811361FBDAD420740FE5927BADD5AEF668E5FA6
30125361927FD081DCAFDB5041C6E83C869A2EE2AE129498AA5DB21A7EE9FD8A3692D66F90F6
2AB75351E3CEFC14AF882E87AA4507F64EC624A74E4AD6621BBBE6BD4BA95ED41961765EB3C1
26439E176552C296950BE7197722B2F509D84A3A39C6F3CFCDF5988B703C9A060192F492DA0D
7FBBB444A48907B1FF59C86EE5E845F1F478FD14BDAD0DC4444C4FFB4AC5674C5B5CDDB23FFC
A590616CCA8847522BE09CEDE87728AAFC3CC4F8FD647D763D9C80F44028D5B21502ECC9A3D0
8CDBD0AEAA00D6C80B79D71649FE6539B08DC1E7D385BAABE63922EFECE8A3E59E12081F8892
066C21D0B57431BA4A459671295DA94D595AFFF0A17F7D5EC754C8C5773503AC3BB78A6A70A3
6E37EDC3CAEE762FCFF7D5400D5BDCC03E4752E92F1D782187B651A42228A377A683E4DCF5AF
047E0BF0E1465FC8842C0D1C529109E9FDD9D748CD3B72E6EE734B8503D4DD58BD5134F5AA85
3DBAFEC62131980DD517E85EB8124A2C95A6398F552DD4ACC53896BABBFF8E80227182AEEC8D
12E4AAD9CF3CD77BDD7965F711A664021469CA2E12E225F6E032E19207734BEE90CAF4868D11
6079820811046AC6FEA4C683A752B0245A4D88076929C222F80B599E0D43E6DA6F1B95A5044D
DCA675742B36176FECD4010AA706CE2E595F906A4E6BE90A1C00B473655BD91B8E5FAD621474
909125924D61AF1E7C5FDC07829ABFAC5D9C8F29472DDEC40A9CBECBF7B2A0C73B719C840273
A0E63BC63AA1F1B661A320CAF887A763D4A00F37E74ADA1EF5D9CC274E8C8C9895F00708DD6F
3F60BA13614948C0BD8D5B01CAE7635B88C07B60717764A5CB9891682E013394D839A1AE9F39
2F8279F94973B3B71CA27FD04803C95C6A7DF3872AD63CC294598CA3929A99CCBD4C176B8639
9DFED539503BD664A554FF37520E48B32F76F05D8521C6B0E6FD6B65F5FA72E38ED28C0B1A98
24F6CEFCF70873FC2FB50D7BA1E8C55452D32AA5D260B8FECAEB9132FB50E5CBE2F0A68813FE
32684B1C6AEA78A3DA5CF1A7354B299AAAA2C0C0C84C1829A1031676708156EB8E3A4A535317
32CE5DA8A9484BB9F3C0A88BA239D55F0B521B7E11AAD4C052357D336A9D5C01B85F3CF4E3EE
CF4264C1CC063C1130AE5C1E5DE2D28EBECEDD3EB4F02F38568702505E5C99C00F1A7C4CCE5D
28BC373137FCA623F420C7F4D423F42A6C96070CF3857708CD2302FA534C80E44E6FAF3DA451
A5BCD38E310124468D1B5503147E9B8FD0F080C2FA152936A514F7E9D50D196239E3E788586A
F8D1301EFCE4E85A6FF7C561F280853C2E628B8CD37A55243DE3147951D992E4CD2AC4FDF700
62CC32BFA6EA65B1916ECB6170F0EE8274AADA95768FA1BB693D76F6ED09C697452771863134
124BDCC5EF388E9B6D85F497BE16D7780832535C3F6C2AB6A4C9F9C08653FA64893A69052FF6
779ECCE2F67284F2A7BC9C162CB05238F173BDB4AD0DBD00F1EF4BCD8524EB6D3EF08740F843
D12260ED63DC5603EA53BF2763CBDCCD3A106BF932A853CFD68468AE7536C74DAC494C7E50B4
4D15E55E06650F5C597CA6B5DA9A15308637D2475C73417DA0F490277CA49598A500431F930C
199D5EC6826E3DCFF805077A231C3B5DBCA16B8CC31C925F7EE0273257E97C1D2A1DB385242C
8D621DB150DCE25FF599CC411A28B08116828CBD420B8D95E9770E65B98152F20D089873F61B
42A35DA83DF3902063EC66DD4B5165B307AC73E7FDFF117CB3DF6055F9E07E0D00E38A7AF8A5
1442D1165A0BFE243286EBAC4604FAE887FB279E692AA6446BC56E29C97B491211CE87994402
008B64F9A6A5E125ABABF6447E024AC91DD75623A252AA14B33184B61E3A208A4A783A4C0119
F2D1FEEA938C65E1EFB579987AFE2F65CDEA0185C14381E292E2AB676637A6DAD3ADC9D67739
ADA45EFB2AADA7A0F38925CCD30B593197A73D0F683CA68EE3156FD04C7162ED42666F210228
390284F3C6F2D69E0EC47741978DB324C7D9E91AECCB2D45DEE231E77C6E469E868B7BBA4A6D
C259385926335772A8D96C7207FE5F9CED891F6FC56B44B691BC557BA9B2D93E49B53D4B9A17
04491E20E8CD63404033AD8E25C11C9790F07146D84EAAB5D2220F86B7E4BE4464B1C81737B5
39D0BA7CAFEFFC8C3730AF1C5F7AE3829E3F2E188C90AF4A2FEDFD34BA120A10D02F4CC36A51
EAFFC8CA4CCA364EAA20C7EF44F558164EE70CF328FCCB748007003B85CEA6E0FE38572815F6
D7F0ACFC8947CA427574ED249280EFE8AD0E02951472565D1FD3DA86E9DA4AE3B45220324E93
4A35DFB7A3ED83B42D3204355F6BB502E18585F745D72FB795E25198FD5D346B35DE2E0B2DD5
126019F6D9DFD1E45AE121C022D43526418EC31FC9112C4F736126099AB3E28AD640913D3C8D
FAE32A83D410A7265CB64E056CC3C7DBA5462526B3AB94ABDB7CE60A1C6D850E8A0EF92D369A
981607208321C365A5104FAC2F75C95605AB641DDABB9AEA8765AA6F1D3E64BCA4455B59833B
4E159ECF2A135C5D9ED876C71F36AB6ECFF487475C25339B2F9AFC5B2A26D90534B5F05D70ED
E68242B5470FD5B708CF184A035B044B679BA5FB406711947A4647484A4893ECE8857AB54438
E2FCDE603D5AA68129A08EB04FB945734A46B207BBEB8C657C1ECE2BED8148406D93E4C02B4D
51B7D9A224D253DF8B47433D5CA15E7970D352A1643FD07D8F6E372798C189256F45EEE01226
D5F7E5DB121CA4BAB9BBC7AAD69566881CF0D49DFFB1CBD46C811ACEC48EE8707A79F99F8253
F113AC094B2307843C5969DAB0BEBF9CB6A56B8AAAB4BF96F1E615C690CB518D91898A0BF4F6
57F580D6AF51EEA835E92546E65CE0BCD4E3E440F7BCC430807900D80DE834BEA59ACB85F36A
B0D3D3F8C527F5C70CC0BCF7237CE6B93E2AB8223853A2CEEF969138CEE54AF3F330CF80765E
1AC21D8356836EC47E78A4864DAA0D29BEA968FDA90DA7771F3D05DB475D1517CCC02221D0E2
59A327EB474449F9C7C140E568420AE14BE8EBFB9BACDA22C3FDBB33A9CE41708D4680B272AE
C89BCD06F0344A0807C87C69051B73A18908B29C1553937CAD7FD80167C2A676EF35EB67416D
62A75B442ACD802DCDAB9FAD2B57A35AA33B5BB2032C51DF4D131CB4F64556CAE494ABDB5D23
B5E86FDF153F818708EF6A5DD2766B508177219EAC151CB4A86D8A652CA6C2EC994F9F43AFDD
11ADF9DEF4D2EDB0BDA9D37B30C603692A4A83917B8E459C35E4A12A07B02EBEF81D74135492
C01AD1DD3E6C1C75BF8EBBBF42977E1DABAED256FBBC203167FAF0AAF0B988AF0E3A51ADFA07
ED9319E3A1A2CDC16E214D58637DA3AF5966BA1432AF434B105B859E9730691F8ED83CFA93DD
63B5CB6DCDEAA7CFB2753ADA56B00B81E4A67DFB6E85D9A34E39E16E256770908EA2A1811A47
05789EF7FEC36AABF8D31C81CFAD80243174D38155A74E1589F96CF98CE5C4AD93B37BEFF405
43CBA49B7570B53BBAB501BEA9AB4B0E73FD3B43A178C86F9A22154F01394F37B51075AD2918
B98780F1ED0D35A23960E0FC218F459C5AEE7939FA21AC6322EA0601CD675181BF71A594BC6A
CE34C39B349940BC1385BD7415470D3D6A26E979CE14892ECCBDD46A7322C7A565F2C50377CB
B18285BD9C0C8332B9475DEA0CEA0C536F2E5652C782E3B61D193C6F2FDB4E2CE4430207DD25
E9FA9F70B1F2686A2645F69E2A922F26C71A27E495C2AD75F431EFD181E9684BAF5D2F932C27
C0446857F7726CFD0634A25040FB68D30253328385D55F4FCADD8DE6CE829FDF9C18466A558D
91F08FFAEBD0A079AEF4ED7D612EBD3D52DB5175CF4979FEF08D7B953E9FCFF77ABB0F01923E
1D93187DEDDF3E3C64C1E1D74B6A1AA387805DE6F2D439F9B9F24B12F523A431E3F396ADF6C3
527F05A0CED7C26E24B02F2631F045943A05561D3DD5820B283A6767A7F0C700E0A161D31BBA
4AF0C1E759E8EF6998D749DB00433A47E326D24F9C14A51A8C97DF57BA7F14B9D7DB077C55A0
CA7DE47DED12FE7499FA50001E59110647A3D6ECBBBFF71951D04250DAD840F06618DECE5F9F
F994887F38E2C8903CE564E4CA673EE4090D181A4067CF8AD19C99BA50BA9D2F91A680041137
6E63467B711D946D1E2E8C11C6FF2F550F9784EA811934963F21B2973B7AD21D144976C12735
C36E101B1C5BDB6215D0B9C7CEFFF972000A88EA7FC667E57C5BA8C5870B827665CADE97205F
77AEB0E5C8837CC02CE6D53B54A745A91337C01347A773C73661C662B09F49F2DAD5369767F7
1868CD31173842CABC5E564380396B9795BA93E1FCC81155ADDF67DE3F91F14F816BCB9AA86D
80704A7EEF9017F3DF1A6F75D28F650F1EECA5138CEFA71693B9F0619521D52F2A7A8F944C36
30A355F61744326C0E3C078F7D98DB1B7C7175662A02E16F610A6D74E0BE0353127660E1D6E6
168C10BDD159B1DDA8A1BC36E62359042A68341EF759B50FA1FF0F54FB725FB182545612A7A7
FA832A565BD3F1AD07E3BEA2A753D4DF7B86883BC32B800DF704ADDDA479ED398476AB86CF52
DF8FC35E6245A3FBEDD5F862E68F50B2FD3DFB222B6EB00F9AA619AA540F7007CA572D739473
759E3C7E8876AD9540ED7DAFFC5A1689E5992DEFF3933907802F125BD6E83B3A82215E0BF888
B86A7B8A0886650A6F161F543A109A85BEA233DD5DB1E96CBE7B47D647C071C937014564541A
B8A4137D08D23359E1CC2E50A9F28EDB81276D86DD6C6CA3BA326895067FDF9742C14D6946CC
8341F523C11643243E0F96F5A0FF43CE5E6B249B6B2C85F66790060DFEF47011CCF62CDADBFE
A91A897509E9A65769724B4D146073C36DE9567658700238B4086776FED64600F9884251A71D
6527B5FD396AD3CC4E886C90ECD2ED022AE595EA82825EA7C476D2D08F6F63249A0E65FA1272
3FDE567E63136427B3F7448A61BEF9B1BF225AF1DC52142E58C6BC26430662D244AA65924AE7
5016F546758A9B95438EB498F078584B4F96195E9CCF75B2AA6F2B05E322908A3CDDAE0A8F75
97ACA3CD948B08549C92760B582B5A8B8D8D872250407C1E8C2E65DA0F2D6A353DDC2FBA3BBE
58A474E8CF2872F08FDBDA033EC044F0912A2DCE161ACB5F39040BC2CAFCE0ED9C8EE3FE377B
D9BEE169A6E36E6FF19F8FE0111BDBA6C963B6FE0A91D5B163AE1F00B7EB23DC61DA247ABA84
060580A01E3723B5CCA896E7E33858963EBE7D286FB1922F271FE6ACF831A0133621594107F7
7A556286536F0FFF6BD2983A840BB0C6418FF2FE40C8F790A4E1C0687CE62645A4D8665DF67A
B826B817FB54AC88DB9D5D037B6C4A110387DD4E055DEE4EF442906CDB90C6EA36CBA0CCBFCA
CE881DE00731E74B92389C2B74FC57ADD316909B36201E127B3CFBBA775F05FC154C320AE7A5
52F9883E55A7A072FAA010F2B1A45150C8C85504356AD02DA1D904D281163CC90424599E3D78
E4584447B8DEDC50B4EB8A6E71C20EC6E4C106A56071B5E575CFE45E3FB7148D953CA6FC6075
F14668B62E1B948F8B7E1FFB20FB64732FE12CE69C41D1F176ECE822BD583004B843B9D6E1DF
88C94C9C48CF3E6644C265086B4174FBD36FC1ED2BEA4BDB168DBA8E27EB5E2C18447E16D19C
CC9BF28124E95E5DFCC77A8B3B8B23A74EE61970B90BF2811B15F6AB9391210F3855D71A5D54
44DCA30D49CD8AE93E5A80283951E7C624F52A4CD5549D2B2921F65913332A097206C35F5C77
37EF02B60B949A3B70CF50CA1A013CAC8364D0B9A3BAF074F5C3E474B952A74384009AE47C2E
83140811E2BF16899C2E610CE432940A785765A7402F5D4BA7BE624215ED5B983664B136BC56
2FB8B71CA1BB53FD9E3E2B486AE5588AE45D59E07E1CB4A7FB75520F3B106FC2C59D37886814
8480E3E0A426605B1519C3B55225CA26EE523951910004B85553103FB13208260389DC5C3ADF
1AFFDFB82FBD90C41196D2360D083094FCF662D3F008217A15E3BD04DBD4642F98C2D18C8BA5
E3778C47ED61B9E17F8FE385AD15C81479B8183E78D2005E8D4E008137345A09B015F90C7E11
CE954330D674D50C095B4CC6B13C130815A3EC395DF4345F3506B8DC786D0AEC126EDC14E4FD
C07275B353E80AB6A004B406812BEDA9E07997AD04CA42FA6E96FF4BFEA5110E9EBAFB7FCFF2
CCEB205F3C86CA2A3D04E68599AEED1A750E2C4B622424F5831CE3DB50B811CE03F72C9417FD
3C0040A20679FFF40B6B7878D4987DCFF353078B50400C0C0597250315AD72849FD3176D89D8
1009FEF6BB780ADDC18692FD07C3EE4C4BBAF019498623518A8C8D8CF0F4B2D38AEC90F247C2
60B14CA1F713A8EA6AF46311AE61F40333A070D62EA97CC1AD27DAF6B2B6A3D3133FCA08ADD8
33A5E5D96156ED7F7B63DC9DB8C1604A37CC711364E249F86C2511A873A0FD1733825419F04B
3C763EB4BD35D85C23DB11A9C2F6EBFBC123C8ABB66F5524B5053D347417F72ED8B8E7D13D55
34734DBAE3EB89795718B64D82268DA711E62E7268885BB8AB0B5F8BCE440A6F568FD530AD4B
DBD14EFC44704CB6F7127A7D7552138C53027959E026D6272F3A49A5BF9BFA11FF10E7C0C27C
9C3AC61C444ED4E3C1FFEEA3F067AD7FA48586A41488DBA3B99B0D40D602EFF09F7F8BC91860
C5A4D791157A84EB490693F2E0578AF4FDD132C0D4421FDFED2805AE030F58CE96E10463E534
B12ACE4B370A25E2F1CBA4251FD05394540CA5BB2D938EA2805AC814340A6F7748D5B1D751EC
DA8D653471F5838B738EB916DE1B7E5DB030A04299EABC4A847B378FC4683AF06D20BEF95651
9E4FD83C2966D436B4D500D698EBD71506845F27B5AF028E4A0E7E0F96658BDCECD7C9B4AEF1
2F949083918B157CA4719B94E7DA94AEF659775F2CE6907B04697F94F27440BCBEC12EA75CB9
7DE3E9922BBE67994B924FCEE89D9B8B346BC841DEFF26DF7F11B2134D2CFE6428725E903B7C
3899AAEF93C9DAB0EEE73CA2064D3CAA150F0399AE258EED0B57A849BE1874A5AB5090342886
928622D9BD204F726F7C35C1780FD9743142BCD026E55C9B89DD155349A346B241A8A01CD8EE
9CAC977DFB7168051F1D656C9F951420660CA270A9D226FB94EDF1C11E40B1121A72E7AC169E
AC1EE2CE2F5C696A917EF0AE33DF6603738446111944BCF09447A4FDD161F82D0794B3129F46
7B0AFA2E2D57665FF02CA092F47CD3B265A6646E2A67D9B869ACC074949E5B3329C9DC3B1B24
D815BB27637ABFD3771E04A8972A94AA4F4086BF7F65792B16720DAEAC44CE2E77F50755C39B
BBC42CBB09183473275864A44EF4119D5101B9D0C098C15B4EFE645AEE2994BC619F57539856
61E65754C115F6B14743344F6917A2A348CD4EB9C4A62009E2CC446E2EE3525CCD6D0913FC2A
AAC3322B6333618889AA0205BE4A3DC1B9A47F7A624D10EC715DEF83224FD1D1B680AA7AD84E
B9E94FF1A92E5629A1D58E4921DB3D0ED997FD33E261446A7FB8CEEB002A2AD23FA4B4D5058D
2FD763E7124AFF65FA70E2F966090AA6C71FCA633C6D9AD8F078D34C85779114A22CD8D41B29
2BE38389B6F0DFDB4DE726A13FB588F28917BB26CB2657D0409DA795340AEF38237642147424
B90679815A1E6E9F8803808B386B54E5CF8444C253C5473209EF7FF1EE609D9C3ABDF84F77BB
985F50821F23659A8AD651A88717C63AC00005B39C19BC5F33B35759F5C50D1B2C65D56F7A2E
DD5BD8DB38A7CC83C6FB2F53CF380F72F2F75DC273E102466C88F53094334CE308DB22B9906C
B3C88E698399BE4FC1D6B67EA52230421C205DC171484EF5B68806346411601320D39E87981C
8EE5A8770060B07D4AE218C541B3D0EC72A9B7B709C8118DFFB1E0B4E85EC2F094AB06D4EAA7
29BE8362C10A070ABE3C944C23E454EF6A90A0016C341E6E3E3D8681D079565833B091FD883E
B608C37A67BEE65166EC89A1EA998E2B70EA8D8E8E5AE62C665A4815CD7F6B1EAEAE988E2101
69D15F4996AF26114AD8A1663A4E67A4317E3DC32BA33153582A5CE1B8FC6564A270AB738976
0F8C3F6A02A6AA2AB56E93147B32495C7151841ACBEEE9BAFD61A13B731DD105CC0349FB6879
6D75439C41CDDE324887F3AA4BFA442E71E24DB4B1E61B2F808BA90010C18A5DC921B72D4D19
5C32AA76992D19A45826F86CF12C5DF6DAAE52EAFCD94B40836603B7C5191D667741C39D4CF2
26ED5521521334B5B84BDB265A0AE8DC0CC6482183E42ED28F1513034988A43399D35A0EE33F
7480902A6F27C6E138DA036A32283D8AE1C4200A0999D250991EDC71EE962D19BE3D106851D1
EBC09E72A592227F93F59EAD9D318E87664600A98E3056F36089A488405CAB37D4313A7E35BD
18745DE299425D9EBBF06A2D3B813DCD7784DA05A86BE723234FB8FCDE431BC5272DB410BE4C
8A6CDA18D25763914374A1F0BE9CA81FBEB0864F0F5D729E2438C7DD713CD0E43351E372F937
3AAFF5379C8D0E3398642DF3F65DEFFF209DC505DD8D300D96657AA6D8D7F2CCA155E939176C
38CBE9D36EB79E5DA67A2D90084633D2A95820ADB195216A70A8AF91AFFA0B3DF7C7BB069102
5632DADAEFB2E9EB48F3D172F6211696506BCDDFFD9E756A0F302C2788670A2E6A76AFA10034
8F5CE43E7A2CC3907296DBEE00A95042816F3D427BB5E9AD77216D2FF4B3B18A7FB381B79BD7
DD95547FA4099767F4467A1C3E39500328989789AC9102EAF14D0BAF1EF7D2072E3D9EDF99D3
54C44204F5CCDB2BCAB00F131BCC49C12AB9B73553E596EE9D25DDE5BD8B2B76EF4AB4E58B03
A45F367E788F0DAA9F9B17B181AF5A5870BD5E2BF0DDDEB271B557475ABEF9ACFA4576509E31
FD83079BA780B3D291393C44D9C711CE3DB130686003E2CEDF29C64B62BFED6DD3B6D0094F4B
DDEB9B75D2266C148148B6B2DBEDDBBFA637F9ECF123E247CD2B5768098BE9D8E79281B9EFCC
7767DE271209A25CB1FA38F2891367F3EA7C3D51E04E5E38952B7E828F9E0B1EF16116FB119A
65E24463B8DF1301C5F562B63DCB996314E113B7E40F77F7F6EB0399432E8E8E559D9F0574F4
5C299AD9E3D15FC34C79A1D79CB5AD28BD619F7D95728712580C800632B64E99480A73D8F105
E1386AD6902C211F8801CBF24E2C2DA23E9A8A905D10709066BAA68CF3EB80701FB51559F8DA
12B5F107F3B94D8C68CEC13CA2C4D4BEF326B661F630922442997D48C5C5F3EBBBC93B98234D
2C949FA4AF61F8A7299572E00759349CCA8A314BA3A7E549C88885D7FC8F0EF98A9999497FC0
2DB51F8B9D556F099B2CB495C600CB6B1905140B6A4961BCC6726EDC969CD8572A4FB7C2A0DC
7032DEDDB21DB9026A36360F7B8DA554E767DBC2AE944BA1EED24D70C5D615908153F46D18ED
B877D747F03E54039E637FEB33BE228E72931CD967378AE267B5DC92F4E5FAEC411C16B13EA1
20FEDE85D271A4E6E27668E8CABE1D2880A0E448B3A3D39130FDEA93E684111FA1015323153A
407D1599B367D4D10E2D03A8B47F28E85C221621D0E8A4E171164B3578AD574B75C291126583
AAA9E285F51B6B4545324E22699887E1D37D418F3C7365C80B383A5B8DA540736E703E2ADF4E
3737C39E49D012A0BCFC43660BF03AE8647072ACEB341E6233395408F62E16EE3F01CD9291E2
0A0966DFAF065FB67FDEABFC66FF9AF42A2B36D4452D8CD7280AA801FCBC3F653C2919666699
BB0206C4EF6F8FAB82EB6D40C48871AC07E3D8A135FAC91D28CEE15A5FF87170FE4A513AA619
CE65945AE1CF951EBA47FF6B8C41D63B4B9F0F2352B11F3A65A7E689763029C6A91F2D6B5F18
77365DD7F86A6E538F78AFEB04AB074B203C47E87FBDD2BFDA7A83B4E6FC1628F20DB99330C6
34F6F65776B4484CCD59BCE04311CF52E0C24E5DF4D546FFC11B5FE2006D1A0D1073C55B34DA
5C81ED3A5380D4E39DDB3D9583E3C7686A50DD234E2E44D7E02411ADE6850F373516DF472C05
352EA201B3DF08241FCC92DC395DC8F998A8652FD8FA2B11F103017DD01504D2BCFDCC360439
BD832D5CDC3313EB780CA07C13F41A4E599C747A3CBACBF4A25BCF10817C9570BFAC3B437F15
F2E6DDD9958BAFE542B984AB52DDAC9B219C0A10B339F96B2C11CF6D05321F77FFE6E572381E
D81E5831DB8CFDF902FB5ACA0CC7CB23624EB37E16C2CF8BFB7B6923D1D4B97C55225F8DA2C3
495F6C971C51CC7CF66E82A8E03BAB8C79B35180666EB64B0FB56E527A148C72144F44095927
C572FA906DED1BDA246464461F9A373862217F4D0F3FBED40F614348198A2B60C50BD99BB9A2
1C8E8B3A48A8CE4E182D7244E145A0E5653DE82BE2469CA6706C7F9CF15FE361D15321F0CFDA
D06A0FC2ACFFADF0A7586177AC9A4314784DC68F9D26E65750DA0137C26659013C601158F4D7
DFB59FB9534FEC5C4DC5B3CE9BE866195E42062F5617D0496AD0836478C81BD523EA3C81865C
0C942441D51742CDE92B080B80F6F21A79659D9D14C2DC91FACE45DA84C8CEB673384EE8F0AB
4A3166F740E44DC24E36D871C6833E1E9F217C802B6FB7B9D010A5242F36E941CF6CD153BAC2
EC68772B68B50424E9BCEF95696443031402C3B39D16D38C5273B76396C99FF86D07C3AF5AE1
3FDC4B136F614F4D49E86A0BB3085CD760208A513E94E532A97E1BF43A105947054C2332370C
B191C7B3623C51DE746341988C6A8CEDF4126B4E93806E5BD982021DD6785309B4D62135C9B6
75D0BEB8EEBC2CD87B53BB370202D24541EFE9C47E5246A07A06DD6D77DE7B79AA8422437E8B
1985BA90F8942F023A69A259F1390B9F4DD777A42BB089CB395FE6BA32012AE45D3C61A8F587
1BF1E02C91C149EB637F30187ECB817651622D25C5E1EED33A5503FD3870178A379DA19DFCCB
E076AE9E2F2AEF86133F27206B0C2A74A88ECD70FFB93A81A4B566C41BDF16D25D79B0560691
B761FE3254E927A013122C6D78DF7310D01CD1314D06E584ABC9856992BB6DA11B6F9905EA2D
E32584E9CC2101B505D47225380DB6C9DFC6BE379DB8CAE85E3C54F534650FAE23504B8B3BDE
7C5FB2ED9D73BF7A2EF944E678649AAAD02C286020F69F92D3FACCD3C301CE19E89CA83825EF
8D59B4E3FA90AFCC29EB89E1554FE29B5A6BD44A99E715DD6BB6167668E2B2056C5D3353AEB9
E492FB18408BC2D170CC3F7A334B178A452C0D08B03A114275D2327372F34E71DE15AB648F3B
F17ADA15080AD7F89016CC3E4647DA49EDAE5B469B5858A18E5562E09ED362B6B041904CBF46
B5225D23302A63DD45E77DC31AF5FF3B2790B31B68D1401A7729C5EE46637B3BBBFA25B3E162
20E1227143A9D1CE8B80D5A7DA13B16A47F0B128EE5AE364EB0ED86E8A5817F420CFCCBC29DF
B06B52B06E4B6DB0A8F8A1BD57C69D692084AF58B5B313DF18C3F6992BFAD429476DD39DC229
ADF1B01E9980A5B645C9E18BA8F2C3B279DE1926832B672B856975532BBD7E8E703E4A6ECCF7
E713D9690C2F640FD874E501932A8F17DCE4A43F4A48A32CDE47DA21B4FC3325ED055FC843AC
18FBF090BA8DA4C95426D4127748FA0A273CCA95D7A139019F687663ADA376FC0CF88A925808
8F51A7CBA595F12E224D4C25820F71B148658A2FD0352520E5226049547E12DD1B69DC6723D6
AF0ADF7D9B0A0F02C1AB1C9123835CDDA02357C6657D03A49675233F0416073307088DBA1B5A
39FF1CD159842DD72C32A7AAD57124F681589E1E6112D093A3939238F2E1EDCEFFA982F27A1B
44C8353BE638F1C26B37647C7ED705A550C40C895150BD5C6637D177D49159684B95F1762369
83306618C40AB6D44FC4B2273F39959DD89A40197B06F48AC24178E193A12AEEAE34038226EF
548577A06B6C42E4F68EC22022CC2D117E12DEF1A22D45E27A3B1A3F2E9832F9B7A2E834B60B
F67E75E16928634CF7A1E286F14D5572A73A42A724EF60E6A15F1A45BB5F4658390E848DC246
8CCB412374D57C5C2BEDCE7D5B2468FBD36F04D94A194ACE7617D39EE4DE6EF8000423EC3BC5
98AB525DF7C69EE6E4D84D0E273C6A37171F4822E6E58BA1327FD3BDEC5A07D4EBB3210A93A1
E6A715BAFD21048D647250C57427327F6AAA9EC94EF4C02D0B4543D732E2214DB4C1789C5719
BF15DAD0AC396B6E44C3D300505D41D065FFA3097186E8F0432DDF5354D9770E19BFC00B5EC8
2707FCC078CEDC790BE1CEF954C14A9F4E8D4D9A1417FE80C8CDF1608D23592512CC9A79901A
901224F6AB4EE9EF216EBEBC24A5164C347E4A7A05CD4D3E6C08B397A72645B488B769B1E71D
8F90649B909E3A46F957BBE7AA9ECA11D3E06D4BD8E74A3BA41A4C566A62294DE42712B39DB6
F797EBA50E081EDC35185218C1C832B4FA8CB9D272E36387645DDAC6D27945DD043FEC164F9E
6F3DEBBD4F1D0FF3081F014D9F794D764D128485D390CA7056BDF663E422F59957894D20C8A7
11E852619A5832BD6BE579EFD04BA8082E5D5355A013DE21FB4BF4D606EA7D8FB779D6B939B4
CD156230ED0228FD8653F267E32521C1F7AB7107F1DCFF600A8922D2BD4E32D753FD6125DA54
692D11D8724DDB81A6F34434B48EA578982D5F57A623492712C805D86C8FCD73FF3553294D5D
1CE3694A758A4FC82FC021B2EBDCC1694E1A928353588491BEFF1F12D9A3420C343D6C9D552D
C54B091D2CC6F489D7ABC6F2A7DE424D487F02B75581656F566EB20F3CF29D87E5935CC87C27
CA01A2C7D70D7FCC2F4A776EB82B0C0CCADB597E6468319EDF9287983946996CEBCCFD0760F2
B549F351057110BC4728EAC80A8E95C8BAAE02F665D2950B7F866F9878E681A808E58D5B0186
AC743794FE0592545F4B4DCF56C8965080AF09DCF7CCA3B7C0219E5AB4961C7A227FF21613F0
77AF51259E4D4CAA6E1DA10FFA4DEB51C6F32B94815FBC6A4342BF4841FC820C809CF96BD27F
2AE86E00A89E27D10C004FAB2862265E3396B4429898C0E1BC65D15AB2B54F3D9C4BFC5B58FB
90B3505C16E24E52FC20635D20BEC6642FA529EB0FC402E0F451AEEBEA625126F3AB06615344
713E29DADAFD91987B3EDA376628DEDCF2E167BB514DED28BA3FC975F846E695EC3DAB298A47
E00BF9D8FD5B2308CE6072CB3CA2A7E419A19EC9A8CA1F51894C02A496B3350FB82C808A00E9
30E454D49B605C085C8CBFDD7E6FE84D7F2531EA89ECC6DE9DF07015974E274C65DDDE3F43B6
246FC5028777A056FDCDD2BD18C7C5C6C9678305C084800CC7B27EB5E810751B2E6460A6AD4D
7D02F855BF636709D0E4A0CF9B17522A21E5B11F347DB43DE175FEDE90BCAF00F64BE6B66F14
E35D8A3AFF78DA9E7FDF389BCDD925499AAA60C0D5F3124AD520CFF5BD62CBCE2200017F587D
740A1304D3E845AEDADF89AF84AA077267A4E9931F28981F9535CFD5C9CEEA99F47B632BD74E
C3D2A7AC2B3C4F8063C5BDD3E8F9E4E4063D909D15DAC2C77DEB976A26D282B2164D18B8537B
C2D7B8C3E6249942D951CBF9FDF19ED8698A63CCE2A4DC09F2024C5D4803F16161E4025B34E7
DE07F9E2DA623F21696D6E178DAD7F774FE883D4D9A0F65602DB361F98F97BE57B2B39C9ED07
A05F97FF034B1EDCADB27EC18E2BFADE0CE20E324CFB56A1F2DE75770C06AFC82B433528FBD5
FE6EA3AF6FA27B516933BF173955A86A320913DE0F6F503827AD79D2343CC18D03B728C9F85D
8B99F9EA2E30C8E308A063D6112BD59290DAEDD35C3F52458C562B61AF520C6BF4E7CD0B638B
9F18897EE0B079CF5022E248C8B4A93B1CD49BD65A027D57AEE830D82A066089A8759746C920
B2B5E8EAEB4343B2F900BD8804D3E463FE3E45383F83B03300C236BA388BFB2A30FCF4FE477E
700D11788D702359CC53BDE2A3F33AB9EBBFEF785DE43AFCAE38D33B0156077CD385A1736DCC
AF56640152A5010D2567D1631755D701DED76A7F464B4ED39231AE091F7412898AA5FFCB1DB1
73C0C041F0125502090EC9D95E6C8286750F1C218BED26217B34C1ACFF8D53578DE104A6C432
7BD69875E2B913C6ABCDD2FD15F5C0F79F2203CFA95518B764ADBBF319361D93974E41317AF8
D66D50C5C906B600157FAAF99BD1CC72E5DC290C6CEECE23B70204BDE7A6476A2EBC29A43658
3469EACB167C30F7755693131E4106B4587C048ABDF83BDA29B5147A2B2AC963953DED5F8BFE
382B210E4F1AA75BAFA54B7C0CCCA2F757C7D4BB7EB82049F6A373725041AD87FDDE437F7568
3B24D7C7E83CC4DEE124C43B32863B3C63B60A47A79785824508380550F49DF8B68464BB8EAE
E23C0AA0911FCD9708A2158593B3D309CEFE72041A8B5932FC286B1AB87FAE541A8C021B306D
D3D5A4C24CC5A964279010F52CB2E159514BB86467D45E88ADE94AE32BC863FC31809212BA2B
FABDD2EB241B454E875EACAF83A3A236ABA8A5C76B0F25FF7EC67C2FF8D356F76729D740DB4E
452759067C1EA22CFCD1734BD7A6BCA67138875796D7240D4C517268F511478F961BFC861397
677261A87C142B1D09B7A67CA9B20DF6DDC817834CDC989CB43217AF3A3B2558293F4C00176A
4A110C4464B6AD520E08C2FC5883BBE3B91DFC5A312205E2254F2B596680B0220CF71F715C9A
6DD98D4B69D748B23589F7ACE41DB514DB186585B32C9927502590AC499721E6FB41A11F6842
46F55C364D1EEE28603B7969CB3718E6A43756F4881C816A73D3AB5D941401C734313BAAF956
9A89A1BE8DBDA42C80AB8B69509CA6642948A49DDC02BBF41609EE91469100B35A705F032588
AFB61B7F0908D57C855F79A99C694D8758BB022E2CB243F2D37939D549256E3881C81C696BFF
31049D71B15D57CAB7DB62CFD3F924D892628D30A7269F454173B65C6E624444BA0258C46AFF
7D4DEACEFF61A65A3E76869329A2DB52821D642C2CD17654852B31430C285A148C9C13BB2074
5C31091F081F97EE1E5D9BE0DD6E5CE11C1AF541BC7FACD21557BF1A0D716EE22820E45915D6
CA98017C7C118D2C44318886A042C878AA6BBEF87CCDA30F4A22FE7692A2FBB94BAC40A0901B
02D476855EDDF09017DECFD3AA6F15E88C512282ADD2DD1CD21F0B308526D3CD24572BA500A2
20673ABA296CCF8A73CE7778170F9AAC9A988AD6654215888A2CF929E9F0C788053F824D7EB6
4AC0EB8A8FB77C7F8813609235578CF81D0E44972015E2CD249A8B173B2085B2BADEFC52BC06
59E72F76D393FE2FF271263767A71E43DE0EACF143132A6E16F076D4EF0372266407569C3BCB
448E01885E90FC562B903C9B3F4E3EDA9A10292628DD90361D6E260992E22121120881EA2FC5
3D16A6947D9AA582567001910C9019348D3DC92E5AFED308E7219DF4F6870E360036947E98CC
81633EC1253A2C08C58713B17F7AF58FC21C7BFCDAF7C603091D638E36A35E02985B62C869B4
0A0D48E7EA666D50F2ED245E9C917159FB7D5690A84FBC376192094A0DBCC7AA7E275D67140C
16CC12C7A0F7A3991942CC0934C55F73482EA940FB77BF3638175EEEC7E0C5BCAA85CB966B1B
27A6E4F41AA194E3BAA2429227DB093617AC18207433811585144BB91DF29BEBF564F30001D5
6B6BF8BBA894357AD7FB92FC402AFEEB58ABD2C8D3D55026E425423B07C35EBAD9A3335AC8E0
C4C21A2BB9B1494A567EB5BD5C4CF0A320F6880964D8EEB164C21412372446EE7C4FE288170C
ADAE0645509E8354E9D8E11A2DAC1917E9D22CFB3F8554B6AFD00766FC93C97C92099FFFBB02
A1728E44EEB756AC71F71BAB753040AD624465703440BB2FB8164B9A66B7BBD7087DCDF31221
C7559BAD09ED12395649CC78B2DB97E23C96FB3DEE1245A0A7C9440176ED5CF2A9DF45074075
7EBAE0DF23598373C8FDE9964ADB2C72A1FF5DCEEDA2623539C9F60837DA6D5BB6CB0B5D2BC2
4CFA6E77EBAD46DECA539B1761F9A89ED2E0A2D3F3D92FC8D6A4FB4297DADDBE6B2A466463C5
F3DDAEF789F1B362327BC0494AE7680BC3890398E433D00BADB61B460EBDD35184A15A074F0E
FA9D440E7A4B1498766322653300EB9BAE3819288461ED06C676DE7CB1ADC7FC86A1D6ECF8CE
F2BF8FDDFADD27F88B17869E8436473ABB44938B375412BAD602672F320724A695382FDCA77C
DF0D68AA6F682A74AA824B09138054F203C65BBA0493224FC452298F316E3D7298511397D813
C540AEA141F532055473F721F2696148E110CAFB5900471DBCCED34A569DC3C3D38CBA61B2BA
D0E43526E9E003A585F2BA5E1142C7A6DA76BF86F7945878EBEEEAE799E3F0EF8330ECA61856
236856C870B2657FDBFE573BE7C0D07E326E0C027E18432FC9564C5B1C100219DF0E19AD1843
EF5033244F25C7D959890B1950D9711C705DA8034438D719A2C2BB033B2F85FF25C51451A002
BA514D460FDB4AF404A4A1E7D4ECEBAF666F0EBDA7814419ACD76B26862A0C5C9F58C7206363
C2D66EA809EE59E83DE69C6ABB6694ABA49E7814911817DA0D0A3EF6DF1A67D716B8723799C2
089101B5EDF38723386F524E4AF6AF3D70EC98F06EF95F5820D46068305F0390E60D2BBCB9AE
4D642E7CD064086D183756E5C38310CA8C874654F5721C65B20402C02EDF59CC2149D6F4C086
05DA2BA6DEA3B60F32108AE4AF98BC0A1272F1306767691C145F29B14B4AA67582A245276137
6514CE182661CD7E3DC1FFD5656A5373BE74086546030A42532CD18EE23F01DCEBBC33EC39EE
059A8FA3072CAE0DC97361BE4CD8BDB5DEFF6611AAEBB31EBA176BEB2111791F741BB43A2531
FF6492DFA5D987A82B8A5DB66D069C64A49F4499066BCDDB2ADEF701CF14EB3C695AD187FC8D
37E11ECE364B08EA66FB64A96678D86054C2868A5792AE3F1B13526000D7B59451497F795B81
14D25252EF6DA37A4436A358C8D1647586C61154BFDAE2C5EFBDF320B8C6974190384B5C58C6
27F39194A07B96B3FF181058A150C2B174BDB77428E81C83280EFBF3931C262875A9A13FB025
41B4CB463D5DED7383F95F409660A55541ED6FD2C8C22FB53A9ACF1ED9AC73FF5FB9FEAB77B6
40C7537EC8A9D8E611ED7B56AA257918EF503C9B70CE423C0AAC62C4E73A9BCDC0BFB8C3A80000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000

cleartomark
{restore}if


%%EndFont
 TeXDict begin 40258437 52099154 1000 600 600 (slabfig.dvi)
@start /Fa 254[59 1[{}1 66.4176 /CMR8 rf /Fb 205[30 30
49[{}2 49.8132 /CMR6 rf /Fc 135[40 35[41 84[{}2 66.4176
/CMMI8 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop 0 TeXcolorgray Black -128 -128
a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -128 -128 a -128 -128 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -128 -128 a -128 -128 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -128
-128 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 627 683 a @beginspecial 0 @llx 0 @lly 126
@urx 98 @ury 1260 @rwi @setspecial
%%BeginDocument: slab.pstex
%!PS-Adobe-2.0 EPSF-2.0
%%Title: slab.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Tue Mar  7 16:53:44 2006
%%For: gphani@gandhamoff (Gandham Phanikumar)
%%BoundingBox: 0 0 126 98
%%Magnification: 0.7000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 98 moveto 0 0 lineto 126 0 lineto 126 98 lineto closepath clip newpath
-43.7 129.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.04409 0.04409 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
7.500 slw
gs  clippath
3705 2685 m 3705 2625 l 3553 2625 l 3673 2655 l 3553 2685 l cp
eoclip
n 1035 2655 m
 3690 2655 l gs col0 s gr gr

% arrowhead
n 3553 2685 m 3673 2655 l 3553 2625 l  col0 s
% Polyline
gs  clippath
1065 885 m 1005 885 l 1005 1037 l 1035 917 l 1065 1037 l cp
eoclip
n 1035 2655 m
 1035 900 l gs col0 s gr gr

% arrowhead
n 1065 1037 m 1035 917 l 1005 1037 l  col0 s
% Polyline
n 1485 765 m 2745 765 l 2745 2655 l 1485 2655 l
 cp gs col0 s gr 
% Polyline
n 1485 1170 m
 2745 2250 l gs col0 s gr 
/Times-Roman ff 180.00 scf sf
3735 2700 m
gs 1 -1 sc (x) col0 sh gr
/Times-Roman ff 180.00 scf sf
990 855 m
gs 1 -1 sc (T) col0 sh gr
% here ends figure;
$F2psEnd
rs
showpage

%%EndDocument
 @endspecial 0 0 0 TeXcolorrgb 809 666 a Fc(x)849 675
y Fb(1)p 0 TeXcolorgray 0 0 0 TeXcolorrgb 1272 666 a
Fc(x)1312 675 y Fb(2)p 0 TeXcolorgray 0 0 0 TeXcolorrgb
726 54 a Fc(T)767 63 y Fb(1)p 0 TeXcolorgray 0 0 0 TeXcolorrgb
1288 435 a Fc(T)1329 444 y Fb(2)p 0 TeXcolorgray 0 0 0
TeXcolorrgb 1007 550 a Fa(\001)p Fc(x)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF

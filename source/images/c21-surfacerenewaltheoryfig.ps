%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.995 Copyright 2015 Radical Eye Software
%%Title: surfacerenewaltheoryfig.dvi
%%CreationDate: Tue Feb 13 16:23:16 2018
%%BoundingBox: 56 341 400 736
%%DocumentFonts: CMMI12 CMMI8 CMSY8
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E surfacerenewaltheoryfig.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2018.02.13:1623
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 919 2014-05-19 18:42:47Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.23, 2014/07/31
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def

%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 919 2014-05-19 18:42:47Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /landplus90 true store
 
@fedspecial end
%%BeginFont: CMSY8
%!PS-AdobeFont-1.0: CMSY8 003.002
%%Title: CMSY8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright:  (<http://www.ams.org>), with Reserved Font Name CMSY8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments

FontDirectory/CMSY8 known{/CMSY8 findfont dup/UniqueID known{dup
/UniqueID get 5096649 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY8 def
/FontBBox {-30 -955 1185 779 }readonly def
/UniqueID 5096649 def
/PaintType 0 def
/FontInfo 9 dict dup begin
 /version (003.002) readonly def
 /Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY8.) readonly def
 /FullName (CMSY8) readonly def
 /FamilyName (Computer Modern) readonly def
 /Weight (Medium) readonly def
 /ItalicAngle -14.04 def
 /isFixedPitch false def
 /UnderlinePosition -100 def
 /UnderlineThickness 50 def
end readonly def
/Encoding 256 array
 0 1 255 { 1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 2 /multiply put
dup 3 /asteriskmath put
dup 4 /divide put
dup 5 /diamondmath put
dup 6 /plusminus put
dup 7 /minusplus put
dup 8 /circleplus put
dup 9 /circleminus put
dup 10 /circlemultiply put
dup 11 /circledivide put
dup 12 /circledot put
dup 13 /circlecopyrt put
dup 14 /openbullet put
dup 15 /bullet put
dup 16 /equivasymptotic put
dup 17 /equivalence put
dup 18 /reflexsubset put
dup 19 /reflexsuperset put
dup 20 /lessequal put
dup 21 /greaterequal put
dup 22 /precedesequal put
dup 23 /followsequal put
dup 24 /similar put
dup 25 /approxequal put
dup 26 /propersubset put
dup 27 /propersuperset put
dup 28 /lessmuch put
dup 29 /greatermuch put
dup 30 /precedes put
dup 31 /follows put
dup 32 /arrowleft put
dup 33 /arrowright put
dup 34 /arrowup put
dup 35 /arrowdown put
dup 36 /arrowboth put
dup 37 /arrownortheast put
dup 38 /arrowsoutheast put
dup 39 /similarequal put
dup 40 /arrowdblleft put
dup 41 /arrowdblright put
dup 42 /arrowdblup put
dup 43 /arrowdbldown put
dup 44 /arrowdblboth put
dup 45 /arrownorthwest put
dup 46 /arrowsouthwest put
dup 47 /proportional put
dup 48 /prime put
dup 49 /infinity put
dup 50 /element put
dup 51 /owner put
dup 52 /triangle put
dup 53 /triangleinv put
dup 54 /negationslash put
dup 55 /mapsto put
dup 56 /universal put
dup 57 /existential put
dup 58 /logicalnot put
dup 59 /emptyset put
dup 60 /Rfractur put
dup 61 /Ifractur put
dup 62 /latticetop put
dup 63 /perpendicular put
dup 64 /aleph put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /union put
dup 92 /intersection put
dup 93 /unionmulti put
dup 94 /logicaland put
dup 95 /logicalor put
dup 96 /turnstileleft put
dup 97 /turnstileright put
dup 98 /floorleft put
dup 99 /floorright put
dup 100 /ceilingleft put
dup 101 /ceilingright put
dup 102 /braceleft put
dup 103 /braceright put
dup 104 /angbracketleft put
dup 105 /angbracketright put
dup 106 /bar put
dup 107 /bardbl put
dup 108 /arrowbothv put
dup 109 /arrowdblbothv put
dup 110 /backslash put
dup 111 /wreathproduct put
dup 112 /radical put
dup 113 /coproduct put
dup 114 /nabla put
dup 115 /integral put
dup 116 /unionsq put
dup 117 /intersectionsq put
dup 118 /subsetsqequal put
dup 119 /supersetsqequal put
dup 120 /section put
dup 121 /dagger put
dup 122 /daggerdbl put
dup 123 /paragraph put
dup 124 /club put
dup 125 /diamond put
dup 126 /heart put
dup 127 /spade put
dup 128 /arrowleft put
dup 160 /space put
dup 161 /minus put
dup 162 /periodcentered put
dup 163 /multiply put
dup 164 /asteriskmath put
dup 165 /divide put
dup 166 /diamondmath put
dup 167 /plusminus put
dup 168 /minusplus put
dup 169 /circleplus put
dup 170 /circleminus put
dup 173 /circlemultiply put
dup 174 /circledivide put
dup 175 /circledot put
dup 176 /circlecopyrt put
dup 177 /openbullet put
dup 178 /bullet put
dup 179 /equivasymptotic put
dup 180 /equivalence put
dup 181 /reflexsubset put
dup 182 /reflexsuperset put
dup 183 /lessequal put
dup 184 /greaterequal put
dup 185 /precedesequal put
dup 186 /followsequal put
dup 187 /similar put
dup 188 /approxequal put
dup 189 /propersubset put
dup 190 /propersuperset put
dup 191 /lessmuch put
dup 192 /greatermuch put
dup 193 /precedes put
dup 194 /follows put
dup 195 /arrowleft put
dup 196 /spade put
readonly def
currentdict end
currentfile eexec

D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A07B684C079A47
D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81DE96489F740045C5E342F02D
A1C9F9F3C167651E646F1A67CF379789E311EF91511D0F605B045B279357D6FC8537C233E7AE
E6A4FDBE73E75A39EB206D20A6F61021961B748D419EBEEB028B592124E174CA595C108E1272
5B9875544955CFFD028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36
AD861319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D80B73E7B6CB75480E1D77FF
C695988391DC44AEED8CC947B3D7E198B9620E2238DB3A2819182F0314498B8CDFBA48926DA7
21920B221FB33BC21A8456AF10891403501D0F6415F07E041AFFE109F640E54FC1A365674711
EFF94E752652A4C8DA62CDB1149DB8992C4A4BD77A06E81E93C5698C05DD02F74A0756082738
BDB53003B483752AE498DD718AEA8F3FB5A6B7E2D2AE8F309065F3D556F9A34AB90C88833A54
295E0982209C466A301BA3372AABEE20D862C6DC6B6FAC1463C8CBA8AD766ED1B4C9D7122BEC
B4E6ABF558D8AB5281C35726BB8D046982C0DDAE17BFFC9394125E4E84C0B283977D31460BA4
8C54509C43FDA80274B0EBE9C1D5AB7FB4F19EF939B10F1D6F115D580F8C7A3F631746255A1E
632C41FBE97F1E64F672E3D3D0AB99751E07BC69FE1D54C9745F0B28CB1F0D40937A616908B1
502A9921941FE70A56E3BD3438B243C08A195553B32F18560858E92108B2CB7CAD5FE4045CE2
6B6BBDB69599D5BEC2BD2DAF9CF5E912622E90259B896D3181CA6BC45CFD1D81B7EBB88FE64F
B9F5E51982BBCE745EDBFF3C743512D23C151EB44E48A9BD1C99DB1B0C81E1139261A642AD01
9FBBFBA94600DADC01216F010971ED87B606B9E9A3B5CCFABD2777FA76B1CD9AE623DDAF15A0
08149518F9A268B25B4C6FED7658238A146FF54C3818ABBD02393F42F27B5E9D504186BBD082
3575C4732C03A28C6FB6C152AF5AC2152BC4CAC96EAF1DD64BFB58EDC38F17E21E6827F7AA2C
FCF7A8FD9E1A6C350C8CBECC67A8B6CF445B5821B5D4E7A3207715EF645680E9EEDE951558D7
3322AD1AA8B3C43EC0964C8DC44F5395C0462E9EFB4F011B3CE322261C6A37C2BE689DE72ECD
976A1847E5B71D7F3E70C401EDC739655581DA0143C9EBC53C0D43380CA6BF5D72927FFF3044
23042CDE0FB85439EB20823978912CB8F604A19B28C0A4D461A895AA720555887C10051D6B00
F04C43FD724C1C66EA31764379A17B5535298FB32732A0F31FDE848C6FF8497433626CE84A33
6528935D07777AACBE751C6C5696C929CDA651BFC4E073C89A33821C0AB0D4E3A182493DFAD3
0FB53F7C7B4617DFFDD02DFDA21F7DC71C3F8FE31B9E2D9A9EA2796386016ECBAF971AED43E3
3B731C9D19F448052E0E56FE85EE37F4C1EFB6FE3530D03E0D114646CFDA21B890AFF757CC81
5437AB387E7F8790239EF2654F2263AC4D364DFA2C28D190BEC7B31C1D938421E5B9C77D3305
545EB634FE2C5F25EE2FEF65E0E19508AAFED1BED362080910D14C5677C4666ED1F6FB81430D
A820216DE33AFEC9297C347D5BA69921469ABE714EEB9BB08034691DD56F5E4DE3F22B08D448
5800A4A8DC67566160F47A13027F3FA0207A4DBEA07383BF49CC7E60736D3409B5608DC4C25A
97E0DF02E6A6D1F7388527CFF8D89A7C98136699D50A9F9471D42B1D6F45EF98EBE41357E310
E94A1CA65CCF57CEF197AB66B6F75763719E4D4179F279832BE007AE0A4C5073D4CC4F5E120E
9B26E3F10D0714E748D6893D3D5C5866DFBDEBD902B1B3EFE1F2ED62BAB179E7BDB707A3F91A
B2A7926A4F3C110BBFD0EA4E5020010A1A0E101F161FF627188441FD04208EE6A304731EF1AB
3327BBE7F56E1A09408BDDA564110C9EB48378E3FE5BF5C76DB516E8A4CB5C43C9C8EE7E7E57
C413DEAAB4EFCAE557ED66656EEA8A1CCA16EBBEAD8EEB0ADC6B2332ED275F9A8D7F16504725
CAE7A53936B585DBD1DD5E8A902E77143BAA6BE6298A86D821E16619760C83567D19437EF3E3
C8BFB6DB66115D7D283E79EB56BDC5041CFB6C330E94187C33979C0A0DDEB353D4F50FAE0EB6
87498333E78284D542672F3BE0813D379B384BE83A11A8C0D69B4DDB541FA22C8E626CBAB920
AD70995AEBAB6DAB0E2A2E3108B0321F4B1C85517229AF62C225575F0237CB8D25C77F5C5192
0133941906A78BC0A17C58529B3C63F83A93DDA9EC5B10305014F48B923CF07863C86AAFA637
501AB84AB5DD719C0E5B30726207082B0466614B4AADC4A63F89AA827A9E8C80615B025E5C16
F88AFCF23F76CD1DDD0A6F8697FB0B152B18282291AF9807D6F66323CB52D8335D2C425AA521
61EF2CB21DF07B113ACDF2941F1D575F3240C57C4F6C7EF2D8DD1F73BBA8D0EE9F2F8D8D5894
23A7A0CB5F1218A51B8813DF5B456ABC5814EDC7DDF64D40873C37AFA38290085AAA62EBE864
21F442E1106FFC60BD37366E51F289A675AFA96AD60DF567DADF9BA36EA8E240CBD539531BE4
8CF37C373925DDA97621063D1A072740CCD6A8B2DE97FFF642E4166072782111E956BCAA3E44
3ADD83BFDD9F8359167CA2121FC6EF8224301DD8D4FF71935E278246414AEBFFE76574643249
E1372DCA414F4F73ECF590744429A1259B3D5FFD7E5B1ACC6B2A6550E9D25E4DE83A902FAAA4
D83DAB4C062EFFE7CF3B9FD5E5595648CE50880CBE18A7ECF2351EE77BB79EFB5F3C10D99D5A
A20C9BDD508DDC4D0B5C53E3765E97574D88813C8BB9FE235CA6F965DAE3D6E0F3A930B6E3E4
8FBEB0A16D07FBB971D2BF10E6D6349CF57EA9F191818E565F7F75CA7913D265DD6663D92E7E
2343D835D7CD59B92EA281AEA85C1E931A4C4B5B487A9A1FF56C1B4C444927BCA8838148B1B7
5DED8D97461FDA12DD96C90DA11EF2B57651A41E593362F5FA13969BBE5772A6E8599D30D17D
DD9CC5D635895E145520D637CAAC234FB2B9CDE8962DD19D983BEE493798EC822440F176B15F
D8F44CE2973CA8F885B9DF7C6D423429470334E36B95E2FF0EB3F1FA51C757BDD75F4B2F87E1
AD51681676ECF4A2792CA1CDE3102EFE11FEBC154E9398FEECA566E62F620BB09BF2397BDBA7
A0987320496265635619177BDC265EF0718505327364340B4E6E7D7D152A3B740A624141EFD1
156B5258DEEC81276E986325214DA6C914C8D8823799044D52129CBC897BAAAD95C4DBF74792
E7DD1B6CB0C9098550913DA3A12CC1D392929009F15DC0CFCAD6E0947D6835AB42DBCA0E4C74
EDB15DC77B741CA937BB7B83363E7A0991AA572C133912B16B32FEE3E85060CA313A93F7A149
56A7E407040CFEC7E74EC045E3330BDA6757E661C47AAC21FCBC876A5E69456B02CB5466EC36
6A3870E0B9D82AA65DA0F8082D3CF985B9160D7EB9DD4C3D85FE2B4E8D3A0A7C4B4D566799A3
1EA22E39D194608F05943ABD343772D3B224D26610BAE41C12647B606665DD84F22F4BDC27BF
20B2BDB8960CC95B7B672553E3B6738620B5BD153627CE543016D3D606DAA7FFA12CAD37AB08
870C7D692753C7A6A89DD975CCB958E60300B1E72C9797840A2476F57C96C11639F7F4C2025E
DD776082BF76122E67349FFCD6A3CF8BC0C9BED0D45E229338627CBBAEC06991AD94AB34A28E
EB48E3186C168B1EE251CAA32095428D622D0E91A9C881148C1E4A806CDDBD05DC6C17E44BF7
9F436B7B1E7BEC49791A072280CE1AFF8AA5388CB883C72D7D5509EF65C048D3286A34829ED5
D2E0252106884F48970FBE05EEB6054C1647DB7E0A45DB09B0A6181D28C04815F8EE265F6147
E8895225754020F2165842C2242983008AD37FB4431120C8D81B3507E917B80B0E3E273D23DC
F9E1CB287BF6FB0765E20D9F0FAA6BF7B15E97273BB8D3D4D4E0294260B884B5A20D2A606B6D
6D493CA72E56CAFFF3D8E569220221E1DD9F78014DD592A0066516D35EB7F5B518C9A6440473
884CF2013AB255A0E0A291C34B68BC3BFE9B5F0FFD6DDB74FE0D2210FE0F1A096FC26BF9338F
B52182CA37EF3658C41359019423A7A0CB5F148580BE8019823B3038EE842D77468819D5B619
BEE0FA3E3D6D372920547A8AC6A763AE0FC11B718ED4856701169B8733D08D5BEA726107693D
50513AA0204B4195D9B878F0CC0DB50348EA7161838EAD092B9A9F44E7A1E63FF4E1C4D86EB1
AD24A00F3CA93617B9A3714783867787F2D27C340CADE07534B3E2845E09B96BDB43639C0E11
38123C368FC6BC3D0EAB9E07736FEBDE0DB0BB53BDE0F8C724BC8FE11A321DD3F5E3E9411F7F
1C60C35080663523B0276AAB092723BF2091CD26FA14E3A8166593E43942115A6604BCF9FBA5
05D52DD3A6E85E97F4B32A8AEE4C0AB9952B9165E671A7B6B150359F4DE3A7FB8C107B04EB0A
48E1DF9AF33851314D45644160EA1AFA5999F96CC4B5C22DA4028224DF5933A164EA6E8B1948
3E0D3711B1B746FF72C52B5E277C943278AB7B6593558F9FFD97BB7817F6A411335A41313330
B08D30AF5761156463B6F3F26502C864FD54919EBB0B02CCE402AA717048EC753A03DC0C2B79
AE7FB49A2548335713B67EE3552F08A66F22C364CA2D18AEC83DC0B5130B9B03C48272D9EAD9
7D9C26F1E01A4962B31CAB6E79D846A145F35D04E3618BD0FED3E040226BB23BA4B011C15F51
E8FF34583810140E5EEC90F29CD3A2C987E46ADE3100CC938193C98F6D78D2B716367A58DD90
18AD6CA2E76B7F9829C03B69C13036F609ABD1865F4B13FA1FB3ADEF31036B69DFB4C3F51D4A
1FA5F1E2305062DBA15273B2945B2918CF36E57C95A03E73D2673E30D07FB6AFF80FD325F80D
1A950C7C120D4882DD63B5B3B2B70A3CCA1B7C1DFB09574401864CA4D8747098AF650990593B
F810CF16310783EAC06D380C7AC09F5F69493148961376A2FC127D5D9A63685DD4534B7BD02C
DD6692DDB12FBCF5F848929D06A61A2CCA689F0675126B16B339AE7FFE3840E7090301B44C2B
9FBBDEB55F5ACE0BD2D78D8B6BD5838881F0F6B22F55EE48505C13024DAE55BD3E3611E3D553
D5DB3D9B3E39BF06719B5F9A35EAA118AAE982F7E9ED6A11D880A9D26B41AAAA6D8F81D27407
A44D48CF1861053F6844C13159F622FB7734F889D0BE34ADFFC987B1A97B8C79EAA64B2AC88D
3D12B6AAE2F2A972896221BCA1778B785AD555D5F848DB42EF9D17BD65198F0A026E78D0BCD7
BD33B25770BC9DA311B631BA5B8F125A5A1124F1C7B547961670C36C8C6B8F5BC7B2E1EDD8D2
40000222DCF2E5309B73123B4CF28819A802D210795E830EB7D89FC57AAF563FDA5B92EAB1D1
3C38FEE35D7F5496F4027CD700FD32080E25041A00491CF8ACBC7F4D3A9FCB150D1FB8B79495
6BE7FD8B1CDE9944C05928DC5264D56127F3053CC6E8792EA11591423398DA543E7EC9C8E5DC
4FADA3AF0C35783712340EAE14AB146A21FA6EDB715149D7E6E1D79079A84DF374A758CEF5DC
E42FA47CEE5481F1BF3D956AA3EEBB72C4DF50441EB147C012780D251FF14F328FA92471AC52
161E45FDD19C4A56FF865C201F5B2DE4222E764341331C09DE41366DBA887EDAC22FE977E98D
8530870BD59412B48B47C96C2D0D54C18D29B815C2C4493D196722AF68A4765E19643D21FF75
92BEB5E16768266BC3308F40A7E92F4973E068CDA3D106AF497E68D0FDA189E77FC088121CC2
4726CF4843F7AA1B812341144511F777FDD08EB4D6041121DB9F125FFDAFC5C21C0E19037EDE
65FE6C12110C237A0E0D926C347B099F3495A965CC28F840E4FD8B27D16CED6F8A454B9850DE
067B5C3D9C723D9A5A6BC33D1B16237A35E0A3E9858943DD336AB30E52BA04D87489ED8E38B4
6B812B7BA8CB5CD9FDA279339DEE7482B0FE2E103389817C3D92886F2363D91CBDA8DE65CB99
31B0884510860CBE6692BE40AD021F74612866740B35EDD68BB0CA605AFA1562FA3CBDD8997D
5069E32046B586D9C2AE1CCB663F95B486A84F593FF04B16197D8D51B2B0DD1D90794DCD478C
498A202B21C889F9A186D04285839E5A5EB7F935DE3B3ADEA3482F201C2AF477F705FD13DE44
F8AB9A47BBF4DDEB4F3C921BF74AE8FF78DBBC9D530115F99AD44A3E0166653A21358CE9F797
7645AEEBC575FB0EC4189E9B3F93BC701A1D5BEF126EF3F56DC3DD77DF8955F75C0785A520D6
A51EDBBA8C2991B0A21AE205E06EBFCFB8082C9AEE2C24C956F39FE841B5C19517CFF847FFD1
C2A38C82CEFFA490DECAC789C4974A093522A0E50302B136527831FA46CE7CF214CFF6C5650B
D409F54C65F942D1AF658B92C94846A9C7491E38F01EAE0F90E7B4C4E85C466CA42B084A8D24
AE2CFAAAE744F9695F9D2A12A6AAC8777D6A2E19D1227C6CF3984795D0E414BF4A4E2D40635E
260BE80EDD64A82C5E74D019CF86E89E1DE9ECD0CAF2D94813C6BBC35F7EA01E7A115F2B7EEB
ED113B0229326BB2010219C8ACAC1E869F9D1FCC5A518499B286D39F62AF42E7209056D22670
9897FA8AD671B461377E330CD19628B5F86A5D0F9365D8ACE0C543D2564382BFF9FA39B2C662
B986F710312DE9212FEC64B87BF67F046FA24973B774F533BF655CF800B00E7906CD6AFCE224
C062696C926F9BD48CD1B46E7D2AB92EE531C7B4AF8C61C9C5477931A67201C2990BDD8DE603
7E2F5DA0A5FF116F57EEDB599519B69DFDFCE275A8C007A53D29DBB58E42FBEEA9525E1E0D88
631A3FE0102508F46716FFCF7DE61A46DA6A2F2915B0CA7457E60F226CB76F1A847152452F5B
96365D374080EAB6FA4A25F491B86659BEDF0E1620BB780A27FD3A04084B68A195442B51909C
C1724E52196EF46672962C6869E626E9B591C03221AE5B29A6ABB0515C87B134BE34C0D5D2D5
F0D113FDBD906166B2C8337947EDFDEF03E3EB7B40E49C3366CDB0A26FA7DDDEE492339A3C5F
8647AF875CA73C8032103A3637220F31109518613FF07ED8552858A68F7DAFE88E54997CEB32
2ECEBF97EA3344411DD2695804B4072EE189430B5F217F200A0B231F8AD84B18325B35A68A75
DE0B7091764F970D583CD5D0E4C2CDBB9817DCA67AC8ACA4C0DF74DBB2BE545744B703204937
FCEB48CE5734F7D8317486090677FD34946C1EE7D71D35BB40A2F5BDF96149780E75949B7340
B2B9450F39111513C6240FAAAA19F433333959A70C18E8087F786302B6D637886B55EB18906E
D1F6E8681B552372287C3C86D79F6EA4BB0D1FDADE94A33B2AE3165836E5BB3F91B2DED0E386
B8304D94852AD72C9D3ADA2A39ED9FF47011014BA5953DBF0CE569159FEC8F11B42EDBBF0B7B
8E28633930A71408B0474773FE33B38C593E209F793A23F07801362CDFF84F1F0F061E16A5FD
9ACC2D7AFC7FECDADE3B9744AA20D3FC24B440DE6FD072224D6F3D6897337C8194B9CCBB6CAD
BA5FBBAB33887FDCA942D46A6AF9BD720DFF0A7AACD10106F1AC5AD013E836B7B084F3F373B6
0FF180CDAA74332A5761B6CE2F40AC4E0F37026B5FF15AEB649E121F4797D7BCEF96FD44456D
84EA64BAF0F4E9A557696E61819995C84C5E4752A8FA632A30EA35C29DAC3F22A77C6F7288D1
7BB2AC30D15FF7E1CBE7C2224BA8E0FE348988352F7AB442E2A0CC01C235914F847D1D998310
23CE1FD89EFEC83AA7E313131C0C197244B16C9422A86DA9F5108E51850E5BA552729B8BCD5F
D0E6FD6C4E4212578813498363705D3DC0D22B8A9B9359CEA826E1CD929BEAB754DCDF9DEAF9
652EE3E434DF83B888598ECE73D98E94FBEEDCCFD3E87B94E1A458D421435A0E5FA19398E81D
BA38669820DE1F9DD92607D7B8FD4F1C4E5BE5E9083F2228A9DF84B84C4456E9BF5995D70906
4E55CCADC86AA8BF34954675572EC33819B531A124373A56C6FE7D907D6577104F6CD1E56B59
F135072BC0B6C22F2C3E793B9220A659E44717F02156BD099F2B35842AF2260515B8279C954D
39C6883419911DBB9A044D0074F36E77BA42E7AFB41114CF65226FF4C34AA9682559E4C20688
1B58EA640A934223A46C1817A4F02A0332D4983EB7D654926EAC67E39C570DC7C507BAB3555B
26512BCBD07774642CBB01A1CD226A6F93EFF19D56C779BC2147D5703E9176D347395681D260
7BB4E0A1A7A244D15A93604E89803A9E562E03D4DB0D452EE6690A8CB7B10022545CFE3285AF
EDB8B5204FEC15DAF875C21ED5B60682F4DD99DD79D322DFE2ADDE1D278201E415739F257C9E
CB1D14FDE374DB1C60338563A8870B4E6EF25EE411B6FE3380C78DD7CFD0A1D3F3212BD35198
91D1E33D7035E50E7E2E4D2C10BF245BE198D10E75479894603300E358B3ABCD91CFEA299834
BFB2FCB5C9D08C668392C36B09E9D28B9FC63F2989AEA7AA02FF467F2D39D45FF3F928E5DBA6
8311C5658C2F131DCD25CB1F05ECA72D6DAE2C3C67CEA6A6915C7691B72AD442BD4A3C85A31F
8FB8527623E460E5F712C38F3AE9D1AD919106A4B50B237FBCED2C3606771DFB75A9EB0019CD
EE8CD6A9A866976D7C1FE5BDAC8566A883192F4BCA41F9CD074DF497A0A78C6286759CE76187
EA1350C84F0ADD27D50DB16C72F7D240D3EB76476C0F657DCE842DEF5D3E7D975D806E401133
7C608AC16A2B7E3B1C2F7F01AB6B19DF5B3185A8F212103BDBA39084D93B16220DB713D299B2
8E138E2DB585CAA17F17BB92C0BC289B8FA24DB24D98F1478F7E817C01AD163E952911888226
C1471BA66C8EB508D8EC09911CBD9A6131A2A7802093C5668BE1D5526E43E63CA7DBAFAB6E54
4C30F3AE4897B8CC595ECC2C5954641FD60725E18E2BEBC4FFEE9E132DE2FD99296583EC86D8
5E0EF20062F5F39AD30B4E8A46F30B0DDBC1ED616BFF5B8D35B003A2542189A6CFD80DEB73DE
9B2C38B81ABC0D04F3129DE31BCEBD69B71EC10DD1BE79F886394FCB9E616DDC025B272C5A85
88C306278C6C485D0A6DA431A337BA931B016921CC65104CC2897D3C7162AD7082E15A9252B9
F1CBA3C947F2635933ADDB06813915F4DADB2182C2D4732CD03E09CE5E61B3A15E894F069376
589339AA4E3F297A0F2C1AC23882957598872D90CF64E3BF4191F82272F390D91ECFD75AFE3F
BA184EC17AC1A94E38F0C02AED1706E0347403028B24818490F79945DCDAFA6240EE3E7ECC86
583488CC26A3469D56CF99E9B39569098485C656CC46860A825954826FE2B24EC317E895E59D
9F2E79867D817821EEE00452B9DAA3CE6B2495350A2B99E386723D9CB9BA2A4BB278CF45B49C
2FB814C64BCCE0D73E5DEF603DE8D17B814EDBE2673EDB790D8EA7C6EA97702EC66D4BB0A88B
52B3AEEC1418762DA5220AA72731742B913E0286AA1027C49929D6ED4C45DB44D1DCD069470A
A0EB18F5A605E4CC53BB132730A7CDE65B2C3C91D7D63200EF8750E4CE7E0420FEC748303DDE
D3DF0E31BA2295C1BF444107D51E83E89C75314190CCAEC9AAF4FF3A6CF2708125BDF195F275
3AD9E691741E902AB9B739AF06A5A2A3AFF79E9ADC4FEC9DED615783CC31176DC860234C76D8
E825E306852A14F5723BEC204D2F7CED868E44370B307CC2BAADB4AFD3D638D9E62FAFACD830
D117F89C53727BAB47699E1F1EBE0F04C4EF9F9A12DFA9965B47EAFA0C9BDD142A67366A99BF
55C10720E1D38A0780FCCEC8318B0D4F15209963D4CA4751C51D9760FE3ADE61DEC0EE135D0E
E45CAACF2BD6660854D1D69A6F57F1711734B0EEC6ECFEBCEDAF6A819FA9E1BA88DBD549EDC8
E549AC81C02A98FB81A8C63A18F3B7092E6FC598DDAE2FA172E7EA5EED3F788B32EF52A6A23F
C52E3AD5D3628B559BC02E2BD532066BD243CA91E7BBB0EA6A5126494D984A9C70C0CB691342
BF00D1A7948F05A278490235D6267A45479DB30E168E8039B879740BDF33A86194B811E9439B
9DC32A6386C1A7978F714DF671112E6732AF8F27A30138E1F6D8FF1E7B90A26D737B24BA77CC
B23A4E2F9A31FCBB0E253FCAF523F296F7718D2B1CABE23C4647BC6559C01A4FA76D0321E87E
EFB82BC4B4E9B113452C23764697702EED36C34221A80A610A3E9C57C0599D2A3B3F8FFAF252
BC5DE9FBDD07B9A83429B7FD585401F926360A3637E52557D1BB417F540DF457374CA1529B20
0561AE861591CF6E390AEFEBC08F2152830DACA8CA3F1146BD03686AEF52988BB5520F841891
A4AF18DE541B624A36C96896288402BADE9214D70BD5F9FAF61879A3F63C187E83269CE1C52A
1ECDF7A1DCE8ED56E059BF064861450AEC2CB5B8743FE4398561CA13216453EE9E55996BA7FB
2934A47A9F552AA5A04DE2C79D429E924971CD537492C98266BD108F5C6AD52439BC5B9607D6
F4439AE40D5E59D0F73581D612DE4DF10F3ADD3ADAB5F088711A7F67E8059778F9A9C42D936B
0E306B5FE0A0FE90B44848E230B6F573E6670E32EFDF476F3D382DE84856519CC24AE2D4366D
E90288B595916CB51531A1A3FC47BEF7E4BF9ACFFC8CABC4230728EB1AE550E842EDC9FCDB00
9276176BA3AA5FA4CF4A5997711C7A06A51C2046C77D17E66DB662F2D54D3B365E0590D197F1
564F80DF4696C48E764B37A80369824C7A2BB969A938E98FDEF47A3BA18C56E54039930826DC
B6C688D8416F345FE1D7403FE09FA20B3C72759D8DB75ACE8A162B3582B518231065103AB6B9
D9D0DEBB8BF4EE04C67E822D0AD445785F09FCC31A1F7EEDBF8D3DAF57F56996902EE342451F
81AEDE836FC475248592C2B6418BC45482BE7B25AD726E3AE9687EB7FCCC79751B5676FD562E
D8E19CD8AA6310816A580F64240D2ABA17469780CDCD4BF5720CA972FC360099B1DFAD5E62D9
BE54580BF89E9FD77DA11209FAA72A277F699F507EDCC0FD672E3C59E0C7692716F736A6D6E8
5E319AD5A1F95A997EE0D1A5DA70FE34A335BD4295C39374653D20C7BC774F0766C3763C3838
1DDCF02FD0E77EB4580DB3B66759A541AC93373741C91ABAF67B6913936681399B68A68E5B96
49141BBE104758B147BF670A5EE857B100E3AAAFC718248C7BE3D0556E1B2B1D63AD82525E08
8AF2A68ABE971F7587382C7B3096B63462890DF48B134E6B34AC044405EE1B0A96EEBDA48F67
4A50DC35111377E5634514A6D84DD677A254DC28F5AD0E3F704ABC067FFAC80854F508581910
70F485D25BAC181A7486B1A7C7B872AB2F649F08DA302CC001153666914B1D1236A09BA61DC8
B16F0A76D4B83EB173BC7292D473AFEDF2A6C23CF1108C9E6C846F540421C1EA54128B07FB70
9C24E2AA7CC9DA327320DD371B1DB5D24736BE705390F248E4F13720D1E118423F988044C8EC
469697B08ECE49410C9967CD2D01492E0DE27A76D1D7843578ABD862FCE19BBDD3BA578267E1
A25B4FA057A5AA6ECF2CE4C08796675FDFB499BC99AB91BB1FF314A8EBE7DA5EC7F5099F0A93
85BF59BBF8B6454C0A55408AFB4FB66D6051499003571C54A5D79C7D3B2C7895A0FE61306A90
77C569D91DA8DCEBC7EBF5A8A12E7D583037742C6883B6B78906D1F167D78E36D444BDCCB32D
59E69D84DCFBE65D41C4D644158343E776A12B0BFAC411F48DEEF692F9EF84626A5839B9315C
41E5EF1B9209DF83C4F9C3F46D23BF8CC1823F3017FBE0A26E94B839151ED1291D52E423434E
3261CBE78155D2ED9604422106AB80765B2EADB24A8CE258CDA7FF2D1642E5AD69FC8DEA6999
FBFDD82849114C8F73211127BDA0F71F4D3D46299721BBC15379AFB613158BD01D1B6865DAE9
940D687EE44BFB05A1D1827742EABF194C259894D302CB949C86FC7EFCCE49EE18C288C0BA30
08A692356D2F54FCAD702CE18D25A7D29B052E71D9B69450B496F2D77410D0E9825786588F95
7D7F19C7130248296F3B9C4C577B7FC0355B256C148BA798A0DD711DCA361EBF3D7936ECDA26
FB117567B16D879E9B63816D79F894B524C59C51346572CCE9D5E32160CEE200ACB79D60C081
752503BD1D57A7CDEDD2EA76533176291CF565E7EE984BEEF3CF6CF84697FE2354AA6C6C0C64
2A002A6A7DC68E69B4EE007DEE561A7B46601B6890776E0377FDEDB3836172514D1CBE86895C
2ECD434654301BF258974E79530D8B3F906F4965EF8495F59D459BEC69A717B68D80614E0160
471CE8CD4DAA0D499C7588BA367D585B5A5137B4E3E7A3D2A5A845128798E7478D607177A8D6
D0C441089B3BC778FCA1E451B9C9170E232CF2F66790E24983050DC5FEAD587A7235708D1DCB
A0D5AFC033A00E97CE1C0748424E40275BB2515697045FB1348B9B382C4A5421897390D3F819
E9070C71A28E85227C700F928B98423AF03BF94DDD31BBD996336748F5C609F909AE146A856A
B96A7A9D10B717A124628F06AA5F29BF34BC052F103C01C2B4DC6E8C812382C6688F71B94AF3
D47FF15B34A8A2D8CD299B548EDF4DBA4DFF528EBC954D26E3F6230231D3AD3A9204C6B98143
70984E8BDCB440B3F3539A70F0D5968608E614A5373F1F31F095AE827429DFC55BE71E0C6EDD
AF456CC5D30CA03D46FDA926DC544B7BD14C837D7A0A786AC70E303D0A446E82074468A67DAC
6B285A4CB0059E4778B16BDFEA623F286EFE3529EBF806BF3AA559ADBCE1283C4FBB3EB5FE61
EAF3179C0E08F2BFF009589619D9EECF9DF3D74BCFF0785CDC888916D72C790E175FA1321F3A
BC392E45E87E9599F0279F6755E2328E51769F3AD9DC469D2EDF20F3862D17E0EE58BF4E0E06
513CD94817D877FC7ECB36E318D717149D4C010D48542A67131FA7F94750F06BE92BDE47E043
60D5A23D60330B9CDD16FE8929E33707E068070B1F130158FA16D2668A3B0A8291F093068FAB
F29A91EC5E246BA179DA615ECBEAACFF32FEEE8BE703D0DD5C399F1DAB7560FB462AD69DE1BF
8D530E3D071434112D713D960B8539F2B02040C08DF3C33141DF3ABB3DC1D3A15133573E3732
948011751C4CE4A09F96AE3405F39E05114A4FC0CB350950C5A7516C2C38B8BF73E85DA10706
9EF581596ACE565ADC422D66EE20ADEAB58CA9046F8D32F0780FDB7CAF262F451687A41CBBE0
FCF7D69B37ECED96065FBAFCA59454D57BA1C32A3A0C3C6990DEAC3DEAB30D92EC451EC63A04
EFD32E91DAD3D75F6FA3089BF7F3761EE01BA33307B7FC54E67F8A9E37F3AE1792E926A3CFC7
6AE39E5E91DD53FC699BBDC4F2D2CFA3F2ADD025690922A12A56CC2045BF1AC64E07010A026B
56AFA33EC5191C66E44DA1664CC0E866062981124EE9C09D815EE0692D4475D7B7CB49117FBB
4261939C0F58729A5FA44982F92CEC3A29AF5D15CAD1150D5794CFABFF9548F68D77F5C18290
CA4543CE9244ED9EA0D2B9AC0D04CDAD7EE2C04F2CC5439138E882E19605BBB197E03847049B
E4908FBED8CD6D7F254D7DEEB6133486F0486A51EBF4E934682C50A6F237DBE7E9E01F37FB31
BAC6F4009B2075E3D44A90E76C9A669A84329804E0BA8922322A7BD8F2BF3C47A20485476FB2
446F642C06B0F7A916E7E79FB2F521DC43E43C620AF13EA322AE36A54EB070B16E819C03D22A
E82C99FCBA3C054C82288A7BE0761CCBF4957BF8375AD967046023D264C709C7CB3765EC0153
108AD1A41A095F83F25389456D42960C59637C87DAC74073F9B66ED90BE1D988266E70E9E66F
77A32F6D5D10F8D426B30BBC3FF3310999BD1FE26C2EAAA5FFB6967356B59B5EC0709E7A875C
DB31A7D9927CB7EE6A001D612C61A618D399A976D9EAE0C74F71905D43A2DA9F54D22184D929
85FC471A92DE7BD40B13EAE1B4959AC208DD67020C01CD57147F5525C71FE75F8AC5518DA2FB
35DA93749A256E95CDB67784C4B006714F58FF02F24D4BBD84D3A93DA40822BA613E567E7136
5486B3C9B7E2B249A203D000D8EC7DD1B2E0CE1C0B5D7C129DC0E162938129F5ADB71313B6FE
A6FB14AE420D58CCCC9A5CD3DAFA1C87525792802D2F6F7E169A0D292E1E3744C903B6D50F32
A03F9A610E6C89CEE7E763E6DB2E2094DCF4D95CE1FD47E2495DB1A64A3FF11568EFBC267009
4DE1F92A263A3EEE296C61B4A9A83DE066FD8C19EDC6EBF43F5E65AF62E2515C01C4D097E1DB
3BA6BDD99121298E7C5C41AC08C4ABB4A5EBB212CF26DA75969F2FEC1208009554D21CDFA449
9094A6718B097A3069C5254D3B4ADCA1693A8247773BF93CE1ABCAEE7D928071DCF9AFCC7912
34B357C6437EAC8EDA2FFCCBE5E77E9CAA87A5BFF9840B2BCF4AF859593AD06EC09C0A5F8D10
38B88AD7F7777A981A5B58FED55202F4B49598C3FE9659F4B1E5352E34E5FF1637AFFBD2E28C
7FC0F5795B0CFE3CB85277D1697E262685C7B3A844DD4B4D6EAA41CCAC1F876AEF7843A488F8
4225D9C8C2693D9728513E1CE1D775BA9B38310E3E238ED8CEACE807C2D6695C7F17BC6DF133
1D4097D0EA931D8018FB71AA54D7D5E5751CDFD9ACC8ABC87D761F19AD9E2CD209224DD5987E
2982EDE9880F5E1A625EBA60C2E7B8F6729F59AC13569122343502F61AFEE0458ED0896AD52E
F6108ED7EC0303B2EF3B83AFAB4D03557F5CA54C5E4B62A86D8F92A678416D59A2FED2D99244
160A929A9E7C458F4437E12C89C60E9B9AFC9578B479D74ECE0FA23FE1644D2B28187DA01459
EFBBE34A2947798009BB709CD306D9C63041E3A902B589B6B2F5980957514D5C7F867E223B9D
3F19A0978479AFE2BB51A0EB09F9B7D5177809FE0499048CE58CB2265A613ED37C3B007291DF
D3DCD04871B8E1095C0464F3BE66439C898F73BAD14D02F5AF1B88BB55A0324C139FE276ACFA
95F1E3979AA088BA4AEB03149AA3539D9919FB2DD4E61A6298B6BFF4D3FBB2609779290CD70B
1AADE8D7C919AF16A5D642893AE1F772E173C462095B39DB38EABF13C06BDA920EC54F279439
36B9158B1576BFD2C45FD1A306751DBB43AB8E1791817FDA8587D4ED76AB2B98C40674DC71FE
F187EFD86A5B137FD06311D5970697EED314AD6378573D1DCF485A3A5C19A9ED5EBD7AF6A82B
12A219F514A884731424D6FCB3A1FC97E6A6E764B97133982981F6BF3F3FC8B57D8E3A424B18
C9644B5448B105C9D0AFFD4DCBB477F71F24DECEEE6674EFA2BD924A5599F84839FD49718539
17287CDFBECC6417A81EF0A08BA1FAF72598E0665A8B9075D97FCAE661E869819228C6B41C35
A21206BD3EF169341822EFF4F723ED8C2C2C469A3AB22E27FF496A98CBB3099F666EF41540B3
6C6A4F6C28F3B3309E959C46BC092C41B672E931E6927A17D5084712A9E5361FAE4742035655
BEAC88F81D6ABDDE4681601F5E98059A5E7BA0CF0F3E83EBA78BB2DFFD072B8D9E83BDB1BDA7
D334177632BEA97BE24A6DF33A46A2A3D1F8FDBB51D3FDE50F22B5FA231E2270D233EBC8B148
E22142A591922B01D4E7AE0666A39F1AF6DEA3CFB2AAE63A467912A99F9DFBF1EC6579F14DE3
F6DE1FDF9FCEEAF2037FF3976031A7850BA5F13E4C2A27B8F2515BE89649F356F4CB7F6E4A09
6E1D99AA3E1B84CD56B386CC6C181DA7302551900FCB9A56900C09545B585958034D9F9D4271
F8A94CCADDE9E510891F6B5EA80D251B06782C86DBDEBABF248CD2C3E751132A895075200BED
0BA0BC836B828E49DAC3359AA948C0699F7716D7ED21322D0E17BF77CF137A131723C8E87E87
E3C5C215BF793EC07940D924587ED51C9B995B420F28F2EEFE3BE9D83CA2D64309E6D8A5A0ED
576170350867EEEB2FDD0CDCC346C6DC4CBC196973D9DCB100AFDF7D96F86CBFE3B51301BC40
B045D59C088275ECA95806ABDF13515D145E58C8C55C5406D4FA307D38C19F59624835581025
CC2AADA85719C97D5F636AD548E8CE0FA55AE1689CD95E3C2A3F086C2011052B35CFEAEEC73F
98312F3E56267F6869C87D9F8CE522865E18782C989E74D0DBE41BEE33D9A3BE270F23DAB8FA
722A730E74EA938593469783CF4C90D9B14449DF59344B2756B5F9DFD5112A642BEAA84185CB
BFC7C3C3C451C068FE3AE00A6FE80333AD0D0E9BB32695EF8BE4D76638E2354DD2B62C1CEF74
14493749DAF9384C7688F8ECD67E1D98A950F5912B505D2604DEC27DC13B8E42E450170CDDC5
84E0E61DFAB7FE8C900BA8B84251E2E8AA84E0B3C2B0845397494C9EA4F986C6B0B53CBE7547
33F69B3B7178B05CC00C741D9AFE8F93E6A576B9F8934BE87D02DECDC2E011E64E2D4A65A66A
068715F169B52EB7E936DD8FC40EEAFE98F7ABE1F4C1B2B43292121BEECA54B51B9CE9E9856B
14477CD972DDEAE4811B55EF4A7C47DF5422FE5632FC695222F4A4A1BDD6E2CCB684B79B2121
DB1BF83AD5A62722BB64E5C26C010803D3189EEEA208F6291D7A3B2C03A2967EC7E87581417B
9873FE2ABEBE8232A7968E9E82BC6CA612F2FF1B5AA4308717B4ACA3AA3BEF50CB6B61579CD5
1F8B3E22F62EC796D87615D02C422A46C154E89D5DBDAF00A9BEFE765599A6E1802F80D0382C
64D4AD0600BA0A0DB081E1C4D4F2099C000594DDE014F06780F172D095A49D9796A22D43B9B2
00EDF646EA75B025DA20182527459A309C43FF187877EAB63ECEBEA0338139BABA3BB7AC07A3
21B46F47576562EFA570B64B36923ED9581853C15CC56444935889C5662EF190E950E1687F2D
6321C1CEAF0AB89A0D8CEFC500B9D38C2283193A9EFEB7FDB40858861E6F3F950E4D49E1F56D
528DBE74AF3367421F70A1ECDD65315979F1DB1ED08B98DF75037BD045D5F11AFF5440FA5EE2
BE5D1CA596AAC6B43DC50A258577D000208721E2771381300A4A6830233867B5BEF470737BE4
0894273BBDE61A190A7D924ABA1246F95D46F2A52AF2421C328AC4FB3F20E1C35C113952D2FD
BC56E92FDE53A26F5E8F5956DF75256215162A5F55466CBFBF01114971D9B234E65E3359D671
32BD7176D8DCED7A8787111C9C0A5237A58AC401A9BCACD140BD3485C3F9D0D58F0758AD7CA3
E21CB35BB1760B9C61E066F565051E9E21DC04B3785128CFE8585993BF0C2757624AE7BCE23D
03757B88DF08116463993524D137B86C4062FF9B677BA7513D44CBA04DE64F75D7CF17E67902
299DBD58C75EFA9D160190E0D19BA6B1E3AB7A25732D389EBEC46D48139A8F0431C748B167F7
071F0E6BE059D44F6559BFC169791200BE457F970AED69EB371B8096FB4803559E9F8BBBBAA8
0CE8D5748A0CC12653E357F13409C92E0FA355BDED05C3925CFC8DF7C6C5AF870D69F735F838
712064D354782EB62AD20D7B93769E5E4F002F3F20EF14A4509674C69E9560DD318D75A8C894
C39CA093B10E6DB272A69824E52FA3EE53B6B1FC3E65BEF6A690785918F7D82A823A624F5662
59038BFBB2905A86E2C6C10C1638744F65AFE338F8873D19258C92634526FEDE3DC6B23F5DBC
77C2FA14967077BA724984C004F2E11F7EECB13686B5E76DBCF662C6EB016DDE456AD5646678
60AAB9F8C5EABC28E64F894BF9F8A66021B92AAC265762E5C3FAC04D68A8BD8C34271DE54BEA
F2E83F65E8EB77F2B1A6ED7B79B5F24F1F0580B69A2E0A8178AAF98A9B7AF7FA0EB765C2F85F
024DBA01D699D798360653D2CAD5A0265B6C22F9DF867DA04C4BCB1DAF2E6ADBA473C60CB139
A939FAD116876552CBD9DD632A780B6CC9B23E7BDCB4A3ADDDB56211437EA1068D8C4D87CDE5
143E2355FE2707E8D35EA1AE2C887D5F9B87EE45B9E801A6A4FA61BAB34F9E9976A8D1500821
B48D2FCDB1D26E748C7D0BCC4B319839C1FB168B0F79F0644E147E286788AEA332F24F7FE4E5
CCFA4854523DBA2B17BA41D5208CC9584FFF6D38C5D1504560260FCF24E8E133F4327C9439AD
3D9DA6AF8E0178542BD1073B25A7ADD7BB77B0F75732FF7DF9445300FE72C4D5B371CA54ADD8
5A52E69B5D6BADD56CF20BABFAC5B5205D555FA17599A99BA634306936EEBB70ADCA4D80AF4F
38355AF06752E476BFA729DD538210AB7159C64D1EBF56AFDC5636A4354D68809E396EB22943
62062F902C0F5C564C249E0DFD2EB57AEECE46D1F23BCAE70E42259A7C21653389A55E1665AF
62255CBA64E81D26CF7003B98C9FC34F83C5A8888D5CE2F9B9398AD23D12EC0BF293C3822F2A
3F26D42209DCFCAAECE3C60434A415809AB69EF335D3934C895051CDDF31393AAEA9BF0458CE
DA9E6D2BAE2837EA7FE67AAB0C122CD930798954DAD5C728063F84D75D727251B8750FC3C512
9AEA67B1978E3025AD3BA37E3A3ACFE1EF2DC1C3693712339463C97DD7C30A10733AB7B2F6B4
4EBD653AC191F6FE14D32EE1661BCB5798D08BE0B4F353BC83F8A7570F87084E99F18EC2013B
65EF7B6BD3DA0B2E8A9581381012C10C4E7F34839F1EB14E26ECED24963040E17A2D692642C6
6057A7DC8E8C896892872F23DF117D5B876F145501DF348158C4594514F98AE86277F0EF2A1C
81169EE3FF0B1509669454C9A5C05CE8617C00ACDB01C226D8585B561A641956F27894A6C5FE
0F6E1DF9BF8B28FF6A1DC368689C54543E6B184E1293F5E2F891D96EF83D30BAE0F8C68F26C5
F75AF5C3FE9B294CDB2A5AB72050BAC995F3E317DFCAF8DDC98C54C6B3EF0DF2BB0A885C23C4
2453F46C02E4FC4E89494AC526317FF10E932AA6DC316225775465A200EF77F7D0078459DCAC
E9345B97CDBDFFEA45AA523C256524E9E624F6E34DACEF742FEDF621063E96EF3A23D9C840F1
4D9544D1501509236F4725E7246CA08FBBBF71529078716BDAA22F933D557D055016D4604535
949463E767061BC85BFB0EAFC484DF5F2653C608EEC3155C6ED7E94B96C41363A559445E47FC
7D8E2C193B5AD455FC4C310FFE242528F25E0ACD90C4053CA9F1E02435F537B64C7ACF9E090D
11A6F7E610AEDE0EF76288E893559DEBE59E5EB153206665B211248359D6266506420571DBC7
4021E802125EE76C90C502CBD28CAC405E10E92BF7A952AC8E773BC726E5F8A3637AF15F8F8D
8BE92CBA6BC7434BD992CF56314085090CA530B4A7F243CDD8DDE689FEFAE91CF386347A9D2E
26D1845EC27477B30D60DA47189AB457D9562BAB48C649A80E8088500076C5FDD64E5370FD11
95A993400C3AE84FB09A927E77E7744A1C923BB0707382E6DE03DD436268F9CCEC76E3575692
46441CDB252ECD31EB4A1F15771A51BE879938D7AD2417E0A762060D52A73E02B4178486925C
DAB694EA48D1D6E31025A352E299C8F62D7992CF088A9B721A9B8DD0F575223B9CFB46917FF2
C540C5F7C0F7860F185AC52B70E66136E5ECBC13DBB59F5D9A3A01E8061F4304A10AD9149C45
EC19100D7D0669E89A5D1D64E5C221DFC362EC066CCF23C600B777207E0F8349F1EB06B15592
743D8F96816B821E8ABF470F09FAF1986E7361AB4A58024C25C3EB8BB41CFFA6EEB55D8F391C
B1A63601F38FBD16153ED8A0E3CF4B739FC875F4D658380DF84456D02CC030BE4881A762B735
220E470E45CDED8BB35CFA2AC65B624642C076F22277AED54F10E995BE86E2ABF73EC9F7736A
D77A3A2CD847511851FB9554BF7B45345859115C39C5D54EA49FE7257329EEE3E3DFB7454829
07BC2C0353F5B5D761CDFED08C82D2E4E60A43BE985C1BEA949E8F099EB795A4CEEF83E246A7
8D14BB482289181D89CF74110BD996DE8AA06E96468237AF23CF7940E22D9772328A05057E83
529789A09E10F3EEF0B1BD5262433C000DD3580E3E1A191BD808BE0196B64D32B8080C6C1CA7
DBF5B9FC1379512D6EEE4756F2076C57FE8B34BB8F1B00874E40E35FEFAA9BA8B08B5251274F
20DC58F9091FAD16644EFD62EEF71F686577184F8A7F69823BAC1B0B6708B9DD31ECD26E4343
40A31DE54AEE4B1B91B9B581DCB28D4CA7E7090EC31BF4C99C314DA273A6EDA4A45AF4A3978D
D0231AE15C4C882A25FE88C47205922393CDAD92B3429C9D1A0F520C677B8F13E8CBBED0D096
E8E58FC04B60C2368E763B38AC1C4BCA4A719DE7A7064294BFDB0A6BEFA3558BB68CEFCB0A37
6E8BADE4063B945182B05367ED4A47EC55BF85BD4526A747B38E5787B60D9A999753ABF21254
3DD3873B0FD17170381E62BD0CF8AFD5B98D227CA272979CC561488538E6C5CBA446FF8A7A0F
FEF2AFD9C336EBF61E2D084F2B9DF0BA5A856038C66F8E3DC4EB3AE0D7C09D9E94A5D4C050CB
FF78F1A66114049D67BA290A05E283150D0115EC0979DF4D027267F384C1DCF627E3F75FD14B
476BC0EA62F9C2A875EB5214F856B0A472A5C3B34A3920396F9ABE661AD52A63710E827BECBC
A76EB6D985ADDCD035426CFE0B0BBB4B45F6B43642A980ECD93AB63B15F9BF91F30EF869F61F
A12B99AD2E4C82E3F6F123F2E87D1CAFE53D49C925E43052A7D00A92C445AE2A336B86488053
602966F43AC392FA1AAA7B23C7322C60BCAEF01989DCDC4ED23A7C9285AD5A7B578EF9179E4C
0ECD45367EAD877EB91D35C60C19313BBBF178FB9219BE419AEA524368F4C6F1512B4D8C91E9
72BD7281D2FD45A7770CED0CE4E5AEA9B46E0C1350CEDF41F10D82795C8586548F0C87A2CA33
C2DFE909CC9894DE4157E1F235F80C45540ACE7E3882E49DE831069CA4044EF69588748074E8
8EEBB4978BE2B81A99A10E50A769C988476324F34AEBAA6A922AE92AEFEDC99D64C574482A54
5D4B63CE763C21A09F97B8DB56279BCC02DFF714897C6C6BAE22135FE82CEDFD8AC78DCB265C
1313F173CEE419A6A0720127A9F0E3CF2D9072FA9B4CA05CEA57E1490261C691CBA09CFE3987
41F36710B544E16D37FD18557151E92E4AD3A35E4D5691643A28AA08055283E8E650C6167C45
1FB2266DA34EAAB0089C6AB07B45130128AA309A6344DEFAEAF9140B86917135F61EC1B73AF4
D4539F06EF19199C9774353CC80E40A463EDDB72BA49143258FD9F44671A6BCD74011E31338C
151A13A05A7C48AFE72556230F28A7BB48B48AE2175CB1F13A1FEC6706EB98982DC0C0A1E305
85D974BF38AFC451BC8AC37E00C70817886DD60F34C60F6F14F418B16AA1E96094DE69CB19B5
58B9A695E68431AAF67E9B2583EDA41B7F739417FA0909560CBF18544DD21B8FE559FBEBB3F3
66535C6E6F98A5D2D19BF065F887A46ED7E5ADA4E19401EE4F8EE2C7B33A864F5C6A9753D537
EAA0487B29A046F9C8D0830B69782C7D4B18EF1117B0A4833AB0EF27D06B3A5E3CFEB597904F
F8E6BDC43C31DC96EC9602611D357DFC0511EBC8F0C1BFF86A0AD600C2751C6F7D89BF915A89
2B37698AEA4936CCD7F1B62D45CAD3DE3FFC4D5B505BB68180286C2FB14634AFB966B4492736
D0A47EEB79ABFD62371969316AEF1D7F425A4FE5B54331E57DCA2CADFC338265DDDA5380DA48
82E692987A405BE67F4780A12CFB6CA4D988EA5B10F2F2E85DF478590D66777E00093E73C6F1
F5CC1F11CFDA0DF05665F3DAD623C6BF6E21F1870C6BA09BC8C37ABD60EE940F6F1D95B9714E
7CE213D000AFEAD5305BE9EA6DF6CDA20B1868DC8B05A2E63EA2CD3468DA56D7607C01E62EF5
218B4BF7F28F870AAAC219AEFBCD9B04CA8C39715AB76525D04E097B22DB47C65437FB2F3F5B
9F21CBC59FA242457BCA213695179B1F833629EA1B2EEB5B55BE206A3F34784794CCDE0C1A60
D407916D040EDFC3DA9BE7EBBFC410EF258D00372E791B93A8042D518330CAFDD5AE77AE8B08
E4302A862C83887083D771393C317D5F7A947D6E229DF7330A514A9AEF518D61DD9FE3614995
B200AEC477909C2AB1E3332AF6CA8538D9BB1B1CB6AF823FFD8A5A8D06110E1FBBB702BB91FA
B3DDD5CB5B10F2E18255F3846ECECA5346AE1A28A433E586B917664092053D3E391BDC2D1FD0
38A8C430769983C68FAEB341AA8B0129FE991EEF1CB9CAC2EF4464CF45BE0B46410D29DC31E0
7E6220CBE39FB84914FC22EFC665B00E00455745D60345B15F22A411439649331B28EA3B8CAF
1C5E241809F9E2DCF1C63CD22F9ED6B36A0795233420B2274036F1EF2572C47C09BDB2DEDB10
270000EC56CC882C6CBF5453BF0E7EB04508F6E6ECEF159107C5B3C82EC7F2D15B8F34AD5F38
E2377E61D1F29DEFFABDF983474654076BD73014ECC865BED67FE7EFE2E9A840663D8D2F832A
63BB242AF48A9052BF773C7FCDD994541C5C84CDC5D54775A03BD1F7B99598198D5E0F565344
50FCE6D05DC2A9D188B604F6C0119A36210C7E2ACFBE64B636B607687905B1E386C3C980AE53
97BDB0E06FDC31817F18EA76BACE834468493A23DA0601EEDA084899B3C57484650849CA902D
511344B963C2233052883EC5EE32E626A26D80F6E7336B4598B9F416B383CDB4BF1FD5FC3561
CC84D4EFCE98E0374DE71A105223703351FDB6A710E391DF9EB8E501CF407F5EE850B3300AF0
D24509F345470477C9CF676DA2E75BA999553827C9F6C6880FC3F47374663E30404FBFAF2141
AFB0574BE4983CA3E4972E2FD703280CF342CAFEA7392B9F6BD116D49EE70702EBA690DA5E98
EA9B6EC010EC841BCE7FCA4F7A1D14E35E8A295BCBC5262ACAB286F5BB134241D55C016F1521
B3A635BA53E0887B7AFFD651AED42C940DA3532D1BD3EB48F46A1CA4838AD9E1E526FAB5A4EC
C608365B684DEF335BD4F9663338CEE545E4ADE24C55CD4E3E3816629216730D233FABC2B4BB
98AEA426B58E5A89396C066FAE92E448EC4E9F8B9FC0EA4BED639ACD92423E840B33811C8C9E
E8C91F5AD04274D5D8DBBC4D03341ABF51B5DC16366FFC5C3CD04DC4B73D05CBCC6505C45F67
798D5DBE78A5BD308DB2B6FEAC584308D384C85A0984D1973FA810ADD6D7F34691FBA5D2D20F
E8EDFCBC2C4363E52EDD6DF254536368844377E51D3A606139BA0F8528E9FDAFA19B00EC3180
FCE1689119DF6E625B3FA7EBAF670C295659D5E4EAE5092069D634AB724DF1B3EED7C05F9F39
588AA8A24B024EE35A19D20C3F24A5D32B4FBAA72907CE3101FFB9E7F560B7EC82AF2CCA4C31
B9C9DBA86F120107D20DB934FACA702CDF0352911817AFA37D00E34749906B87E062F86B2297
9BB5F433E220ECF3E9805CBC679C43E363C6782F7E7EA86E94DA56CC6A7F06E423DFB561FCFB
E96EC4737CF83CC9485D13520938FD9A7F34DAEC9C6DA177B2FC43C3947D2B3DDC7479AFF754
6FBED1D802234D0D1A3F72311130D14355E7FB09330E3E731AB676BDB6830E3721D18DE4F12B
FF2D3F101498FA9F17B049F69B813E0D8941D315DFAC132207853D6CD8A27CCE3FD847D950A5
3A7D8B1EB8A129B854EEACB831E133D58D86F1412CE8FE97F92087D49E6D2B7BC6270D158E34
102B750A39B6CCD344B221FB42BCA8E84053E4ADB57E4811F7C55D0F1403CEE5D6155FEBAA91
4C79FAF9CB82894F85E57F5E9FDCCD93CFF9180E61780D1D39ACBD9FAFA945DFC735EC6271CB
6913AF9E96E7E85F075C10477641055760CD6959497D1CD59C849A3835F6AC3807204A28DC2C
DD5D9F4D4F590EF50CFA7FAD2641A7379ADE9C8A588401AC37A71CCFD7D3D5DB1D04BE0C7DAD
6F9526972944889D1492271110686B23DBC7B136C98EB002DF4D15A7A89587C9704F84F2815A
E6BDAA5E69DC2FF06B6E863CE1CC65B0972B4AB76009784CD90DB50FEE8DA79A56B16D713ED6
829CA33685BD32AF6B6E2C15022E75E8B92ECABCC7984F4C828D7FF50D459F1CCE85EDA7EDFE
009DBAB05593FFEE424B482ECDBA1E20059CD849818DC50A972D385301F47FB7B6AA25A54EAA
E4ABF27E12A46101EDD8A0998D3F98B246A4751064B46295FB6D1A69DBAD6DBE0B0CBE4EB56C
A897B9373F23F8DD2E303633BA23C346B7128AE923CFA53830DEE9F7553AD0F9628A1426BCC7
BCBAC1B4A2706E75F5092C79F663C9757C5267CD4E8CBD1B1EF055DB151636F3BF46FE3A111A
317D1E00B52098E83F9E3B2339271E459E1FD54C030D7E9A72C7626D7235FD9C01C19866909C
0FD7A68FB508F8178023A2EC6276CC8D76306F9CF8994695424DCB668EE91555A31A21CA80C4
B01815B24A6B5EBF42E0A8FFC6A45405BF74BD08B02E53C1EFD46B5AF8234B023C282A9B0F6D
6EFF15CB543E88745CAE9D8B4A40341FDD8A459ADE10609FA7D09684D47800964397C3741B89
AC6173BD5ACF8E6BC61AB04F6444A7B1B03065066563083DE0F14EB281E24E1CB2C1140ECB2F
C7B2A3C28062E509F6DAA5A5310AA2C1BAF351C4AEE265F3F0A81BDBBEEB31282045901430A4
90B5A1E791DD63A4CC58A5B679F7E1F24CF8C455594D9A6F5F8820FBDF6549B8D8A89C8CB242
ED018A2C0DE75379550CC83BBFA387F03B03B03EF94F0CED6969A127657107237936CD1E5005
5F6625FC3A09E2ADDD17631972C708226DABD547952D6199C61D865EE7F9BDFC0E6D44EFE7D6
F338064A2865E178B4D6116BFEEFBB7208ADAB1973C231C906A373E292A1ADFA1D735D2AF7F4
E9C962FF21D09AA2AE815B987845E36E89B06FBA43CAB538661479BB99A4D7D2550714991DBB
488837FF5D93BFC876DB69F6870AC2FCFF2AC4ACED7725D8EDFACB1AF3A7DCE78714E687A2BF
2C1E599617D749E880D9246A72A7F35ABF62B08FFFDA162FFA7E7D62EBD1076BF22127DA7D4E
518BDD690486A4FA56156FAD55810A407579624BCB10E63CB479CB12FD68EA71692C22557D2D
CBEBE033268313388FBB2151BD21AB0CA08E75C12C585C627838F40171565BC205C1B975512C
4882DC53BA60E2743DE0C1998834A864A138CCA883D0D3C95450BEBA3CB1A719AF497F8C0D71
EF3F1AE2C7911DE7B94ADC4BC81F613FFF9D987352E1C1D2EE59202C7AAE30852DB68B9A7821
EE68329A8ABFDFED7CB9C91D66A2F671105EACBE454B5286DF35F0BA83DC85F45A040A4AEFE0
C9F0423BDF570964D5BE28894F90566B54D06271C4220F369AAAD336461F9E4951001B3418A0
70E483C63043EA00D7B121CDD67642A2C97B4B98F149809C6DB27B76927BC8AFC66996F19CE4
389858205BD50BE0A9F6C4554F7E7C979008992820E68521583FBEFD7CF45CA4ACF4F4CA57B4
A8028D6DBB693C78318E074BE61C5D54C93B4CA158025C5ADC77C8A6A3454A2CA452CC8B8502
BEB1FCFB21B3AAB5088FA8968700433870AD1416A4CFC567890910590CC1CF639AE89438278D
EB1BD442B3F4C9BD799A99D4F00EEE56FC506AD606ADB282E9098BBA889F06DCE0370280ED09
2373B45A28D0485EF254C809D679F78C2AC76F3BFD26F1DF4ECA401B124F7DE5F32257039793
116E8BA96DC89D071F17B9C662E3F5B93F366CC10706BBB66141E5B36336E49ECA019125AEC0
52B6F720DEAD49BEF57CCA3E72D3A3BF5890A092AADCDD3648BA860D3056B5705059038AD1F5
27C7EE3F351813088E2825D4DE2F436083C56B3C7EC3A5A6EFCD43ED16C8EC859AB4B30A9953
617C943FD96BF7B8B0E3EB7FB0D3EFAAED54F1A0C9C45E530FA5839E6B456E9208C3EFF9FF4C
80C36E7B448B7C4E06E2E7E6009532524841E56E9EFFD075B0239498592089AA4F6DCA0E5C0B
A20DA9811FEA15ACA0C9F4DE68A9F59C86CFBCC6668639F8AC088F954400A32FC587EC59BB73
12D302FEEDA2E953464A4E2DCF3BD6E4F9B22273B9B31FA59F004A1E5F21E22DFF8C5AC9C2C7
CE1A29290DA82AFD43519F1E27928340CF7687431DB1C3BF6A65A25C8CADC5ABEDB35ABC2B5F
0CCDAC9F3AF869599E974CB6FC3DD25DBD29E7F0F6F0594D057EAD35E9D547E93C0DEE8FECE2
948DDF0CC4DAE28817980FA177DE92EC1C00A105D3094DEED0AE2DDBBD77608B39063EAD39C0
93E2B3C0F317DC1B0C69709244C3E14FEA181EFD5906640065C888F9A69040A8D3C0F12EFE24
BB6B9AB6E815B8D38E71E439694D6F090A32D5C3E880801062B7B8B43332C3F0F5A4EC506361
765E0210925865E82BA9ED7FF2C5FE760F4E5CA479D3FD8CACA317943C3F94E54ED641FB2001
F3D1927679F757250D9BDD049D590D30F8FFDA487520ADCD7493E0B67132CAB0B78E8C11AD09
7FE230879B9B91BAAB964EF2C290A7FD81E771813B8F4D68E3928125DAA31A4852F4006EAB87
BDD4038DAB4BC9B1105DC5DB4568628DA4AD561A4BF20BD0AA025D8062FCDF65840336EB20E3
65D7AE6CBB46775F87808329BCEB4762ABA640AA8A36DA698FF4976C0AA5F7ABF3EC49F7504A
4523BE00D8AA8DDC4E9A2E4829D7A3DA3138061E0837ED37A766204878C8CCB980F0E5DB759C
7B055B703DDE97DB5F8C8BDCD15D61B060F308CCA8F54D994ED23875A02706FED920DA9AD5C9
F7D7AB639D53595E90E1A15F64199AAF24262D83A0B88870E0CE63EC4CC7D356C843B8349FD1
EE9396B408F45FC71DC866F381CC279B3FCF9372FB33A188546AD25865762ECB241163A287D2
E94AB854A6DC48C1BF7A0E650CAACD3AA917A0116A2C13A619BEABE4DD2D40F368CC59C7EC11
2DF46E992B87950FE372D26C102072F5A5D2F5089CAD638ACCF0E5671EC812F547572A7B13C7
03D628663196EEFDBF6863AE19D741F4DE0CF0959A00ABA3A84BFD996AF76FB09B9DF4E6C2B8
A7FA3E5EE2F68AEDBD57B6E3144E2B6F1EE4276A057F87E91999E3D2C018396014DED4F7291F
0D0B2AE2899A12EA25DD39DD0B0D1C12283CFC1ED9BA1B2F49C8B4CFFBF87E17C8B876D1C12D
F7DC8E95897D95B27866C3660D77BADB655DC357694B853CED876861CE1FBB9D7549C36FCA1A
86198D5E8996C9B9E39D9F0628611781434D92B071EFCD4D4121D16B41497F92A4BBF284A2D9
EA17F3A1A1F7225E6AB8AB174C3CFC21CED764E98E838BEBC43EA63EBB90298D06EFEE8EEBD3
9CAD76AFC1929A754BDF38C80C70153491E7402038EF6B019C145A3EA55019DA8C724B55A073
42ACD3EF528FEA2AD1AE064D4D28C6EB88D69BB1D294CF2665EEA165B1A306EDDE0844ACCB48
EF15D997A586D2CAA328A76F86AC9F801CF02CC8303881C5259B8BDC6624249FA562F282D148
00622E571304FCD6DBF9B68911A8B6FC0E547A82CFC1788347495B83EF6CDE5BD367AFCEBE3C
1064C22216BF3F43E2723DF53DE099462AD589E88FD14745EA544EA1E82934A9E881CD19388B
8652BB27E3AE5D03240C8977E13DCEB8DC36446FB28017A3B25C0DFC7711C8D4EA42AF114438
4D06EEC5FFB8B15D7434DA51C2290C2789A6DD1F31126B849C5F351E0C8DF2E16DE5B0829B0E
6796FB3D0F8CCCEAE1A99C312A70B0AFFAB44AFF6A7E5E2DD75B70BD1F185C183686711B6C46
B0FACF07C009A1057B85BF4ECA387D8083BDE4809F9DAEF0D596142557A79BBC31E9A0301DB9
5FBBF8DFF73E2F4F6790B81CD12173F7D8809299C0C8D15CA3930A5FE3144A6CDEC5C35BAEC4
FB1D56A7758AD79082445E55C4F8D182BF60B44A54F7841325A0BE47FEEED83A9C3B7F8E4CA7
9253B1783B538AD3F0EBBC9AE7F4B4A8A4408DAE6792C7F42FBF1C0FF7A939BF6D98F7051672
9E1F744329DB305AE203DF282E98584B2667E5DE118D4B0CFBDDD389892AA2E3D876D2B2F6D0
545F257EF74816DB618AA970F832271D3A717306E60305D3BC31D52E4C026A21CBF346D26D22
7BD99A1C6B7FC049DD1DFCB786E1562D3EFD605B7A1F794620125B9B7C3B599E4DC5038F052F
6B3481C7DD452E8B48166783696CC6FE2C5924DC7077E8A05FBDACA6C845AF8C29CF8F71DAF5
213600116F2DFC0CA73BDED5522F761D61099B9A9687FC55A2C4D6976934DE13E42B2EC406AD
71CCE08A1458D89E7A84915C78225D45F0564059DFF9FE9F46F08D26C11E70EBF07892631FC5
281D9DC56E5B77AD90A9B5F6E0B3B2FAB6D34DF9147BCD944C648D5D7886F68057E046631161
F5C6EEF28C371E5A553B5FC4428A810E24090481EBE1241856181A832ADEF3A2B2DB82A30F1C
FBE9B67265585161DD4612D389D467FF6B345EE18C408DD465CCA8929AFA4651DA57EAF51BA5
727105ABE8211FA5DC0848D99A7787B3BD564DBD6B4A5128685E6192B2C3C296A714E005EA80
C7776552BD10B907449B5DFA4AA59CCEFBA009DB1FE5ED4902BB46B6EA478914298BC09F6F0B
898753A400CABB00451B84E28AFA5E7C26DCC636E7E39511AA8748FB000237FF7B20FBA3D635
19283AC4A8DEE3F6FCCE035A7CB2C6B14B934652683C2E53E3C0CDD06B6595ED6B8969DA334F
22F247A2DEF692925FE313BBFD4641C2110908062B87FF26202677B332EB804B0AD4DD6ACF0F
1F7F032764D1EFAE6BC2CEF22D5E2CDCA25C1F3C8FB46D9BED7C8F97B3FFB593C9F52DEAF26F
4F8253B3AA0CCEDECF646978341ACE6FFEB93C67C567C100734F4DE2502D26631F7A50927352
4ECB02E3DFC87549D78775754DE11570D3B3FAFE854BD8FE2956D5E4DB2EECE1CD7630E0EF0C
B29A61DE43287DD254AC419DA0262E8DD08B51FA9F4F1EE2488D755681A2AC7A49F165E46E5F
BF76156545F35AD3EC7CF32494F1A66AE0F97E17A60C9799A7861CEE0BE19F0B5C3DDEA8B68F
7C96DBC12905E763B1DF1E42282ADCEAED38E95FB0ECEDA87B8C246F89A04E5C03D8AD4B716E
C583DF05FBD527AC75F8A09A5DE9DD98E522BEB66F35F8E695AD289B373FAAA4B41B7453F2F0
B48C8143339B8184DB8C4ABE007A8B51E1494BE8DC9446266EDD6156CC406D60E092B366545E
7A5B41E98CCDF693DAB437D89612B67D213BC61E0FF49FE42404501093A2E22A68485A9ADB58
CF8E6A2C49E3043D29D01C34CD05768AB927531822A65D30D46518C98E19618704F54DC7AE73
C7CD5765268B14D51B030644D9F9A9E1FF4B1EBD2F0F529BED14EE0903E07224F9755738393C
EB89E8CE0F25E3B5BAEB9ABC351A15B4472EA0BE2D0C8210FCF7C4FAF31BE0CC0BE5170241B8
0C22EEEBDCA7F04345C03ADFBA730DCDDF24E2FE6EA788CFEB1EE99391A80E96C81CF1C83204
FBFB8B356DCB2C870BA26C32B9895E25E56683F9FCF3A5B04A180305A4E3CDBE114465E59D86
BD2DEA02F31F3544E4DEBF8979F412618C6E7EA559CC4EBED0AF27725A6CD2F62F3EE55FB3FD
6DD9A72F5439DD6A8ABBA27C6DCBD400EDB439DCD11C1EC3B745159864F37301ABA5433B676E
5822CAB93A30E8147D183A323E7A012A84F3F1D2FB847F9A69B2B6FC311DBD95D9B74DAED88D
01A959C2611A82485B7B0A07683F7F2C4BFCB930880386C6494B20EFA76F9E5C5DAB0649C3D7
7948270089DFB5039C66C4C01CA6BBFB3F4C5467A975073BEEF7E4F8BF87915673CA63508FFC
C9695E74C84531F6FC924F53F65358CE55629362CA0E174CEAA3CF90E2897635A730D2A823C1
6765BEE65A869CBF84B38144A723858A58ABBCFE90C0426A36DFD7169247FD947AFFCC52F74B
133BE72E9E48ABF0BE2D678929302E925C06F982267E8E0F62EB65BE0FFCA9F322510E0A7AE3
D4E2AE9D4A3E55664CF21851C78194FB66E52C69D21B02EF9797397344379B39CCB4809266E1
A4448BE71612D861FC1980802359F3218FEE296793C425ECC33944F0F6611DC2715F169DDB2A
62021F6CF1EB186EB57DC57C41D617F06F25D1E54C8072608977BE2C79108BE2D39B16DA6510
D8132C381EE6077670FB06CFF41CD79CF2A003BA9B541F99959EA835A504E0A5C858C53A26B6
6A94C0317E2B1A2C675C20B0F2CD2815C6A409D1286E4D89CAD76811EF5170F895F47FB3CD69
C298E7170862574789663C4E63BA596FEEA10BAB56AB6E76E8A79C2DCD73141090883224085B
57DBB22EBA1A54DBFA9CC807FBA57560860BE42AC45BDDC8B09545D16722D3DFCB7D2FA417E7
2E7B03C0A7B3D3855DC0DE17A86843450C1EE1472676784461E2AFFA3036EECB2C39F01B1938
CB8547D7A0B67A72D6F8CA1942EDA0BE5703436957A31F16A131E880477E45A7CDCEE2659DB3
8525BC828DE62AC7C51C0E25B319232A3B9F51F06176AD5F953B2103721073933D6EAF73F3B9
54410D8C0E5566C414987647FF3608E3DBEBF646563A5CAA78270D2FBEE37AA297B2380F7A51
836C604F545E144A5A2293D93A81A160F4774DC6E771C9B1F95D4181DC69BB9E156D99136367
686EEA707CE6628B4583B3EAAF48C9B2D037E504B426EE2F0ABE95250DAC1CD9B55FA7AAAC5E
BB7664EE505ECB1916FF70D924A55D6DE6330E6EFAD3BD0FE3DD28256E0DFEBCCA7FE09F9F59
284E26F6BF9F8A036B915E9A77E80BCAA8CD86F685D46AE7499D934FF24F40469EC310611AF1
9793F5F65A254DA153024B5D7B8CF6ECA95AAC1F107E90E69AB7874727DE8091C64712442627
A973796ADE938D8FD0E96FAEF214DC6E630E056C7B8F1C8C22C776AFD51CD6D38362ABE39BA2
7291EB69618420DEB6C349D7FEDBE30B2CF5B2DDF66EECBC7881EDDF0990953E8168F6E91FA9
3FBD602FC2DD75FD1E5DAADA55BD6CF6B846603A23D986DDE63272397E4648DB3DC07E37F251
DCE7D1DBF63BF22BBA8144400E75229C782E68F74E2E498B4EB57B591846FCB5DFB6C3B86BBB
06BFF618A26A13FB43C47356372C86AC32D91CC7D8BD6A56B4C9F95096742DC18B1A46A7E589
80EA8F04AA9DBE528AED0984E251C51756A31E174E33FBC26BFC82AF2E7D70959F844CD675CB
79C788496B1CB2E85CFF38C0ED4A892C952AA5B65BA5DC654E9D5A69283F9466503F6BB6B098
1A6A3AD00BA75FF4606FCB347D174B7B5913EFBDBBFA638A0D24230DDD42BB48FEB02C84EB5D
CC1B9CAA4192DE99E213824B0B070065F696D2967A0FD181DFFCBAADFE1AF835A6F5BC1F5BEA
740BEB6FC69C8583E6435F0CA0ACD317181AC69D83F8125FD2B15BFE72569BF24587C7F8518D
6171C8A9672BDF53567466F527A9AA5BC16ABD73443EB3AD918DD94A66374FEFC420CBE630B2
9F71B95359D20E8C0263922E32BC5B0D63E6E4C63D36BE376C86182CF4D18E28CF16C43484EB
85004BF07406A86AD9D105199B3126D9128E426B176719D99ABE33B203AD99B41332B32BF99A
C21DAB08282E5A03B6FF82CAD2455D7C0DD3BB0AB14C52BBD11835E9DAC6785BFCA63250C4AC
59A22A574D43022E94A71A5BC5245B1A5A28A72C40FBF4A026442B0C1BCFD8E1A70145620FD9
3095AC9A0794D58501FD349EA25955CE6A566C64D42D5B02E3090674CC7DB1E280DCBBCADB88
BD9F65349E218056D375018385A710BC79F38949E23A6C01062E03142136A1277E2596AD185E
9A2E371F0CABD0C9C1A6E4BD52C58CA8F44A39CAD7E8E0616FF013426C77AE3F1FC58C5F0D39
124F31764DC914A98D5265EDD11F1490DDE96316DE572B70CE94E299A9A19401CF5EAF88392E
2E5D80B15248EEB0D0D8AFE2E5D356BBBB76671E926F23F6639F54A8B525D25B086A6B963456
C16E49EB07B884101C732D6E0FB1AA44C852405AF2805F5825443C6A48DD7345C7C73B9BAAAA
ED787BD52706A874D78436629FAAF75CE00240611E42B724C9B250A8C37F7C6527F3B6C8AE5B
0709B73576A71C1E92F088F0D2A21DE7ABD9B5FCA125AD60D2BD4107F1705F8DFD10030C5BFD
9F26AB70309F57201ECEDBB599C8DA77F2C491BAB83DEECA4D0530C8463D482B17B989A2D139
AAD185D6FB14C821F392E740FB48ED141A979F99DF7290B8BB6874CBAD71F4473543B3EDD53F
988E94E0B8B90B32E3F24E50E50422545CFE3285AFED156B37FC1161ECA8CDB58EE222DAD2FD
03265CA321E32BE7D60963AE53FD9F6986FEB08050ED203ED1B0937BC7C8DC88F9327CD99B7F
CC591B9A8AC57CEEB74A74699FF8628E4816B2D1595797CC3B0530B7898E17B278DD1D33787E
602898F772C08FEE19298599C1F33C4B4AAF8DEEC52774060F27A7CAAD950C3071C0D57C9A09
60D09EF928C08112AD6F4F443ED245D4B4F8FD8C5E4E45EEB34D8A99C2812D4073F480A3A27E
6DC6D266439974A29F5350B1D06B2592A38522A88A3EFCF3920B5B3EA9E88D8DDDE0B87DDFE0
5A4752CFFCBDFB2F91D2D6C8668090462ECB9C27C8B7A41EAEE22D313EAF0E9A718CD6343C1B
8B9616EE70B9E6FC352A3B2C0C324987F2F45D8BFC804BD051CFC916CF42DEE27CA9FA9F614A
87E6983E0601B839E1013A9F424DE21E6A648AEB4FE6399F2EAF6F8047534E71C93E73A2D684
CAB952CC57FC2DA80B43885E4DDC5A7BC2867B4BAB0208DB3CF6165D92BF5C9FAC9AA0828090
B39D6B75F0F9555132BEE8B1E7CA1AA2410DA61996374489084BEED29206778FA2C0F72DD515
57897A37CE40AF56C980DC69082EA704CD02DFD2939FDE8C329B50602BAE656C7A528840DBA9
A7ABDFA243B507E3246D29903DB7E7AAA39F3FD2BC8B96BEDF7F8BBBA0536F0205100E9EF070
5BFF93D9A1F3FAADDDAB2DE0E47D4BE7812FFB816FCCBC0B0159C8E6453A139F1998E7A4CFD9
E0233EDB5B6FE5F07257578F6EE55426EC0C8C93C69A770E273EF2E4AD5CE45085A473D26F27
491B48C1C6AA1966CB5225BC969AC3947ED7430D28A6CF4847D8E19D268C0D9B70279FBBCC7A
575A47B897940A8E030294650543A2FDFCBDEBF6C77FC9B2CE9F91DED7A6AC1A896380F2A8BE
9AC540CC4D1CBE1B1D9C999D0F333B7F799C676E3E8F150F3F9C72C745480D328BEFEDAA925D
BA92363D89952F9AA594FD97AFE1F9E2246E87946F33066918D60F488DA83FF2FA7DE5D09C15
7653D1359268E64E85C5C392BFC91F3630B9D05866E5C408CC2C104B557CD22463E8C823025D
1684CF7C5A7858D66CB84578E52CAAFF79CE756C90B5F470C9B1AED37CB98786A5E755FA4EB2
FB84F292E3A4514E053B5A76B15F47115422E280CA6D32BE9176FDAEACA3823A6668306E324E
D9094148BB33DBDA494E9FBEC43DD3C2635CC80C128C9241185EA3EA63AA2A28357491B7ABBA
9AC0A2C6055CB9750084F25052CE358D0F20AE8333C8086940F6FD1096B0881D7F9BAF065A09
48F435F7A8EEE5ADBBB682943F02DBEE4910B82DA0A2AF6D882367C023CC2374743CAE883CFD
3539F2BFF4F85362A5137A52F37FA39AEB3FBC51E1E0479AA90269CDD9C78CAC6BDB406FA617
D6CA98017C7C118D41B8E7ED83ED19EB56452FF8F85E575ECDAF041A11F8C42D6337C99AD3D1
F969AF0A468AE0C039A908CF5C7C305DEA488C7236ED6615F6FC00B31C3397970A70156BBDF8
0F7670C281DA4F91A3068C2341A5C72B50512E7838F040244916C515B7294675DBEB24EDD2D5
62562AA000D3EC44A450723AC9CE47764CF5CD0449C57A87D3FBEE6578EF6BC38CFDF6CEB898
2AC46FFAE8C46744BB16A591569C9ED0313AF1D74F74498C8641ECE3D4E5700090B24143D850
12A979B434DBF727C551ADC4A92E83AE2DBDEB1BE5D3E4EE4F4CC8E24D364D97DA7235CF3BBC
DDFCB674FA2BB5FAA5B0B44D33806AB7CF55EE14BD8B8420A601F2C187C5654B0020515D038E
44511D345CECAC09FFE3FBA15E978BA349F640ED877F9477D953D694FABDE67AF5EB9628ADA3
706B1B00E021BFD781F108736190102510EC32C6C095D906E285436BA3E4A886CDC1E735DD7B
FB1FACB2232D40EFE4DA9B615B41D78A210533CFBAC9C9E0501C89AF99222D04220A58615321
8602FBD2E9ACDA73788FF6006E0F0716538C9D42649D9E6C01FEBE34AED4E3234F6D539BE839
C02A4276EDAEDE46B7EF8EEAEBB3A41A8ABB0FE2DE203CF045A79367242757906BEB09E4F326
B1FE3549503A7C50F2D3C55F29F53C50460023607FEB6B8357076658C51F95CD04761BD6274A
7432A29980D61726251908CEA06F051C93D06076D59B4C75114DA17EB3BF2C21EE9B3C492C84
3602C5DFAF14A6E966A682A688E536269AA4C6CEA99A628DD031CB5BDDD969C2931F020E965E
ECEC7244BE926B52A5E87A14DEB349DBA25CB72D85D6051EA0041EFF57F1989F89EAB37FE915
4627A9179B86F77977CF48121D6F7D6146FC34934D5B8BD1F6C9840EA67F39D542F0B57474A1
544C8A37724D3F54C9E052F9AD98353B928D8E291F2C6C0B8BC3A96D7AD517EBAB87DBBBD6E5
7EC3802AAC922DD747EAA33AA1A4B9236C4227423DD370294B97EBD7AD32CD94A0D8509F9DEE
DCF879CC9203AAAA49D3C498A6A32E5DAD2D96CDAEA6105F2213B728AD0BBE8BFF1EACFE00CC
FA0020A9DF8158DF67183BC2A9F48BF1F5AFA75840D70A4A8E429A3604D225404CF91E7D8458
AF692D65A77EDB1A875E3DA5ADEF1AB6543D695D6787DB55B0120932FF955B72446CBDD886A2
11D2F4231A3D567634691D5012C6DD785BE88C858C98E5FCD278C1CBB2D87B30AC6BAD91FD53
0654A8079C827862F66D3827D4573E7AA613B0914F5038912E0A8D84FDA8A2684D2E0CDBE216
D6D0B493072C64C89DA68778DC3B2DF390D40DCE029CCAA289DE69CB7D7361B25F346026A54E
9CA48E798112F61F0A913408A26ACDA93491F2BB0E3D9CF19BDDE5DBC7EB7A12506E595D3685
01F406DA8804A0A29908B34D6CF9F9A770EBD02D79280BC64DEE0E3224A071B58BEF589ADACB
9508D559939F8A6B4F1AC432A145135B1C26F06151E549603ECB9D4440FC9FD5FCFFD637A12A
5FAABFC34EED78F9F3F3D128750DAA337F1BC1ED1A67105D84249283F7ED41A6482210960BC6
D4ADB01D2BD525ABF3A112F5BE2936B7F1AA766B8BA927494FB24737B48C6DAFB92FC1405327
DBE5E3C034702FCEA0F06EB17267BCC167C430E64714746DE32F1A340FD1FD4310FEE880F52B
81F2B0A36CF47307EC2F55113FF5FDD725AF223F3B8826A9822CB97BECF0DDDCC91F3CFD7847
9405F2EEDD384BE61FB0B8FCBE265DAE1A17B62F97EE17F4889E2DC32577F58BCC4278D7BAF0
7A7E333863D23540A769ECA3454C77680D56BB84C4297404335277C756AC6718F0E0D35A223A
A6A532D2842754749A2EC7FAFA39DDB8A31428F275A356DAD044021E04D4AC73555E735FDD6D
3A230AC08A7F912068722AB78EBAE21E95E06F084031EE9D811ECEA9DCAC9B83AC3C09D98915
C60E0A952CD7DCBC1FC6A91C9A65111FC654E2234197B9027FE40944B3D32CC6059F1ADE31E3
2680691ECDF85F9CF4A71002CD57C8961D1E0E68792A420FB694777413CF5CA1CA4A7649B47C
11D4FEDEBDE42559583D76185C45E4B8EA15C8A6ADC41AC444FDC040A53BD0660E16CBCCA67D
631831834D7273FCC30CB29CE64E358D2C18C09A1A6A09DC28142F6046AAFD3FC6F57D776F42
DF68DF5EBFF0F320AE670E29ADD66921C8C92CE118EA13B4C6872D5BFD6D4D345E0C1BBECC95
9226F93CABE940C92F29FE91F5F95D5680DF6591929F6EB9E5BAB1B4153B6031FFE52D128C7E
1A68DBE739C0DAD7C78A13BA8F4C6C06AF57DE3CE741EE6E07B5B2E4C069CAC16CC698D8F22C
54D58DED20C691D44B6A809627B321666FA44F3B936FFA9BA950408C265A3BB1DBA6CB14CAE8
E0A5FFEF6171891D505C67895962B5C30370371BEE15AEED350F45EB766C8D6106FDA98CE3C4
9F4A4C1CD11805F68AD840D6A92017CE5892E3A390716A615AAF5F2882BB8BDB1680C46108BF
DDBAF6E71B22F42D1881E5BA1E4D66B9E0E6BD475EB9DB4D2B97AC3E19139CDFC1E7DBF48D9D
A9B017A641B1467414981A0678BB21385F4484DD545E3E9D3CA48B7D7715A6F479995E626B8F
CD5C5424805DFF569997FA19DF8847FB110B152D93E6ECFEA9ADF5BABE27CD839F3DB0591163
CE31D3A768317EC1BB9AD92C80AAF74F92FDCD8922BFFA482BB52693DD0B35D68DBD6BF416AA
B96AEF3F2DCE8D219E1B6C29E79948DC36B8E3DD3CE6F91EA2529B735031ED0B3F3284EB112F
CD27A100866FCF0EF4EE9160A94FCA76CA0ACEB4E5CD1CFE858D572824A7C2D02A69091C9874
C76907A36C69CE72831164576F47DEB218A8402B201ED32C1257F9FB0688C0B6888A00D65353
9EFF48E79F992EB0C49A8BDEA911EC189B683DE6719DC72AADA0E85CD2382ABDCB299D3F22F0
CC0EB2656F9736F804FFE60017B80567584E81537768BBFCB3C340B32033349CEB1BF0696063
66453480143FF974E321F72AD54F295B2F3A0CFA425D5076DF71D52D29B7AEEA6D0E65BAAE5B
E2CB8112307FB564753C15DFBD8D4E113047B46CFF711B89D9D198D5933418638265DEDB9A0E
A048EDADE622FC77AAA6373CB4DFDD46922D947962B3521FBFDA6D9F78DA713138040B8CDDF7
15F17D0888D31DC9DBA449BB40C976ED95C2E5FCD59A2B92F79253A81FBD89E8B38FD8E2EAEA
BAC1DFBCF27F927D636938DE30DE8E20F504AABE7EFAA414E3588DCFE676FC313D6A1018981C
E61330B8418A37F32299F0C7AA71DF84C0AD274CEC30019D7682CF475B23F3A610CC596A0484
E74FDBDE8315E6BC0BA6EDB6608FE7C9A985880547FFCE3FB467389F3AC640BF6A4509C636B7
3A4D2413AC65B363F2CA2F169F37D5B37056E7C5BF9F20AFDF7B9A1AD03440C87FD6C5E823C4
5B660588D8DCD84E7C22E4EA035DFE5454F259EDF9FC9E945C66DAC88D88A913991A40B9B47D
A26FD9AC859124FA61558143BBD37F36020CE3118409D0192C47FEC906DEAE18CC4B1C0AAD27
65DAD27A0653AAE34340A65A9A0DCD36AB739679D77313B22D29046473688CF7607AAA3423B9
E24EF09583C253AC1F2353D15D0D0A008474909B6166AA5B7D3DAD53FAA24AA0ED65700E4E58
EA73E4477AFEC3B11EF98FC620EC5A55E9A647B538132EF80CE9CFAE7C90A1FBEB973512BE78
55A52B3CC27DABE49945C56E3BE8B6E68CD540AFB89BBDEE8B8B96438D8D8D5564A32147DD68
69D4B72004633D55E798BB3A5EDF83D23D737D6B50635C58618C9859C6BD64FC6E7352F61D60
B7DB8E1E59ABECF773E8DA617C72B68328C8D3B8ACE26ED8BBC3FCA6D3DFF6A843E1FA9C96F5
68FCC5D23AD5CF001709CF9EA938344965F4C1B931F0492FA793CB9A71CEABD64426F7D323BD
B6C728A36D4CFD7DCE03A0ACDA7B557EA7BF06E45D2D54A85A36C518EFD49D1C9A6270EE99C1
E666A4CFA23470296FFA2C56C6A3BB23DA3964F02460F20D8BFD43E493C276354B8678ED9DA1
507443412EDCF61659F43E7D9F8625777CE092D38250E864D25A48A6B8C98416CCE4E7FFD54C
67A2B51D5A60DFBDFB5A19DC45C698704E31F2E0DD5576FF9333AD1E46371B4494A4411D562B
1DFADDBCF82C19D4926C7E2238E6ACFA0CBFD02337300EBE3E976F9A9D609F3CA98609BCB564
520E0D51D3571C02B2949DF47E5D9C25E8BC4BC8F6620EA707AEC61C2D70C0C47927DA80AA7B
E29324EFAE97E59A0B9B75A140BD1C361C8ECE026B34A7BEE9C573D7A92520443D3DA72FE395
9A92FBEB7B5DD5CB122D5954F05CD1D04FD4CA63199FBD317D46049B22F537B79E0D78F645B5
30B1242878AF90211A763A4EF0E91AC56DCE00D139FD09CA6B61C6DDFB1EDBE60603D15BD3AD
1365EAB06FF4AF14B1CC12BAA50A4C3ACD80706EA782EC223F6E720CC03263D4550B6CEEB5B4
38B187126A82681421C1861B66E8DE4F4909F67AEFA5A0D40BF3A612FC31244046BB2A2E6186
E538713D59D9AF8EE7B342848404FFF3DD6C73C55A1E99C7FA249C0D9E83055884FCF8BB94F7
3107AE38F047417BCB044DF04DC65E6C92D72B647AB7D7435A2DCEB305F4DF646A2E494E120C
782AC0382664956BA6598D4EDDB7F44CACDD2EBCCEECD2F321B405CC21F84E565729EF75D79F
F4500AA56E413C248DE40942ECB1B30B875054B13B7A408BA52E85E217B4BA6F95B0A513A308
0D66CC8F0367DAA46875F5BF238253D55AF8CB05A49D7B2CAD06ED649372C98AD8AC3B6B9071
A89AB0E7EB8E19B86680400F9AC9F012CCB505D02AD42100572E62BAD6CFF40516387F694F7A
5CD8EE5F54C1F6EC3F7B11ED511829BA0C79A05EEA8645F145D644A2C9F8E1A7E1618A5D25A7
C41CDBF41496703CF5360CC9621AE428E4771D661098E6FE1842E318243DE8D2326686A121D3
1956662F17BF25E3E1E8B25C5C4D7EC78799F38E1A7B106619BBE22ABDBAD5CE28DF611BA7F9
279ED0570E29B2CE33BCB86FE51399179ABE5F75D87B67305E54182482AEFEB06C687E3DBEFE
85E19B77EF9ED9C8321A347D33F92EB1A117AC4BAA1DC070F7E393A82332618DA79706ABBD06
707D4050015C93B86ADDD726FAF46AF93CDBEE0BCDF78127BC63DC6232DF32B47336132418D5
C2AD91D766C80A39C21EC167A8B94795B05CC8205CD0CD26F6B243D057F046E562EE59C62A33
25DD24BE8C054E55BF07E7A0247513F1335F74C56CD26D2EAC7A7760535E89BA762359F1AFB1
F3C5A300002C2BBBD63B9D0362E4DDC8216203EE849FBE965B6AB4F55950FED6C3DB0E8659F1
99FF347CBE158D345A8A318FE982BCC5358CCF0E9E3C7472B293AA703E51C1934618D4A3E4E0
FEF880A943C38DA3AB5AB1CBCDDC6522007ED3A05C978CEF8567EF14A00CB384AF7A14DF54CD
9DE09935ACA2ADCA3CCBD7F4843DED71A1FC42A0C0027CA6214B7F8D5F616A1BD4CE8E5463A8
A3370000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000

cleartomark
{restore}if


%%EndFont
%%BeginFont: CMMI8
%!PS-AdobeFont-1.0: CMMI8 003.002
%%Title: CMMI8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright:  (<http://www.ams.org>), with Reserved Font Name CMMI8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments

FontDirectory/CMMI8 known{/CMMI8 findfont dup/UniqueID known{dup
/UniqueID get 5087383 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI8 def
/FontBBox {-24 -250 1110 750 }readonly def
/UniqueID 5087383 def
/PaintType 0 def
/FontInfo 10 dict dup begin
 /version (003.002) readonly def
 /Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI8.) readonly def
 /FullName (CMMI8) readonly def
 /FamilyName (Computer Modern) readonly def
 /Weight (Medium) readonly def
 /ItalicAngle -14.04 def
 /isFixedPitch false def
 /UnderlinePosition -100 def
 /UnderlineThickness 50 def
 /ascent 750 def
end readonly def
/Encoding 256 array
 0 1 255 { 1 index exch /.notdef put} for
dup 0 /Gamma put
dup 1 /Delta put
dup 2 /Theta put
dup 3 /Lambda put
dup 4 /Xi put
dup 5 /Pi put
dup 6 /Sigma put
dup 7 /Upsilon put
dup 8 /Phi put
dup 9 /Psi put
dup 10 /Omega put
dup 11 /alpha put
dup 12 /beta put
dup 13 /gamma put
dup 14 /delta put
dup 15 /epsilon1 put
dup 16 /zeta put
dup 17 /eta put
dup 18 /theta put
dup 19 /iota put
dup 20 /kappa put
dup 21 /lambda put
dup 22 /mu put
dup 23 /nu put
dup 24 /xi put
dup 25 /pi put
dup 26 /rho put
dup 27 /sigma put
dup 28 /tau put
dup 29 /upsilon put
dup 30 /phi put
dup 31 /chi put
dup 32 /psi put
dup 33 /omega put
dup 34 /epsilon put
dup 35 /theta1 put
dup 36 /pi1 put
dup 37 /rho1 put
dup 38 /sigma1 put
dup 39 /phi1 put
dup 40 /arrowlefttophalf put
dup 41 /arrowleftbothalf put
dup 42 /arrowrighttophalf put
dup 43 /arrowrightbothalf put
dup 44 /arrowhookleft put
dup 45 /arrowhookright put
dup 46 /triangleright put
dup 47 /triangleleft put
dup 48 /zerooldstyle put
dup 49 /oneoldstyle put
dup 50 /twooldstyle put
dup 51 /threeoldstyle put
dup 52 /fouroldstyle put
dup 53 /fiveoldstyle put
dup 54 /sixoldstyle put
dup 55 /sevenoldstyle put
dup 56 /eightoldstyle put
dup 57 /nineoldstyle put
dup 58 /period put
dup 59 /comma put
dup 60 /less put
dup 61 /slash put
dup 62 /greater put
dup 63 /star put
dup 64 /partialdiff put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /flat put
dup 92 /natural put
dup 93 /sharp put
dup 94 /slurbelow put
dup 95 /slurabove put
dup 96 /lscript put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /dotlessi put
dup 124 /dotlessj put
dup 125 /weierstrass put
dup 126 /vector put
dup 127 /tie put
dup 128 /psi put
dup 160 /space put
dup 161 /Gamma put
dup 162 /Delta put
dup 163 /Theta put
dup 164 /Lambda put
dup 165 /Xi put
dup 166 /Pi put
dup 167 /Sigma put
dup 168 /Upsilon put
dup 169 /Phi put
dup 170 /Psi put
dup 173 /Omega put
dup 174 /alpha put
dup 175 /beta put
dup 176 /gamma put
dup 177 /delta put
dup 178 /epsilon1 put
dup 179 /zeta put
dup 180 /eta put
dup 181 /theta put
dup 182 /iota put
dup 183 /kappa put
dup 184 /lambda put
dup 185 /mu put
dup 186 /nu put
dup 187 /xi put
dup 188 /pi put
dup 189 /rho put
dup 190 /sigma put
dup 191 /tau put
dup 192 /upsilon put
dup 193 /phi put
dup 194 /chi put
dup 195 /psi put
dup 196 /tie put
readonly def
currentdict end
currentfile eexec

D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C545D25FE19253
9D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB47934F62D1F46E8671F6290D6
FFF601D4937BF71C22D60FB800A15796421E3AA772C500501D8B10C0093F6467C553250F7C27
B2C3D893772614A846374A85BC4EBEC0B0A89C4C161C3956ECE25274B962C854E535F418279F
E26D8F83E38C5C89974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F024
867411453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBA9B440A6DD72BF897084C90
6B05FAD969086ED21AF0AA1471613182B26117D7494DD9F9270EF3ED8DA4D957225F75D06023
7B6DAAD5A0AE3E702B3D1C437835B93B8AF1F9E7D966E739CF3AD5E256F90286A34069E5BB41
22F94F18F3485658D0D25B938522A8798215A417CA2CBD20F71C5C5FCDE21EEA7BB27876D93B
A667868A419287FE59BCF538980597DBBA743DBBDBEBC61E3286DA7977833DC8BFC5E52FF5DF
5EFD9A92D070EB769E31E760A50FDE012DC0057835E8B9B046FCC83F1A0C40326AFB4E3A0CC3
BFA35FCC64E32854F32EB7DF10A19F95830136BBB8139DE1663B7FD7BAC3F9964D303D4235C3
C6B4165B66321E4EAC9FE3C023919FB5AF90213AB8CD67F43AF2B5754DBD33F46D66881BF047
E19A8413E9B75F6CA2E411ABA3AC218E83243AB769545688BB11C96D144E31B8B1D3C06E94CC
4E0CA93E8AC215264E7B8C0B6A8B0A8EAD7DD22C978F30353CCCD8835064F3B30B573862B9F6
F1BB4F9F0EDE4349D47F002E0126BA5B28A1E973729C67A9C6EB6420FEAA18CFC71EBBED657A
C70A29F6FE28E1911EAD4E5FCE01F01553E49DBAF680D28E03C219FB378B7B185F33D4600360
AE9BAB21EB320A53838687730E1FA9B864BB874B1C23A1D0EB0911D4862455B2CAC2D26FF4DE
E1790712627E288D2BA460988B27A67DD7DE61E16D7269771E1B9D34A7648B7F763FAF32337B
EB5DFAEE98C7BD077B8D166DFB1D304082B1329BAB5A3F2B28AFB91643995CF078E2F621AEEE
EB34BD429A9086EBC1C72B8BC1C64D53D5A3F6D45E6B0A43FB098BD06D342DB86EEE5D05C450
0CC41D49A4962B9DC51E6BCD91AC03D6BE5E553CDA72D202CEA7AF493593D127CC518769F82F
035BC86DCE69FBBAAC96BB78CE6684EF598F25E1C6A31D3F28C37E02E0F468D9BDDB2F728157
0C919A7E5D6A22E711EB29E2BA33CB1A13FFCFB5EE60B61FFD8F866A7DC7DCCB662FC427EE83
2A4080BDB420DEC645001D884279A089A0C5136A279C307E18F8540416EF50587ADAB45513C4
667F5E4EF1739242C7AF81D11089F7F62B3AFFA74B4AC2D124523FA915B8A66DBFAC8DACF547
0462BA0DA2A712E265F9C842411C0CE6A08C84EB696A3FEC3ABFE555382DDED81622F1FE0DE0
E5A6063014045B8C69A534300FC41F0BE40092FC6D0F9E5D34DFF0C426931B3F47A9A4CE01C3
1784E7BED780C2640D818A8B28EA5874E76E070B12A648ED4101C378A134C6E33709A0B8EDEB
680B3BF2BEE3BB9AF99F45A782E6BA676DD2454F30BBF4EE1DB06E5E4313C21C68B8026003DF
667F6EE572DAA19217BE5EE31DB62B127412A09122DC0A9C0EDD96A0993570877527593D2E91
2770758341C74BBDCED80EAD5C98952EEF411427B9F65DB133417604A367344E486C0BA25EFE
E39FFDCDE57C803ABA1E3866F02E724DD627C296965ED85E96B095875FA363A99CAD79019785
CE9FF9F659B9158A174666A4AEFF45B5B243550C9293F0C139AB065C9B2AF19AC0BCAF65AA7D
58B5F24FA7C33A137881D3A7867CE9C0606F46435CB688D206BF9493B500AAD7105895368B95
BA4425333C1F242885E87CA78CB97B7E81F218F823F2AF84B9EAA4AFB3A51CBC49E9CB381E29
FB8CFFF3034EF1C722503F3C9D9646A585D6AFD7ED0A7B8D559F461CD4E515930517044D0B4A
D4AC3A4D3B72023EE85A8EAE09BC0D1BBF2E7859E9FC6CB284554B3B4A5528E82269BFADA90B
A4575BE70FDF15617DB098A2D0EF645C51A66D93ED6D5CEBDD3D4FD065907643C27E144FC89D
ED5ED10D01C1E124614B52CD092612E1969763D4A274384346404C7C15074A418DA629D1123D
E6791B056CC9C0A3EC537C509FCC8B70E698B0E76C1629828F6329A71EB59CEF49064774FFE9
87F909979FEC183A62BF1E69D3BDD8086F77500EA942EE4C193B4CB3E11A7C5A8E3697F2BB7D
DF5E1B78AD4BB17A60ACF255A59B2D7ED18F53A4D5796D826263EE3E53ACD120790418B0B4EB
0AF786D312D7C7C4426C5904C3A7577A643BCCE7D18AA14C37603F7BAF11DD21BB53D044A4B6
159A342550EEC56C8E664A843B9DA091F88ACAF0EBC75BD51D70483121E4151154EEA8807077
8CF7663E5AC0038AEFA78C9C21F9DE964C93272D5FF2A55679832992C51F6A3D8523085DBC98
18DDEDF60B4E84E5AE6E770EB2020E8F5DBDB6F00A170E635BD34CEE46DA79ADB08EC9D0268F
38B5E89CC46884F9D73D939BD1D3EBD890BEF71F04140A1C08C128955EF0BD2C3353D6DDF20B
DF75A2B0F846EDA4C3F5EC44CBB7F95EC85EDE7301D8CE9184FD69BAED86CE555F0A2CA62C51
B90A2F4054F4EE75956DE6B4AC76F93D8B1618B5380825BF5183CBA93E46A6377BC81CDEA928
FB9793F8619AD2B800EDD88D4394AA582700EB8B0F7E337C60346E7B274CE276F6176D29BA9E
E1E2530E42AC119F883F51C39D68E4E10210B7EAF1B09532194B3C5A9C1475F56E08BB040584
76617A9D385717F0935FDB33915A70AD89B46B2A8B5AC5FA0269D55ECE06B8527D8094A372B5
7A8527AD9B5E1AB061407210D103FCCAD69CC61EBC0388AA514E77034E8E63EFB9C26FC4C6FD
0C711C9D22CCF1D7F1D73A8A955D22163E5A7D6C2EF097476C7F0430DD267AD2A4354B464840
FDDC5236DD8CE5BAC0BC742F5D0CD3635E3915E88A3D12C698ECFA7F82AF1A06B9B4E556D744
01034059D15527EFD05B4AA40B0C82C7436FDA71E7C94406363B632072CB3A3B5E5318044FC2
959B4552661391367798A23B222E94901C62D3059A9755DC866D2BAAA4F1D64D0A8A70A74F11
18DCAC1D05FD7B1FBA47D776AFE8CD614AAA3AB2CE279E92893518E1BA3E50A815C97D7180E8
CCF149EE977D5C4C291F92BB58698149D30510AB6C7A09BFDDF236F33F12E5C68F9E3E334C62
A170DC3514E4C48858598CCCA7DD021A822D1BB18BE4863DAFEAD512AE054B6A21691701E975
4EB3A37452B3F24B7071EC6A74C73ABAFF68B6E9ACD16305E96E2AFBAAC487F7CC293AD5CCDB
CBFA95A0A0BE6AA2B708A156918B5E019207394C913729F372EEDBCFCB77A5A9BD8FF100E140
C71B0A531D77A68A161667657A80F6411E661BBC400FA2D040A306DEB216C5239B74E293A4C6
CA9BE312B877897E7F593A826614DEB7B588F76986FA7F38A22ED99E4F46DE910871EDD1BD6D
849761FBBB0923AEA7BCF6879B8900028E30EE49C18B5E4B391827A069358FB9469EC9A11ECB
C676E8F44A31FEBC79CC82193A04EE59FB0A82663625EC3FB0EB44C625E10B19D65ED70518E9
C00680595B04BA3311A715C9D975BB59D663711D1893B95239F1FBC1B43B3FE89E1A2EC02F35
27AD8E633587FC7F5C8642F0BF7CFFB610166C187AA490D94668615C3E0AC68B8C38749E89E8
1326D10566B1C323605B935752E8EFB1ABE77A120C343586EB52E1EC2348134094F3419BD8FB
52F3BC76CDBCA032C061689A8BE68009DBFD963F7C719EA084ADB78A12E93116CB344E3719E9
D4E066A18D63656F6A8B6EF52EBFFD5C3B1C303BF896055B896A596707A113CF5AB4D8A1732C
885B5D2BE98E8949EF163E08D2D9FB537041E4B345C1C2A262FDA6F6B2E6F3A8BFD53492365D
856788C43D37507FD6F867B55DBC8E3663AFB662362861AFE8B3CC5D066B429461A118D17E91
E877DE062CD3780B82371CDA98C0C8EB8D3EC9421438DE852AC7AE342C8726177F075F9A9DBD
2A59388138440AD3CF13E4907E459F739792D9B03426A08F41BB476EF28697DBA87BB4AC39DB
38D73760506B3D73AACB55836F8FFAB48AA9ACCC08879253BDF8F8B2D47615345E182863A497
015483A1703132DF7894346DD628332BFE7B20BBE6211D8B3A4D0A5465F7BC32FEF7A5262409
6F8FFC4A492014D9D9D1EC997865A66A3BB8BD4847E9D5E2B111193A1FB4772182DB32DBA892
4F75C7A52A0DA38EA8833CC41AA40FCE9EA018FE34F65008EEB6972EAC2CEC537461E6E1B161
1622F368A1A1241CCAD2184AD832016BC627E5E58D9148D73F7CF7A9E37F0C8F1DF7099F75E7
81EFDE03BE799F668D99D551AC50EC514093E24C431D88199D562B7632A2546B14CF1C193FCC
4422010360DD647F3228D414760F53F0583629CFBCCAF821B786AC580344A661EC9DCDA18DC1
B7FA3F108E8262848E7DE08832DF74262B0CAF010D3F6C60592A33BF3FF9DE886B8BB909362C
27B8FA49CD155780E03E34CBF67907D36E696DB8A19F6B1E5D361C0952BA1F09681CD1F4D527
9DB6033C067E844F8625553E9729D477B71CEC655BA53B2A29462BEE213D3FA9E6A2A1EB292B
4EBD6E040BB2FDD4EBA9B3ECC1B065C8E8182BF6C161187BBBACE178EF9119C9221BC52897D3
4441AF441D4F97AF3DC4BE3C019AC623CA73C33B66CED3079E899480FD389AD6C53AA1E72948
9C0F4F48DC9460B32C965930793EAA5E7BE298987DC5B8E4A043341BE14322783202C94E763F
F47CADEB8885E8D3A27EB118A708C532A912FBE10F9219CC3E89FFD2621F012BA2A50D3B32C3
8C0EA5AEF30796A54DF5DEFAD6A0522847E7A6428103163F6BAE666ADF5CBE1C85308AD051EE
D2FCB6F838DF49B5287DF8A6207D5084791EB2D88E5C011335FD149BB239F965A10EDA5F00E6
AF0D4DDB42D6C4E8169B7361D0182B983EE1FFDAA508F54B992ABB9CC4A97735849C368CA03E
82CEDD8A80310A9E58C415817EBB007656A626A5EC55766DC242854F06761634F2404D369A0E
4D5038E9A2DC1769427C08BAEABDC3263B2152FEF9E5FEDEB17198055D7CE538CB67289B2B71
63FD9A1A4205147CB25C45202B8EB3216DFBE6E4AD4FEA2EFD4199F73C24380617B96724B7F1
B82B92E31603795063E855C0871663E74A4DFF81EC4C57E18DAFEBC839A2F7F0EA56A29BF414
F5221E056C121FBF9F464FCF4E4C9AED12A786AA9CEB188586BF5DB842098F009095349E0067
4B01F297D3F03E0C3002C537E944B50CA86CF19A77D065280A60AB636C3B41323AA092D3AF23
75493D1B27644C93337B5641A26418EDBCD16CD72A5AAD366021918A08AAF433CD83ED491FFE
E09594E7F0A8090DBD20796EDABC1C8E279ABB6CB8B79C28EF5CA567D300F01BF988284D9BDF
97E031CD7B5DFEF22F53031B23D70727B9415D7CEDF5A3F6D562CE8381EA3659C8579A6D49D9
00E9A64E70801B991C6A35162AC359B05C18CF2E12520A617099F29A9394E7F13DB7404F9C5A
99E28F5FA7A5F7D7880B297C2713EB6F8E3F0D07A47E29BC4D7B203BB43472D497FDD1A5D744
0DCEBE901758373BD7515E481E303F7E3D04C1CCCA302DB19AB6FDC13C288D5DB62F528DE9B7
9B148C8570471DE0BD343CD3D65140A03394451E9DDDA940316D79CAF11E348F678B9938DCCB
9068445033825CADB0A6E571AF9E433B3AFB42C1CF77D03532EDF7495EEC82EB69FE4ED39B1B
892ED99EA53BD9509A601CCBB9559F3E2426B51324E671D8F5E27F474BC660D02DD6CEE8E163
2E17C39B0C75B375CADF1196B3F4BE77088CA2DD04A0621C077EF829B5B434838BA8EF2955F5
270264C923E70890523928CF5BB04BE0B6004D9405B6F41C31530877C6F2FA13083213A55ACA
D2E7DEB48305FA536FA532C35E8B1650C6A13ED8EC5315729B7B1E5A3F589D04678A1F4FED16
5923D2A030C99D0490F5920FC1FE15AC12F629B5844ADBF13B02CF604093C552FA8B197CC7E3
8F8AC442E35578FBC72D0EF6D939A20C5764132828086D71F223DD3CAE1F65E9947BB67EE960
80875B4F1F81AA69D4118D9BB8614C2BA0387352EB5F4EEB869B27C4EAD5512F30D7CDF9D28D
FB09E6279D07D7F96D5EE2829351E6100BBD663C28EC6398D2C6D16F3C881FC71ED26FCCA12D
840D5483CF10B5D5AD19B4D4FD60B462C1A701C59456695F8F82D73C147B6F8875B23BDEBE67
4ECEA3A8B98C41B753B77A6ABA8AB6C96ED2E831C93488ACA8B4BF84AC06F6340D562530D0D5
FFA0D54219CD706BD612A5D0396C19EED4E91ABCE6F2F1663DED489EE088CEBCD7BFBA33C99F
5C97CF4F2D10DD429C791E51277483E74CDF60D9FAF66702610F22D1B4ED71D2DC470C84A46A
86BC7B71430A5388C2F2D0F54DACA44AAE4D1D0BE527A595800A9037FE7D670FFBEEFC134BB9
2F6027314A4FE819BC5C1EF52D4D598D798F02B71188B892FE8CA9564DE0517E93A9E9EE3896
9F8141153E0E64DF7BCE4CFEBDB61BF9DB1F106BEB9C8F1A3C3B83CA393EFCF0E35A4A48226C
4B9B541B22ED2860366AFB10A754D35AF394E9308F9E50AD37CFC0AFF6D51E60903C5C300B2B
4C791C2CCA98840A2985970194BEEEF7AAF324794EA1568D7859A80D43F1C4F38EAC08C6B3E0
3F1E4A033A9A33F07D6903F8035B3632FA609A28A6D156E147CFB892553B3ACF9B4D43F99118
8F7917B37AEFED17471B37EE30EA578EC8342214A9D7529C5A97DE061CF9D62DD2059BDBD4DC
B92171D6DCEF294F7A328B2457F5A3D74F47786C6816B0AD065289970DF4652BC565759CD7F6
0673674FFF8864E289301237A2248B8AE4C5EC5FED526C0F728866F3490DC95E62A0BCA2D74F
F5E2F4EF96F38AC72A0206490B78E430D710DCA080B1E7387270A7A4F7573264283F085FCCFD
FD6C30026AA278EF59F7A246677023A964E9BBAB13B32CB30B4E3618EA0FF5AF04D928391D9E
67C43E56BE00F5C0CFA5F6C0964BEA165ADB2D4B74B5EC2AD82569A62AADEC8F346021E68B0B
F6E6BBA2407F634AEDCDADA412D43A5C4B2F2135F3E9E5E8D65CFD43F4E3DA8E525AF550E0FC
DC10395C129B037B2A6DAC777EFD5C9DAD4BFC9A861449C08D3DC7F1771FC172752741DF705F
389BE2B256EC80A43BF379FA28EF7230D36286FC3F0667F21B1EB7941507C13CB939D828BC8F
2760D580DF01A7CA14118076C6FCAE37989FD29CBA8E935DAD8655F631EA6560EC5AE5249B7D
B86A77F55F5922B6A2AE94AB6E199A88D457B54ED645E57E792DFB122B399F3A9584939BA3EB
118A9B9D378BA19526D351DCF0CE300C28D895C6DB952DC353FF2344FA603EF209A8905EF34D
3AD863B185CBC3A23F6BAEBF4DE2DA1E4DA5C8A55C9E5C8CAFE77C6B0FAD41754823DAC73672
BC1FD755058E9F8B35E97286968BA9C375F25DF405C6C6D712AF224E3AA2E400BB009DF45732
0B2C13ACEF8FF422D20B83675E041C442E770F7A89AF141B0F2D7C0991468578750D4CA4966B
53C965DFB06C10A81B5A24C6D3309F921DB766C55BED2B43ED1BC655AA128DD54F8CF46D9DD4
C8D7EB18E7A55B15FE42E39574F1E5C8411EDC9EDBA14B1E7AD8A2E956445CF2F2F427194A0F
EC78844ADE29D7A43F7E0922228D6F3255D59FD7F8660902A6C760733006364285AD08B537B0
FC98B8C66F47FF23A922B4A5264274ABF2CB166509B81EF9837EBC028B7C86B627B9AE0BD903
8F567CC61879195B7F92DD22672708917359D77C784766FFA6D2E9B2F171694679E54A3C0449
BACFD8B19DAB8DF9D4B88541259C8946E0B5D772E8DF9173E32D5A80C571E15CD465F7CA1DA0
7383FA0D85E2472256BB99967897E536D47EA366FBBC2C9105B74340400777628742820E7107
B69B6FDA68304A40C91A7A1FA6BA0B59619EBE00DF91C6F3D21FBBAAD08A3B305FBEE1ABA791
C56A80EE7389CAF1DABBA278F11BAFA2CFDE8A2054E58AB806D9727F6A3F7C7EBE4EFE63F980
74C2F7CFD63062E29901EF4E3D2D5E0BAD4BE96382D1C295FFF3DA9644FF0D2941614936BCF4
33D4FF6D41216B06B756BACEB5FC5454C20F0377B58E32C7ECB42416992209A500481779055E
2894626EECEAA23098ACCD6F94B4645DF6C9DFCBB2613F06B1BD577E38DE7C917F97CA8330C4
611B33767D297E4EFE50860BFD70F98DD9B0F3FE5343BE21BEBF67154248AEB3A2D306A5B302
105669122D86E83BE4F04FFF51A10A8544B4D4E849135EC5E3F9AB542EBBDFC18067564E485E
414DE0A00C6B7E876560A69AB23AE66B121EF55B3CE185C2DCEBF14A3734B89A07BC286839F8
70508375128EC520FD4CB26E862240ACECB88BD6B26FDBD3AA05BDD32CD10E888AA07D76BE16
7742D0BD0E131BE6E9DB97090771F86CE98994E14DAA311B6E3CEF7722552C553158D9D79C59
80AB15E5B768FD3EA7CC12894CDF1EBF3A68DEF3D4CF88427A21DA520E916FC8C7AA53B4A323
4F19C7F77F4C4DFC2C602E2BC581122F3123AB7018983967F5D85C66278F9E3E3CDEDDFB173F
DE86411043257CB4DB5E91D2F5F7673C9217F889C1DD570E2032C7D76EFA5908261600AC74BE
E665F8ED3BB0A56733C69E44668477DB93DED0497E5760F68BFFF7BE314624D919C9A3BEBE8E
A3CAC3667E2ED796A856AE7B5789A4491A9FE3A574F1EA819C313B3A170CEE768BA5B6BD6060
2D4426F9EABE860AA83CB86023E9EF9809A941E29F521EFB419E6EAE9E9B83AB05A754E69FC2
3EA7D3619865A142EC18161428F501106D57E19EDD785F633B43655323922FC7110EBB1B7BEE
6DF598FA665ECD389540A35545736930D015C8FA8ECEF5ABAA538308D4B07A9731D947C95540
47342865FACCA912E2D16295635A7636ABFA0E9829C0BEB1460C9D410EF7BB49F3EA6F565857
B248E738239C43CDC215A1CD4717D18ABD3F75942DB475D3F96691DC77B79E232ED41737C237
A6CB02C881916769E1AB1C759B36C8CAD1BD60E741690187E8260BDF4AB0FE5B6EDDDD21ACC3
C66954ECE2409B5E76A8A3E613E53F024F0854D2460673185ED4B14D0D245AA34D0F5A3865DE
F7727025077F623D24A075AC5C4BA0302D4BC64C19A374D2E217274A1FF2085EA08114A326A7
C3A75BCC275FA724B96E2A497ACA4705EF561027B629689CD299CBEFB1630FE4E17EDD58CEA1
F17C9DBDC9E5137D5412EC07A1F8B8A67390223FCCF562BEA08450135201FB7266B89E140917
DC752F68C759730DC6D843A1D5660619E0EE4B299DF09D160A1AA96E7CAC6246DC3E8E1147AC
67B33A954FEBF1A037927D6F95A2097AFAD44C57F7FFEC85EA99B795090934D82D1D7A3985FB
6207310544AFE8B99ABDEDED565B1CB68B11C0E04C3B0EFF812E407FCA1E395C95878AB0E189
4258976DA888B589334758134831018AEE6B78144CD5B975C1B9AC2E22F3DC7494B9994FE997
648C1D86C62491B589CC74E00D95244480AF698A66D681FDCCD5A172879DCB90629A398E79A5
16F256F4EA5F1EE8B28A82AA924F5FA669B1B39468F3EC7D17EB06B7B9823A7678C88D5435A9
B74835FA23032DD3579E858AD8A39ED3A90D44AF449DEB24FB6FBDAE56ACCB50509D53793F38
92648A00B68BE2E76D83D4B609F6AF93914480F548DC7A40DE4B0C781D5776EA318FB3DF6A1F
763504011D4B7B332E904266FCB2B670C14E26BB9EE1C34253ECADE5058D801E4F260E84DCCA
F516EC3277E9A6337290FCF2725E538BB3C48E78B84CD9067C54B55EB1113E7095ED35F95BDE
7739120C06BA3D43A1DDA569B496347557A29D53A630A1952541A78B6013D0EBC1717EABBCE2
212649C4704F83C05A867BB012FB467875B3C81ACEE3365434D839DADBC63803515FB4424A46
DEEE817E797069EDAD3602AD42158916D8C38D5B03161B60E96AB69B74FD5DE8EB45313E1AFE
0DF3B16CE0EA5BBB8B0E4D3E083F1EB603FA14E63A2347647FBCC5DE1124958C80BB637DD6FD
8A61D92D5F2488E505BC710837BB99939C0D5C2BF0A94BB76187ED92B0650C24448F134B4E32
D86FEE388CABB0D79AB4318CD562864397AFF7D2ECE03AEDE0113498BFFF775911E82A833376
CE0D42E92506899AB15C6BC552054D2F2B6B637222743FF2B4D911924E15AD49871484B0FEDD
F8D9B99611D47DCFBFFF09643777593CF5EC558E19DFDFD9BDD7AAD3453945189BD8A3B135FE
C66258E16D620553F66FFD9B7C84D0D53970C11DEF9E4DD4C75319A80CD5B1EB9BC2BDD68A17
91DCE48FE9B6117C9EF66961066A57401C179F9C07244A4E3799908FEA3AE2278C86FB350BE1
DE41DE74E1228B4CA794636D2B9D2091C1EC14EAF7407551D39B19CD49CA8002D30D237142EA
33886840C2D55686358B11D260B2B54720CE3554B9F3719AA3F4FF12CCD9DD9C1DFA44903719
8C4D49C87FF2680C8A0559F4846A5C47F7B8E8EB3835AF4D355AC2D650AE1260CF4AC7EBE753
D02FA7B5FE814EE9C4A6982C54536089D4411FFAFF46AC2C547D8A1F41BF22A2A2A2DEE51A1F
872E409FD1491EACC63190A47964E3C5BC3BF3267AC4306805109C8276D6AEE58F61EA0F7AB1
B3413AE3650CA71B8312BA4147F38ADA08B61F5F4EB595668BE69E21878BC8B026515225B059
8711FAD5E57B54FFC89316E9BD4773374F052AE4618B52230182F20C7063575899363A2A0C6B
DB3DDE78EA71B8AAB813D96E8A44205A96E975192F9A78BD0A055AEA03CB72AE979438AC9141
18E6CDE466F9CB274F4AE05AAB8EB30A4D717C0645900476FFB68530178AF0431F373DF8E10A
DAFDDFEE713164F23E0A4B0BDF7C22B87864B71BE9FFB4403F60FE62B48FFEFF3EB4D1A0EB01
33AFA436C5CC7FB0F04FBB843F15C37AF3536DF2D63A19CE375F315ACB58420EDFC916F9382A
9F13166CAB1FB3094B0FF3FEC5BD351176989A7CD1D45B5CAC1CAC8316C3B6C9F93909A03785
652ABBC17CE47CF9F8AF4E8EC22DA5D8C99B6B4960CBFB65E76837B6C1BF799BD7923F0D62AF
F94649AD29A5CFA9609D02DFB72795D46902E620692139D10451E40C98857578F44F9A4F6D31
1E9D13CA3BAE922648D3A2B04DAD3362E68C1D259FCACDDF5CD76E8A3B1B2ECE370B9CAF0D51
46D76A0B493E07CD6689D57195CECE6D8DE29D1E55CCA4C7BA8060F5105ABCE8D6ECA14AC09C
829AF2A37B3A216B3AC1F8F242EA177F16EF94EC09AA96C8B5CE2D0199F8CBD52BFA35D06B5A
E936FBE57D9B1A5800C2A23707A4255A88E1596AB6B358CD40F61C3B1B18A82903246A2E990C
6E7D48BFAC7E51162A606EBCF17F2EDD6D9118937D7C55361DAF3B62F44389FD424785EFC81B
CE793E240B41A237AD8546A4FA04FA7E867D03CA25ADE2143FD0E4539752DE2603198CBAC0F4
A30EF636119F9BF344A96E152D709832F8A84A6B135EE4EA8237EF38086B98222EC0ABD27D1C
54D977F3551823672557C349A20525869D569DA66FE556747A218A4CD35CB6E307E648681138
F96396DAFEA2826472A28BB5394B5090C84FC05E396245A1FAEA5CB865D4132E27BE88D87BBB
C007CEBF69A18D1EB9C793E041C9CE04BED0AA7396BBF47FE7B6710C3B76DC04D6DEF6AD1CFB
E6005E257859E58A7796BE879108339E413603CDBBB6EB21A8DDC512E19D95DE278F78618CD6
0525ED9B48687FA60FE1D171A95496B9FF3900D8466F485D5520E6D1412B2A6D8D7E793F99D0
C76EA9A7E35F7B99F9B3EA328F33287B579180BEDFBFD263F20C0A5588613A6F5D55329129A2
056B7E872505B64D6E358EAFD812571E1482FE750830D7FBFF27D4DF9725432A1E755EEBB263
63CE1C6602715675B402F2B203F721CE2BA74EA410BF643596250DA8E2CB2D6323BBA5008C5A
5D6C775C5F6F7621FECC3CAA5347721D9BAC5A301191A89420513C0300478600592C2FF2715A
33769FC96680A7DF788AE67ED13C88D77680271A93818078272F2C541EFCF998478ADCD6744D
715446F0469F4170615B17217BE0EF56F30DCEA2A63A6AFCB1AD9F4760B7A5F718D1A019A4FE
C0068FE570B2F5CF2B39B1590B8114A10453E7E00D9934DE4CDF34A85D8B4DDCAD654C2AEB39
248DC5E15532F223084431D8B0A291387CE4EF5A71A06C7DA2CF8C4548DED9188825714769E4
A92D7AF9107B1ACF6BFE19858F1D9ED4689C5C62FC284D051491C3AF098CDEF9AD6FD1818636
89B2F2B842211215F7F7411FAEB078F328030059B4C3119B57E0E961880F408AE50EA0F84F7E
600A98CCF9030B7BCA883E1C69759B642656D95511D7C38CE426D17B8A1FE8117198E3B6DA08
00F7CE9CD5E7BCADB0C3BD00E85290E9DB2A9D79D279D9A940DF83A62790B18EE85C7DAEDE25
49089EAAE49778D7C0AF4C995EFAF04AB1EDC529136527B3E1F12B51CEEFC0EF1517F9F5D64E
8D5238F78A5A1C676E333198A374455C75E85E8CBFF6A34CBBE9AF23D6947CBB8D02BB9BD924
16D650AD7C688565616F7E4A745061FC20737ADC530BC4C02FA82646AFFC2ACD21B018B5FFF7
C461ABEAAAA5DC2A04258B49B9E4AD2D5278A472D2B5F163EB0CE0A46724F99F5F89C0482889
C544373169BAB927FAF7AF451C664B6EB7366EA9F2DCF0DEA442B17D26889F6BB334D998641D
70F2F539E57501C698195B8031CAFC002ADED2F88619F37B51DD94D57C9FBA4552710942CB4E
09EE8108C0ED633035E70934B9F970B7D7168E0AFF6E64B5E36B3EE7BBB94E1288FFC42EF9C8
9B5B4AF8A27277275B498CF4B00FDD3D022AE73FF71105FF7852655C47F7CB97BB5A74D1072F
F234A06CEEE66D9846A22919DE8AB9C529F6A497E48126C64D139CF9DE0BEFE488B6F3A246C1
8B99C626F6841E75D7CA5ED680057A7C162EB906BD3D093D93D44CF99402522A523ABAE6DA8B
C83E931CB08BF96435C287D281C986A1803B19E1D8B35EC2E6B2BB95361CECCE82E0144C17F7
4BACE7F4962F886834CE12F0F3E5436FA820650F5CF9E2D3FC425379D5BADDC2D92B4D0DE618
F5B886616FD6F934179E611DE2BD3B179ED251DA586CD7ED0C8A304376BC33FDCA06D4C447F9
D21E73430A0314CCC895902B6133C82E9F63BCEEA0D6B2C8A94D48BA74794D4432990F9AA72B
D918DF872D359F8ED67216FE1D978777237FFF91EA7CA8C480D6EEE737051C55625AD145C9B0
AEF420FFFE7099BECE79CEF11CE15393F11C982BFA053E98C6B7C3FDA6371DFADDAB6F99DD54
290A931B17ECC8E20D8F1337549184BB804FD9280B47BB65E477FEA627E2FC26255C042E6A64
3340E11788913BB31931E8D97B933EE0BB8B836852EF6D86F57E587823FC06272ACE98D5D34B
AC804F59A972BE92D8586CE85B82FF0F29196BA0A8FDA61B0EE3FE6C01370388AC2233639A8A
10709211357A4FEAD9DE513E0D6D14A398B65F94EB45BDCBC9D1F850BC68F48C1947FC5F404C
BC62A95D65E0121F2A66DF7E21B5B8396296E69FCA6E1F8520C9E6C34F1A3FE014BA30890D50
81C05E1015625BDD20E2A191334D45671EC87E207BF0B7FA76CF0FC92184B9B447848D5A5541
1C18BC46CE6E57BB540FE15F490EF6C26897637A0E7946AA8313C0F9C77266204AF421B2F7FB
6EB12C9B47C9855A629D6B6A6E83FE964E380ED0BCDC6ED700B39B62133CC189B7275EB8E1DF
257319A8AAAC0415B620A548AC00E57F0C05960162DB483894EFC51AF3B8D4EE82B2DE929CFB
67E33E0A6879F55E07C7699AE62E79E93FF61827C7B335D43ECF9CFE4797A0BB32555D8F47F6
1C487E29CC12A18214195A933D3C80AA89136CB703C237A81A8BD7CDD11FC7307778D37F9C3D
CABC830F6C8627B9DB9CFF6333D4A54C2E68221717B4C6BA39866910A6AA2921640B553BB346
BEA3FC8A7BBED5F91B5D2984D66B47719AC6243F797788294E575B712E7B53A6B2C3DF8197FB
4E36DCFBDDB1EBE022DDEE69C2D708A8A8322AF0BA41E51756EE0BD6BD5423B56613CA12644A
DCB3BE5669B979A8829B59A6558CCCEABE7DD95AF76D2C374B6F647F9A4452F9A7ADF2103165
81F204A6C63654176AB92ACD3054432F59EFD63549256B93CE54880846F75BB5F84B460F83B7
B17BF089BC37B5E5A869E3B2155527849E9D665978D3FD6FA6E49F341AAC1856BB47B90068DF
49C9AE0668566F535C1BCFC904616D299345BD7C5CDCC929BCECCBCA99F34C228D68DCE53866
676A80BE008D1484C97D74D663412655151ABFCF8876CE94C9A8456E261201EA59BF42CB69C4
E2CA3211B319175A8F4FDD4CE2E2EB14C97546763DB16642F537DDFBBD77E412AF498C61862E
27CEE067D695E350CE7EEDE63755CD50AB0A2406BCCD282AACCBE1E4DBEC9531933261A3D9CF
248FDFEEF0F3FFE2105FAB8036152FB6985528FEFD16722078E688C24E9F7350EF4A96C7AA66
E4BA378A7783DD445875C4476B73D6EA579ABC18352BEBC1FB2363886DA7006EB5C038A50E4D
721C6F31CEABEB5608116C9960A1981AD53C41554DF33DB3711A05DD6810362F3127614CCF2A
9BDDD8CD1D2B0AA621330D58C70664C3E5ECDBCADD66CED742C84052802B3A37DFEBF88B1C69
82C5355351F8D003C747DA64F0BC6140596D899E86A09E5164FAB4E923ABADEE1252F54D5100
8A42F75E3A2B30CB9CE51D484F7E497699F7036A3C085E0D6E9E11ADE94188E4CD211379C567
87FDCB9C2861585AA367B7C5579159E68A7603D1CD98A3CD984C365A0E0A4D9B01A65CF8DC76
AC8E97B4A6321ABA81D300384FE63468AA41D3ACBD9E2E2EC890F84B19479BCE8E37532BB9CA
F50BD1C74476083399B7A32D083F0A8AC3A30372C91F188ABBA2E7CA1119D5A85F2A49247D28
485CBBB513C3D494F310CD9055AA14A67322DA65AAD350DE4060D78416B2DB63EEDE914FC635
16AC7D1F4B02D7D0B5AC32E2755E0320D475D21F3BF0A048036961702BA25968E204F1E95DE9
766DD04E4FC4F159E4FA4F958B3163AFCAF9102A25E5F08E86E9F90A0D864DB442AE483ED16E
39E4AEBD31CAF3AB54DFCFA3411A0171F7E0250FD50D4EA408A4F7A0913C9569174AC16E7309
E26B61D4F90784190BC88E0ECD57A8F9D94AA172BBBB263D987CD0F105B4D6711C7375D5B2DF
5EBCE142ACF383B5949714555DD6FEC3C1050284A4C87D9A51DA494668C98ED3EBE399304F22
B4BC7CE5BD232BC8CB3FD26B8AA815BD114E9469846B2C76A74535BD2861294BF1D84251EAD2
C227B86CC5EF3F79E7D5CD23B4616395403AB4AC26E9857BBD4694D6FA538A638BB947137A18
6583214E8A6F15C83D130985E452B93B6E53F1844FBD2A5CEC913F8E8A9A3A04906996891575
4263C44637E0DAC34E7EBE28F373D09BD4514F26FF71310A8A3E0CD846BCB4AC17C220DDF8FF
9FE70673C1FDF51F2850B354874CC183BDC1FC4A13FBB9FD66B40380E348B28505BD07F98101
7A8B2F6921F34C0D2CA5AD763DCAB4713C85148B5049CBA0F9ABDCDC9357FEA489603A9D231A
CB3E5D16F1F3288AA853CBC4BE5D5331CB9CA3F8BD68F90F63719E4D141CC20D2798FC996224
D9CD6A365376FC610C27F44D1C7D2C4B15AFFC1AC95A8C74FC3E01FF2F3802B362C0C780E19C
91E8C49CAD25CF8E5F33AD7485A40BC65121638CB029E594E149EFE15A09FE85E835DE458080
A6E1EBC7B60D9148C973F852AB8D876917B9C8A149F76658A68702890782BDE4BFBB2AA2DECE
2D99A792CB91876649E079BA4A6B4DF85D4DCE5F28A35521527D0E99C9D1947606880B1E3F91
DD98CE5142CF2C835348C2DFAEFF4A0B6ADBE7D8F8F414FE3DE073216810BAF4C0F106935EEB
6C87F9783F3D033D590EEC97ED9EDA7B31CBC1EF3CDE135BD31BDF03028B3B2859A94456BBCD
E51F704C6B726C3E5AC238ADEBCE15C781F086B58D133DB503943986349EDA6C96871833C48A
ED739634CF54BD4948BCD8CC54741532241DDBB86C89BCBF5DA5210F7356ABEA7B5D7770E726
DD8FF989E8B62AD7C942BF869FCFA7033FD028C88B9D12A9C7FD216D9497FD6298088F2EF552
BD8DAD52C33FB0084DE3EA83AF35AC5E959BFA35E54F75E1EDF5C09D6A6B2E8B8E530E18F25F
D6AC3F6A954E1C8645DDB6F6122D0FBDE31F2CA272FF1B681130E572B7D3FF0222D5130F1818
E3B7519F3574518A0783400E51C49AAAFA804143DC181C5766B5A033DB82ED974B3E85CB393C
93745B2813E62EBA228FEC23CE5BB03A1250548D117D74FDD46AFE84E8B778FDB13AD5EFC0A4
F26D799299FEF9DE033A1F1D814739CF1FEE0F4E6D81D721FE080BB16036FC998CF8A26A5456
EDD24890CE28E88054EDBE9DF693C19FB20076D13C47496B43C3F4AC7A9C046D169E3DF9AB6F
4ACEB098A630775B91815B5A90DB2A4F3B2943CA80BDDE9684C926DB09ED948F43CD95C9095A
136A5F5482CEB85EACC0998A1AC866CC9B5478A51695A5D49FA9871ACFAAEEC397C9CCB7EA2A
4B9732BC3C3341FEA4415F1EFF5B1C40EF391C3F4669C89D97227E27DD962B87E79E375202C6
335490076A43C82C91B92506BF55C062AB393611C14DB67172868EB0BFEB760A6077A388C80F
FD3ED8DE4E6E3772BCB94004FFCD679B2C28F33D1835130F1E54717BC5649B1E53F6D4230DC4
6CC14DC850AFF3A9BB6F1E534BE428D31C764FDD5FCD25106A2AF1475074BEDC7EE66CD21A98
9650A4853F99C7124F714225D18729ACE296F629023A4A66A9DD00717C5945247A1F9B442BF0
686BFBD668797696EFB67AB27CD8C4A88732267CF386CC9B6A3E25FBEC6CA4582D833C60D9C8
F885DF2AFEA7F40A66BB4240C6F98B58DAFD70E9692C7E71E79BE0EA1CEF25F3619A956E6835
17EE867DADB2C8E31B11938EDA15CA039701035B303E9D9CB4BEEED3A04CD8675B1A7E4FAA19
27503AE0F0C58E61097AC68F40B18516E452AE332529879782CE0112B23C38BE6D24D6CC876B
4833278EF6057F6D0F86148079D561A0EF31519CB7E37BC9DF583B20554CC3CE7EF509830AB5
EEAE9684F5B1538812A83FDBBB5A853C22522BC471763B20E7CE3612F63612F955394010CC2B
7C2B810EC744508D47539F455D35708EE5A5202CD2A5B3B5BB8E4B55579F6508945998785754
4D9DED45535816F7EBDB00EC17E06FAC142C0D880F53A68C897F6BA3AEBCB24969CFD22AE6AE
D28531CD2F4A413E92E9EEB2DCB0A872259031E7EF149175DE4E432AEB8316658DB3BB53EBAC
C8B44DC6F067576F34345A68C2B8ED904824C6F66293B51367F77B76E7972E89DA9399EADFA3
A7F75A266893CE1E95BA10BE0495830B1AE982037221E874106AA19307276581B66ED5BCF97A
EDEB09DFB0B95601D074AEF08D2F495EE67833BC392E73BB263437634C0EA2D32D1242679CCD
839BDFA7AD9D078BA56B0BB6DCCAC56571A55C3680DEFB57C50FDCB0FC967074554DDA3CF1FA
742A3B1F51B887BC8C65EBB90AE01855BE0744FBFD7F2E117CB23B0FBC8B811D8EA0602CBB4B
AE7985DF0A5B800771AEC2F99D7A4EC66644A6746AD23E5576606D5F679365394E9E0636D6BB
44BFA25E9FDB633F4983EF92141DC1C71A67F28F39D3CF5C06CADF2BD4E05147ADDE3F50EA6B
D2B117958B0A395F2FAA26993825DF2682281A6B95A887E66336DCCBD00A39EF855178562C9E
92738AE54DD6FDD0B68542886FA782E1953BFE4EE2AEA21F8FDEB59FFD6F4A8BFD189DD3C0C3
45BFFCC3B5177FF28EA539648113C456199A477BD929DCE489CF4A4C26DE0EF71062CF1B664C
3AF5E4767B4467865E64A8903055040D298F87F13FEAE895F452D2AFA9CC4F57348EDCD6F7E4
B44B78B8AFD38A51190D0CBF71250FECD9BA42D67D68F60FD13A7646E0D981F02DE812378161
3FF1D2F2DB1A0C806724C486A1FBF8875833B4AD8BFCB5794E407433712EB91694B9A41E555E
D395C742ADFDB931DA1007EC2E95CE0A76DA31EFA24B17ED89C6992F23D1335B557AC3995B95
989BD9F08160FFD0F2A45DE4413FCC63570B2824040843C9AEE6931D3A6EC7B4C95D8F66FAC1
E5E15F802277E35C8410630C376462A0FC629A08438B65D2959ADE6086AD239D1EB06B149C2E
57C7771334D9C2A09F6BF1EC56AF77A2D7D022D7369441B5E0AA3A0FAB0F446BDF7827626342
3D255A5809E1F77BDFCD0BBB28F0C04806CE05A25BEDF3CFFAFE30D0FD8FF89ECBFC2A67B61A
B7EA4EABB4E9C2566F9468A2306236ED57A29B5353872B5FEF6A629E4015B5364FF9A3A51B9F
7C22C23C772CD5CF57E0585DED9C659EEBCBD31ABCAEA5C8DA6ED3CC0764814FC36D800FE906
422E1080286F8B34A082ECD5283B440F86074E697F424DEFD923D2F6B7A1187D295D31A67FA7
E2DA262824466E761682A4A18F159D3F7D7E61D95A6A99FDE9E475CD9F2EF0BDB0B49FE2EA13
74794FE351B0B0C853157B43740DF84EE9379DBB5681902F04CE310CB08251AD235D3F173066
2979FDD35A1FB637D22BA4E4141655F0D4E3ADE7BD759D48880C02C272FAEDA3EA3C4C4CB286
FB987EA7CDA3117B4383D27659F2EA657EA1EA00577C50F2634085C9D93C77FBDCCE09D2257B
EDAA68F5108875F1A58B9A9F762E0E6CA888FDEBEAE39E49C39F7D88212FFE938972219457DF
C038989D85DA668BFF668A5D83AB5B20CE00A32B08281D8657AF13FB75F5FC406B50383B7E3A
511B47E06CBD344DC789F203DBDF9B9D76480054FBBA6DE8D2A5795A4300967613CF567ED499
3A9D478FA7E0308B71E21AB6A430D6D5982EAD91A1B310394C3429606433253D3165DC74A910
8EA22912B2F4DBAA80347505837B9C8FFF1C50E7FC36AB777A4FBA266F1C3C03A070752D6234
F2727AA53B2B856ECE4850067C182CE18F4D3F63B832F54A290671EF492F32416FF27CAC8E8F
DB6B3EAD7C69020018A49BCCAAEAAAA9F550E35D18A50F84DB6A298C1E12E56637BE28C68212
EFE1DFC0B429A38AFBC875AFE71EE182B9B9A40063C8CBE8E7B0D46D478D726A5AEC7556CD79
B160D6F2FD15FEA5ECB5A176BF25DE6C4E0484446F4F8B094BBA494BD55A3806F1F9142D9345
FDFC7A4C728171AF21257E7401D71732839FCB0219ABA6B9DBA70F321590947BCC6625FDFC67
3372C4E75FB69C4394B24F57A042C190816E90A4E899E0B70E1799480B345EC2E6C32F556CA3
145390289FDB97B3B84DD28AD91D2715BA59DA571580D7297B775406E69D50D725C17DE1A3FF
E2DCC93ED476A293CCF79CE209145F0DC1B8D55AE968D36D1BEECA3B9DCB31143A6A215BE6FF
735E19BEE36F2342D1E3F51ECA309619A8B8A010322989E11D37448B0B31C1018E14A220C402
6B0EF4DC0C141849D080D73E3351733A3060DF8251E977B6899B268383077A1ADE0CF8646465
F543D7CB3C7235FC20BB79B8AB409B4012A37C8440E7B24241B253CE228E341E756ABB9523CC
07D3E8533A8E9B065F9C65393BE11269C80F85033B5819830B4D1C847E066E0616480B817072
56E866988C17EF603AC91F7F892828912E309B98F0C5371300FA322CB5F5CAAA0591291EF6A4
615C35F24510861AE6DDEF2DA888E8DE2F1423102F45B98E45B665D860C640F08FCA0DD9E5AC
EB68F5E1ADC86423BBD115779337EEA11724FA1DDE6B8981819705AE37CB4F5BFBE41C34DB86
3A96309791761BEFA2BE19AE7215FCCFC0CC4239EE70C8BCAABF5CEAE58344BDF022CE39A146
978513B11B3F0650135A07CBD5FDAD9448B616673130E6D2325F0A915CEE01ABB307DF475F4E
861D7EE76CCE7C914A3A17066BC9D8739D5AF6294D6F70D21B01365E0D0C58F40CBFCEDADCEF
171F846833A750F56AD226A382144EB3F0B4C88D446264BCE36BD797AD4377D6C3B3704CCAA7
61881F4F04D6DEB8D712DF0CAE05492D40F4C29EB1E05C33322508895ABE7B811CE270B3417C
0AB52758684AC4A8145EFAA73C27A405933964009793832FA191239DE0D266355A0ABE7E9B8A
ED924DC2E68B4AE236CC55154EE0522D6CC51858DE0C19530DCC3E02418C7E56DE6C9AFF5568
37303CFA7C485B2B85482B6A05C843607E1C903D2C27762F285FE786CB6B261B96ED3587FC15
292D159A95482048CEDDE126D90F927F77E0998231A070F448C18C5017F5109AA02691C40B9D
FCFBCECAE2169CB72EE8478A58D00B1F3ADA4F27D5B6FD0D4130B4993C92E9D02ABEF3B805D2
4D4B9ED00CF23B13B02F3D48C49373C9F50B577E2806B4F2909D04DB88FB1443C46F75E85C90
77C594C124E3C03453941F41A5664518B20425A5F2915FB1ACE8A516CE5F6B125ADB39E4F76A
ECA8A857633412F972D25561CF65E27B1A51ED760EB0589699A335D3D11CE61C232D4BCE65E7
955DBD6F374BC9552C1AEC2BD064F9E625479E2DD962C4A632290D88ED5B2BF5454FE871CF43
CF6915DE21357C0EC7B96693967540C418430ACD908C58117FEADBEDB44995226FF61E72665E
F730C6159576EBC7551A86156FCA85AF26391A8D6EB7E664E8EF2991DB6B0EA5084343F33C3E
F389228006E1D3F46A1088201C8812850564DD13EB0B9D13B81C3904DF761D110E646B9979AB
E521F1F2FD6026EBDBDE1ECF490F42F81533A6122E79A4145F80D224CF1C0709CA4868AD37E1
4EA3E05A24EC785A16CECD09A60D27FE950D14542D3AAF374F8CCFB8E20B47DE335F4AA0E9E1
BC68408B7DED2726308BA21B36BFCE12B4EA70A67A6B733739DCD34F0C7C7815E826C892F9E1
DA125AACFB402EC7395EEE63B91277FE075DFCE8359803EC3F34794D661BE4A4488988F65B86
30ADD1D4ADC5DF3E26FB06C5AEC246E080927D0DD878337FF845F1A0A9F2B18A63A92EA0E908
D4B1F79DBE83B6B783A364718B1D05B38B2F3A88595A4B366504DA1861DE181F8A49EF2B4ED3
77EA550607A599292B7C8CC936DC44EEBB5C7796220825191A81649BA91BFCF940FD5E1969E6
094B31CFD2911ABF6059C1204FE4D724F49A56AE12803C0FD45CC2A95E63CA3CD3274B406FF3
CBB2FE85F30F52411C6445AE807759974258EB3A1EE9E72C96BB23ACA7596A97113FAE19AFE2
A157B8CC6B16E29A7CEAA523A5CF2D6C8B16204FF711B2DFA0F08A4EBA6BBFD1C4B603B4FFC3
2CD8497056B699A6AECDEDBBA164DC9E9B341473F80D628D025B19E35AEF898B1143DBED0D33
3AA60919B5B0779A2F566B4B967077A223C542DE8B0D54E45E819C8FC8AC85DE157AAF6D34FE
3CD673FFB138E7045EC617A432B8CB5E186888EF54CD02D6356D6C8F330C8E02CE6C4E559837
066F933DCE4375228558C1309B0A909DB8D750FB2AB68E7914DD54FA317ED9797CA7CA1535C5
DCD58520D03412F1A94BD90574129F74ACF3E46B7F2FACE2AFC53D6CCB3F0AA47B405E103609
FE2E9DF78E4D7863B594CD7D8FAB98871E4CABAD022AAA108A882044E4ADDB8EA7716E5EE238
CBA7ACD6ED9F9174F07BBD1DA98A4F2E275F9038E9BFB63490A769CB91BA21DF98FDEDEE8C17
974EE83937BFCB5767DD7B983915855A464D0DA943F1516E59059D27B0D6FCB3C2E1FB876522
9F94D1D5A4B21D2AC554FE4F0DB95B360E655D95FBA14E60125D0E81B4EC573201E59296351B
F292E7F5A0D4B7460BFE55EF2F1723617062193D947D569CA0F6DD92DBF5B3F7A2775D834128
B392F59A6A0F7C40861B4CA156ED601E5B5B7081BDFF05B0178B5671ED3AD1B86386AD07B596
40CC7E4FAFA29FCE8E80B81D166B5CEB172B28C08586FECB16E55CC693DC5D4D0B6F24C73A1F
42FB7A4D3682E860CD1E73B0E59645B9504CE6660483D1CE3E9B01BB7ACC7C85EA34C5F629B4
5BE307232F92C2BA9526270914F1FBB4FF075AA8F191B2C122F96A35194D0EB32E34AFEFA6B1
5639A144F54C15E2519F2B12E589CE8EA362EFDD12631F50BA0CF35F6153EA2A805894CBB5D2
F70E3180CCEAEE72C4FD5B97A68422134EFAE186A2C7F74D8C7C870C6BDD8B287BC89D75A9AA
938FEB99E7A7DA2A84D66D02713258E3756DF3F5E1DBD50CF289A24C3CDFCDE19E766802EE91
859C742D25A016C64C8C9CAAF0F133CA78F07AE11C30F1BE1DB579D57D905123FC2368963508
40FAD1E507481DEEF7B2799C5C1E728FA9067941BBA409094D9E73F756EF9E762D5124F6DD9A
D33980941437F9C3C4FDDFF51A9D83D85E834601B259819293867501C578B458C1CBF0F24B67
0E47A56EF46701B260E3A9A17B0B7A0ECFABD3E9561B5956A5402C4BB7D1EFBCB72A5028EDCA
47B5323329229BDAFE18740AA172174753CB9C4082B8711C62BEB765754481EB7A9FF3E260DA
B0F4720B1470D578188D667385B3E5AB464FB6EBAEB53F7A319DFF20C7F4C9DBB7A6342E7FD2
3E1BFEB7DFB93721ECD09648990C71F437DE8AE75EA9BDAF17668EC5A90E0E0EE04E6D592FF2
6139ECF8AC6BD368EF4D41D53AF7FBC286B6712E24CA73F601685D6DD6DD554761EA09928AA5
73A8FAB20F204C42F07C497915A280ADA09804A8F793D1C347BE765C7DC10E309FB8ABF13FD9
781269144C8E4BC6F3E28C8FC149F225BDC7B9ABD794644B0C96A11377322E81220003F7E348
AF9499686556FE4F835C5A785E9623F01FB872842CB67F5C9DBBB909FCC61C93B154DB1347EF
E7DA6B95A08A0CC06C76828DDC579EE3EF5611A4314950D9B292C5288CB4BB23172AE91E231A
98FEAC73AB070272154CAB31BF59E0FC8977E2BEE024194A14D7FED9C85DD91A683DD1DE2C4B
39AC3DEC565956176E19C09FEB85B6819CB9CFF5ED3E5162D64F1C0C230F18EC5AAE9FB10D0D
888BBF20BF8B240209F3C795B69590768DEA6DEACEC20D9DDEE28CE24BFF3C7007D385BC2590
7B199D99CBF3C79FA40644DB71405929413BC59CD893E98D03274A15DCC235ADCB7D6C0B0D78
95233C0286B75FE82E88EAA083A0477DDD970F9CF95C3433FB0D212F602D08D38ECDE4318FC3
6D45DC7C67BF9B45F795700EEA8BE7D9E99F3500700384D7976212E05380AF9E23347881EB0D
56043CF41FE3BB18ADE219BE1E38AD37F533C068511EFB5C1FE269806E0826F1DA41325CB9A2
CC9B22A3C32CC3E4F590F8ADBD35A124888E31E09962430C3E384F86685CD10723482A8F153C
B2A35E176EE21021F390206778DEEB6C3F8E16A442CC61E1D093CF37086CF6BB2A4C81292131
E40AE67E8B953C1F334BD439AA715849A8C513AAF632D6096E1F56D8759534F0E6FF91B50B8D
47F267F7FEDB3EA33C8566973F8045715D0722C51CB5D91BC38A0FF32A05CD1565338A96786B
F8B284539C2985F1200C80E4B415E50B892AC9A517A0CDC4CE7AA9E104FB6EA53ADB120477C1
5E93A6E7A173103A00E49C3B906AEE69D103DBC4211CDA97A191F200666FE8565BF2E121527F
915CC59C373E4E0943F3CF21C6A7059EECBD96A434887F899015A613C8506E0BF5F1F24D2222
D6E57D9194A25651C5A9F564C6E8073399C3CB3C4974526603CC2D571705829B50EAFD8C0038
DBB0B8F0EC9B51168C82066DD0965FCA1B7FBD5CC27444B1467F36A1C298E83BCB67676FED2A
ED77942DF301B7DF5C36AC3912C055CB31598332D37FC411AC39C57940E830C860FBAC9C3B30
97BDDF8A1CB41DB19B748FCDA8FDA5C11C965833361405F3C4D367FA8AC303A1A4F74E7B7642
49B4E7A5FC56298F3F7460E36766D19C617AD7E91874741BCC357E034A2F1345BF8E5E01CDF8
AA13B08BA3A029D41264A039D4B83EB053026788613E3D8B51D8513D1AB0C279C6661EB8C147
10EB38DE27E66A90AE06B25B4B23BD7F83243DCF38419B8E3CA605E2042E878E442413F62301
A09E0922BB261AE35737F36ADFF93771EF37F8BDDA4E12DF8DF21C94BBD9535B6F75BC584467
A860F872262901670AF6A9DB8AD28D364742173642D1569F2113AC864A5ABB9012B277683484
9F5136C2D85A04137ECE9AC08724E1386943DEA2272FB47EE6BC0E90D9A9200353FA9DB88D99
FD5FEFF701F16F0E0EE958C420A3195FF79AF3DE86B975605D2880643AFD728CC1B091BE8FD6
5D9DB7C9196F0568D79135EE3E4DC95D61134C181A14853BD93E15D27B8D5F627D0CB36E8C15
2CDAAA10AA02B9A6E602FAF042511A5FB49A515D9415FF920DB59DD5EBDD335DD506D94E15FC
3E4BDF8258C1E2B4331731A9AA35678C5B800604024B88D483D214140A9F5D22B7E2C13D20DE
1C911299468DCC801E481ED5C40D3C40923D49D7B8BCCCAD5FB64A46F692BD6E782A5F74ED16
C86235E5FCD9D150ABE50AB240DFD19D74D3E0958B445337AB94B228CA976D556E243B906A33
1624F295B2D0A690884F608096E94B360A975A622942C5CDD7C8BA6C08B42EE2338D907EE4C0
84D954A9D9E1F7F89B3BD508E3717F12606A1232674268DF8D6218023E6B6D646834DE78CBF1
11435FE66582669B4DE746AAAAE8CEDD16A36849C35DDD7D963B9387EDE48D89698AF8A30BCF
DB30F3DD1FC78BCE8220F4F4E40244D3A4D0228ACFD8C6C575339D8D99691EF5027429763751
84F4A1D165ACFEA854D6308444795769DD448651216D43448BFEB89D0CE6C754171CC96DFF39
1959DE60978DE38748F1807230C2DC537A7FDEDAD78FE2124C4BC2EE2612434C7E1EAE64B30D
899AEB33327C0A2DEA85BD1B9D0C7C71F647D5D7370827DE24C0446D90A4105AF0B9EFBC26A8
F83E1355D64CEAFAD76C255D2970FCDC9483C954BCDAD22E856CB3893775416D27236EE5AD60
BA92ADE130D1930525B76ADB89E9846974744C0C58F7800E95460B5CF012A2311DE3E4992A4D
7ABBD9232EF476FFB5B631512CAE65B5ECA0D71AC1F696BCA532D663443E6183BB3EA8710C20
B0460BF423D6A898B8E61AB0139E96825B73D0E113552F4C5A3DA6AC1559A0A28764C7726B8C
A49C7E8824125A90EA1B94B91F3029E2C56616AEC2306EC5F63FE4136690814049B33100414B
98095A81F770F5DD97D5FB304C29BB51DA11B0273DE1C9B04D8568A1C4B16EC349386C731E1D
AFE863C638C326F7D54DC71DB47378AE293442500FE592450BEB8C3368EE7D0AE5572F70605D
7A06DCBF53B9CFBD403CCE2336115E73D7988FB55BD189CEAC03BB72798C0976DFBD6189126F
7E37113364A03AD545E5E9E2F88CACC7B67E645D05E2E8B79E17599499A9604E2818448E8587
A1506EC778D6E26DE7646947996303D7B51990BE23CC3234E5D251568843BD646BE8AAA7D5C9
5D3D22FFCD72B78D92FFCE307F81A0C2D0BBBE3C0517BE1F9348D13D3E631ADA866683863487
232A0F41426EB0A650B94B12F8D0A2010DE848E8F04F435093F016BE670BDD5582DCE1852880
C5634B12CB0FDDE76D5546B41DE45262CCF3B6FD0C030AE2408B436A835BAA014B8558204423
1A8AF664350BC62654575906472CA43CEA42ADCA86E5D69A7547B9107A598B8765E7D9F31526
995FE9051C9CC9FA9A4532F6756EC3A0F6CA00DF9B6D47DF4920D29E4050C4293E7DE5AE4670
C0B0B61E82B13FDD9C7C51746003EE7859190208E2E3C96466F8FC21A13D0F10C78BD3517CD7
4ECDEF41F4C03AC41BE7953A5ED7B82338562A47DA86DF52688CB97CF3457645D2F32BD235B5
2F5081B4552A029637142A0A7C9700E48F42D54FA26D4A42E9B25285C126EA053536B3E27F97
2A055F418145D49410B963DFE11C36C111FC57939DF7786CB0871BBB7F0495EE0F47FA1CF4BE
109A75271812306312E7D00D7EAA2A2DC5E21D93218E01143556B0780E1CB50E8719471BCA7B
D40D78DBF482E0432CD8C7D65371F5E5C9B1F8477CF8AA7D84E75473F02D2002FA39A42355B4
B078FD97B3E47D49521DD01366961D16E4F5F919F80DA12DB2ED65DB27D2595C0396905F53AF
2001AC5CA867D08942408E47FDFB057E4722819830974A0F737E1EE08CB67736E52048D033F2
2C516EC8D2101020717953ABCAB1F08413835B2E91D896CBE1EBD3947F26BC15BF49FB1CFF21
56800675C6708FEB27FDFB91C2BF89672C4F9624C5993DD74D2D435895F74BEAB04436D56B0D
3B8F2ABA61B4B48C6F998D2633748DF2C0432BA0BC09D469F8A33364D04A5323410F7F51DFAE
6221459EFA2C0CFB0C507232966C39675E19D10580DDA4B369F847E92CD8DD6A4DA0016C29DF
E2516FD2C6A43E0BE3648A47550F7A466FD8133000D7BCFD3718C2CA02E590A6CC635289D670
40767CAF5F645B272EFCC9480340A9FDE44F9811361FBDAD420740FE5927BADD5AEF668E5FA6
30125361927FD081DCAFDB5041C6E83C869A2EE2AE129498AA5DB21A7EE9FD8A3692D66F90F6
2AB75351E3CEFC14AF882E87AA4507F64EC624A74E4AD6621BBBE6BD4BA95ED41961765EB3C1
26439E176552C296950BE7197722B2F509D84A3A39C6F3CFCDF5988B703C9A060192F492DA0D
7FBBB444A48907B1FF59C86EE5E845F1F478FD14BDAD0DC4444C4FFB4AC5674C5B5CDDB23FFC
A590616CCA8847522BE09CEDE87728AAFC3CC4F8FD647D763D9C80F44028D5B21502ECC9A3D0
8CDBD0AEAA00D6C80B79D71649FE6539B08DC1E7D385BAABE63922EFECE8A3E59E12081F8892
066C21D0B57431BA4A459671295DA94D595AFFF0A17F7D5EC754C8C5773503AC3BB78A6A70A3
6E37EDC3CAEE762FCFF7D5400D5BDCC03E4752E92F1D782187B651A42228A377A683E4DCF5AF
047E0BF0E1465FC8842C0D1C529109E9FDD9D748CD3B72E6EE734B8503D4DD58BD5134F5AA85
3DBAFEC62131980DD517E85EB8124A2C95A6398F552DD4ACC53896BABBFF8E80227182AEEC8D
12E4AAD9CF3CD77BDD7965F711A664021469CA2E12E225F6E032E19207734BEE90CAF4868D11
6079820811046AC6FEA4C683A752B0245A4D88076929C222F80B599E0D43E6DA6F1B95A5044D
DCA675742B36176FECD4010AA706CE2E595F906A4E6BE90A1C00B473655BD91B8E5FAD621474
909125924D61AF1E7C5FDC07829ABFAC5D9C8F29472DDEC40A9CBECBF7B2A0C73B719C840273
A0E63BC63AA1F1B661A320CAF887A763D4A00F37E74ADA1EF5D9CC274E8C8C9895F00708DD6F
3F60BA13614948C0BD8D5B01CAE7635B88C07B60717764A5CB9891682E013394D839A1AE9F39
2F8279F94973B3B71CA27FD04803C95C6A7DF3872AD63CC294598CA3929A99CCBD4C176B8639
9DFED539503BD664A554FF37520E48B32F76F05D8521C6B0E6FD6B65F5FA72E38ED28C0B1A98
24F6CEFCF70873FC2FB50D7BA1E8C55452D32AA5D260B8FECAEB9132FB50E5CBE2F0A68813FE
32684B1C6AEA78A3DA5CF1A7354B299AAAA2C0C0C84C1829A1031676708156EB8E3A4A535317
32CE5DA8A9484BB9F3C0A88BA239D55F0B521B7E11AAD4C052357D336A9D5C01B85F3CF4E3EE
CF4264C1CC063C1130AE5C1E5DE2D28EBECEDD3EB4F02F38568702505E5C99C00F1A7C4CCE5D
28BC373137FCA623F420C7F4D423F42A6C96070CF3857708CD2302FA534C80E44E6FAF3DA451
A5BCD38E310124468D1B5503147E9B8FD0F080C2FA152936A514F7E9D50D196239E3E788586A
F8D1301EFCE4E85A6FF7C561F280853C2E628B8CD37A55243DE3147951D992E4CD2AC4FDF700
62CC32BFA6EA65B1916ECB6170F0EE8274AADA95768FA1BB693D76F6ED09C697452771863134
124BDCC5EF388E9B6D85F497BE16D7780832535C3F6C2AB6A4C9F9C08653FA64893A69052FF6
779ECCE2F67284F2A7BC9C162CB05238F173BDB4AD0DBD00F1EF4BCD8524EB6D3EF08740F843
D12260ED63DC5603EA53BF2763CBDCCD3A106BF932A853CFD68468AE7536C74DAC494C7E50B4
4D15E55E06650F5C597CA6B5DA9A15308637D2475C73417DA0F490277CA49598A500431F930C
199D5EC6826E3DCFF805077A231C3B5DBCA16B8CC31C925F7EE0273257E97C1D2A1DB385242C
8D621DB150DCE25FF599CC411A28B08116828CBD420B8D95E9770E65B98152F20D089873F61B
42A35DA83DF3902063EC66DD4B5165B307AC73E7FDFF117CB3DF6055F9E07E0D00E38A7AF8A5
1442D1165A0BFE243286EBAC4604FAE887FB279E692AA6446BC56E29C97B491211CE87994402
008B64F9A6A5E125ABABF6447E024AC91DD75623A252AA14B33184B61E3A208A4A783A4C0119
F2D1FEEA938C65E1EFB579987AFE2F65CDEA0185C14381E292E2AB676637A6DAD3ADC9D67739
ADA45EFB2AADA7A0F38925CCD30B593197A73D0F683CA68EE3156FD04C7162ED42666F210228
390284F3C6F2D69E0EC47741978DB324C7D9E91AECCB2D45DEE231E77C6E469E868B7BBA4A6D
C259385926335772A8D96C7207FE5F9CED891F6FC56B44B691BC557BA9B2D93E49B53D4B9A17
04491E20E8CD63404033AD8E25C11C9790F07146D84EAAB5D2220F86B7E4BE4464B1C81737B5
39D0BA7CAFEFFC8C3730AF1C5F7AE3829E3F2E188C90AF4A2FEDFD34BA120A10D02F4CC36A51
EAFFC8CA4CCA364EAA20C7EF44F558164EE70CF328FCCB748007003B85CEA6E0FE38572815F6
D7F0ACFC8947CA427574ED249280EFE8AD0E02951472565D1FD3DA86E9DA4AE3B45220324E93
4A35DFB7A3ED83B42D3204355F6BB502E18585F745D72FB795E25198FD5D346B35DE2E0B2DD5
126019F6D9DFD1E45AE121C022D43526418EC31FC9112C4F736126099AB3E28AD640913D3C8D
FAE32A83D410A7265CB64E056CC3C7DBA5462526B3AB94ABDB7CE60A1C6D850E8A0EF92D369A
981607208321C365A5104FAC2F75C95605AB641DDABB9AEA8765AA6F1D3E64BCA4455B59833B
4E159ECF2A135C5D9ED876C71F36AB6ECFF487475C25339B2F9AFC5B2A26D90534B5F05D70ED
E68242B5470FD5B708CF184A035B044B679BA5FB406711947A4647484A4893ECE8857AB54438
E2FCDE603D5AA68129A08EB04FB945734A46B207BBEB8C657C1ECE2BED8148406D93E4C02B4D
51B7D9A224D253DF8B47433D5CA15E7970D352A1643FD07D8F6E372798C189256F45EEE01226
D5F7E5DB121CA4BAB9BBC7AAD69566881CF0D49DFFB1CBD46C811ACEC48EE8707A79F99F8253
F113AC094B2307843C5969DAB0BEBF9CB6A56B8AAAB4BF96F1E615C690CB518D91898A0BF4F6
57F580D6AF51EEA835E92546E65CE0BCD4E3E440F7BCC430807900D80DE834BEA59ACB85F36A
B0D3D3F8C527F5C70CC0BCF7237CE6B93E2AB8223853A2CEEF969138CEE54AF3F330CF80765E
1AC21D8356836EC47E78A4864DAA0D29BEA968FDA90DA7771F3D05DB475D1517CCC02221D0E2
59A327EB474449F9C7C140E568420AE14BE8EBFB9BACDA22C3FDBB33A9CE41708D4680B272AE
C89BCD06F0344A0807C87C69051B73A18908B29C1553937CAD7FD80167C2A676EF35EB67416D
62A75B442ACD802DCDAB9FAD2B57A35AA33B5BB2032C51DF4D131CB4F64556CAE494ABDB5D23
B5E86FDF153F818708EF6A5DD2766B508177219EAC151CB4A86D8A652CA6C2EC994F9F43AFDD
11ADF9DEF4D2EDB0BDA9D37B30C603692A4A83917B8E459C35E4A12A07B02EBEF81D74135492
C01AD1DD3E6C1C75BF8EBBBF42977E1DABAED256FBBC203167FAF0AAF0B988AF0E3A51ADFA07
ED9319E3A1A2CDC16E214D58637DA3AF5966BA1432AF434B105B859E9730691F8ED83CFA93DD
63B5CB6DCDEAA7CFB2753ADA56B00B81E4A67DFB6E85D9A34E39E16E256770908EA2A1811A47
05789EF7FEC36AABF8D31C81CFAD80243174D38155A74E1589F96CF98CE5C4AD93B37BEFF405
43CBA49B7570B53BBAB501BEA9AB4B0E73FD3B43A178C86F9A22154F01394F37B51075AD2918
B98780F1ED0D35A23960E0FC218F459C5AEE7939FA21AC6322EA0601CD675181BF71A594BC6A
CE34C39B349940BC1385BD7415470D3D6A26E979CE14892ECCBDD46A7322C7A565F2C50377CB
B18285BD9C0C8332B9475DEA0CEA0C536F2E5652C782E3B61D193C6F2FDB4E2CE4430207DD25
E9FA9F70B1F2686A2645F69E2A922F26C71A27E495C2AD75F431EFD181E9684BAF5D2F932C27
C0446857F7726CFD0634A25040FB68D30253328385D55F4FCADD8DE6CE829FDF9C18466A558D
91F08FFAEBD0A079AEF4ED7D612EBD3D52DB5175CF4979FEF08D7B953E9FCFF77ABB0F01923E
1D93187DEDDF3E3C64C1E1D74B6A1AA387805DE6F2D439F9B9F24B12F523A431E3F396ADF6C3
527F05A0CED7C26E24B02F2631F045943A05561D3DD5820B283A6767A7F0C700E0A161D31BBA
4AF0C1E759E8EF6998D749DB00433A47E326D24F9C14A51A8C97DF57BA7F14B9D7DB077C55A0
CA7DE47DED12FE7499FA50001E59110647A3D6ECBBBFF71951D04250DAD840F06618DECE5F9F
F994887F38E2C8903CE564E4CA673EE4090D181A4067CF8AD19C99BA50BA9D2F91A680041137
6E63467B711D946D1E2E8C11C6FF2F550F9784EA811934963F21B2973B7AD21D144976C12735
C36E101B1C5BDB6215D0B9C7CEFFF972000A88EA7FC667E57C5BA8C5870B827665CADE97205F
77AEB0E5C8837CC02CE6D53B54A745A91337C01347A773C73661C662B09F49F2DAD5369767F7
1868CD31173842CABC5E564380396B9795BA93E1FCC81155ADDF67DE3F91F14F816BCB9AA86D
80704A7EEF9017F3DF1A6F75D28F650F1EECA5138CEFA71693B9F0619521D52F2A7A8F944C36
30A355F61744326C0E3C078F7D98DB1B7C7175662A02E16F610A6D74E0BE0353127660E1D6E6
168C10BDD159B1DDA8A1BC36E62359042A68341EF759B50FA1FF0F54FB725FB182545612A7A7
FA832A565BD3F1AD07E3BEA2A753D4DF7B86883BC32B800DF704ADDDA479ED398476AB86CF52
DF8FC35E6245A3FBEDD5F862E68F50B2FD3DFB222B6EB00F9AA619AA540F7007CA572D739473
759E3C7E8876AD9540ED7DAFFC5A1689E5992DEFF3933907802F125BD6E83B3A82215E0BF888
B86A7B8A0886650A6F161F543A109A85BEA233DD5DB1E96CBE7B47D647C071C937014564541A
B8A4137D08D23359E1CC2E50A9F28EDB81276D86DD6C6CA3BA326895067FDF9742C14D6946CC
8341F523C11643243E0F96F5A0FF43CE5E6B249B6B2C85F66790060DFEF47011CCF62CDADBFE
A91A897509E9A65769724B4D146073C36DE9567658700238B4086776FED64600F9884251A71D
6527B5FD396AD3CC4E886C90ECD2ED022AE595EA82825EA7C476D2D08F6F63249A0E65FA1272
3FDE567E63136427B3F7448A61BEF9B1BF225AF1DC52142E58C6BC26430662D244AA65924AE7
5016F546758A9B95438EB498F078584B4F96195E9CCF75B2AA6F2B05E322908A3CDDAE0A8F75
97ACA3CD948B08549C92760B582B5A8B8D8D872250407C1E8C2E65DA0F2D6A353DDC2FBA3BBE
58A474E8CF2872F08FDBDA033EC044F0912A2DCE161ACB5F39040BC2CAFCE0ED9C8EE3FE377B
D9BEE169A6E36E6FF19F8FE0111BDBA6C963B6FE0A91D5B163AE1F00B7EB23DC61DA247ABA84
060580A01E3723B5CCA896E7E33858963EBE7D286FB1922F271FE6ACF831A0133621594107F7
7A556286536F0FFF6BD2983A840BB0C6418FF2FE40C8F790A4E1C0687CE62645A4D8665DF67A
B826B817FB54AC88DB9D5D037B6C4A110387DD4E055DEE4EF442906CDB90C6EA36CBA0CCBFCA
CE881DE00731E74B92389C2B74FC57ADD316909B36201E127B3CFBBA775F05FC154C320AE7A5
52F9883E55A7A072FAA010F2B1A45150C8C85504356AD02DA1D904D281163CC90424599E3D78
E4584447B8DEDC50B4EB8A6E71C20EC6E4C106A56071B5E575CFE45E3FB7148D953CA6FC6075
F14668B62E1B948F8B7E1FFB20FB64732FE12CE69C41D1F176ECE822BD583004B843B9D6E1DF
88C94C9C48CF3E6644C265086B4174FBD36FC1ED2BEA4BDB168DBA8E27EB5E2C18447E16D19C
CC9BF28124E95E5DFCC77A8B3B8B23A74EE61970B90BF2811B15F6AB9391210F3855D71A5D54
44DCA30D49CD8AE93E5A80283951E7C624F52A4CD5549D2B2921F65913332A097206C35F5C77
37EF02B60B949A3B70CF50CA1A013CAC8364D0B9A3BAF074F5C3E474B952A74384009AE47C2E
83140811E2BF16899C2E610CE432940A785765A7402F5D4BA7BE624215ED5B983664B136BC56
2FB8B71CA1BB53FD9E3E2B486AE5588AE45D59E07E1CB4A7FB75520F3B106FC2C59D37886814
8480E3E0A426605B1519C3B55225CA26EE523951910004B85553103FB13208260389DC5C3ADF
1AFFDFB82FBD90C41196D2360D083094FCF662D3F008217A15E3BD04DBD4642F98C2D18C8BA5
E3778C47ED61B9E17F8FE385AD15C81479B8183E78D2005E8D4E008137345A09B015F90C7E11
CE954330D674D50C095B4CC6B13C130815A3EC395DF4345F3506B8DC786D0AEC126EDC14E4FD
C07275B353E80AB6A004B406812BEDA9E07997AD04CA42FA6E96FF4BFEA5110E9EBAFB7FCFF2
CCEB205F3C86CA2A3D04E68599AEED1A750E2C4B622424F5831CE3DB50B811CE03F72C9417FD
3C0040A20679FFF40B6B7878D4987DCFF353078B50400C0C0597250315AD72849FD3176D89D8
1009FEF6BB780ADDC18692FD07C3EE4C4BBAF019498623518A8C8D8CF0F4B2D38AEC90F247C2
60B14CA1F713A8EA6AF46311AE61F40333A070D62EA97CC1AD27DAF6B2B6A3D3133FCA08ADD8
33A5E5D96156ED7F7B63DC9DB8C1604A37CC711364E249F86C2511A873A0FD1733825419F04B
3C763EB4BD35D85C23DB11A9C2F6EBFBC123C8ABB66F5524B5053D347417F72ED8B8E7D13D55
34734DBAE3EB89795718B64D82268DA711E62E7268885BB8AB0B5F8BCE440A6F568FD530AD4B
DBD14EFC44704CB6F7127A7D7552138C53027959E026D6272F3A49A5BF9BFA11FF10E7C0C27C
9C3AC61C444ED4E3C1FFEEA3F067AD7FA48586A41488DBA3B99B0D40D602EFF09F7F8BC91860
C5A4D791157A84EB490693F2E0578AF4FDD132C0D4421FDFED2805AE030F58CE96E10463E534
B12ACE4B370A25E2F1CBA4251FD05394540CA5BB2D938EA2805AC814340A6F7748D5B1D751EC
DA8D653471F5838B738EB916DE1B7E5DB030A04299EABC4A847B378FC4683AF06D20BEF95651
9E4FD83C2966D436B4D500D698EBD71506845F27B5AF028E4A0E7E0F96658BDCECD7C9B4AEF1
2F949083918B157CA4719B94E7DA94AEF659775F2CE6907B04697F94F27440BCBEC12EA75CB9
7DE3E9922BBE67994B924FCEE89D9B8B346BC841DEFF26DF7F11B2134D2CFE6428725E903B7C
3899AAEF93C9DAB0EEE73CA2064D3CAA150F0399AE258EED0B57A849BE1874A5AB5090342886
928622D9BD204F726F7C35C1780FD9743142BCD026E55C9B89DD155349A346B241A8A01CD8EE
9CAC977DFB7168051F1D656C9F951420660CA270A9D226FB94EDF1C11E40B1121A72E7AC169E
AC1EE2CE2F5C696A917EF0AE33DF6603738446111944BCF09447A4FDD161F82D0794B3129F46
7B0AFA2E2D57665FF02CA092F47CD3B265A6646E2A67D9B869ACC074949E5B3329C9DC3B1B24
D815BB27637ABFD3771E04A8972A94AA4F4086BF7F65792B16720DAEAC44CE2E77F50755C39B
BBC42CBB09183473275864A44EF4119D5101B9D0C098C15B4EFE645AEE2994BC619F57539856
61E65754C115F6B14743344F6917A2A348CD4EB9C4A62009E2CC446E2EE3525CCD6D0913FC2A
AAC3322B6333618889AA0205BE4A3DC1B9A47F7A624D10EC715DEF83224FD1D1B680AA7AD84E
B9E94FF1A92E5629A1D58E4921DB3D0ED997FD33E261446A7FB8CEEB002A2AD23FA4B4D5058D
2FD763E7124AFF65FA70E2F966090AA6C71FCA633C6D9AD8F078D34C85779114A22CD8D41B29
2BE38389B6F0DFDB4DE726A13FB588F28917BB26CB2657D0409DA795340AEF38237642147424
B90679815A1E6E9F8803808B386B54E5CF8444C253C5473209EF7FF1EE609D9C3ABDF84F77BB
985F50821F23659A8AD651A88717C63AC00005B39C19BC5F33B35759F5C50D1B2C65D56F7A2E
DD5BD8DB38A7CC83C6FB2F53CF380F72F2F75DC273E102466C88F53094334CE308DB22B9906C
B3C88E698399BE4FC1D6B67EA52230421C205DC171484EF5B68806346411601320D39E87981C
8EE5A8770060B07D4AE218C541B3D0EC72A9B7B709C8118DFFB1E0B4E85EC2F094AB06D4EAA7
29BE8362C10A070ABE3C944C23E454EF6A90A0016C341E6E3E3D8681D079565833B091FD883E
B608C37A67BEE65166EC89A1EA998E2B70EA8D8E8E5AE62C665A4815CD7F6B1EAEAE988E2101
69D15F4996AF26114AD8A1663A4E67A4317E3DC32BA33153582A5CE1B8FC6564A270AB738976
0F8C3F6A02A6AA2AB56E93147B32495C7151841ACBEEE9BAFD61A13B731DD105CC0349FB6879
6D75439C41CDDE324887F3AA4BFA442E71E24DB4B1E61B2F808BA90010C18A5DC921B72D4D19
5C32AA76992D19A45826F86CF12C5DF6DAAE52EAFCD94B40836603B7C5191D667741C39D4CF2
26ED5521521334B5B84BDB265A0AE8DC0CC6482183E42ED28F1513034988A43399D35A0EE33F
7480902A6F27C6E138DA036A32283D8AE1C4200A0999D250991EDC71EE962D19BE3D106851D1
EBC09E72A592227F93F59EAD9D318E87664600A98E3056F36089A488405CAB37D4313A7E35BD
18745DE299425D9EBBF06A2D3B813DCD7784DA05A86BE723234FB8FCDE431BC5272DB410BE4C
8A6CDA18D25763914374A1F0BE9CA81FBEB0864F0F5D729E2438C7DD713CD0E43351E372F937
3AAFF5379C8D0E3398642DF3F65DEFFF209DC505DD8D300D96657AA6D8D7F2CCA155E939176C
38CBE9D36EB79E5DA67A2D90084633D2A95820ADB195216A70A8AF91AFFA0B3DF7C7BB069102
5632DADAEFB2E9EB48F3D172F6211696506BCDDFFD9E756A0F302C2788670A2E6A76AFA10034
8F5CE43E7A2CC3907296DBEE00A95042816F3D427BB5E9AD77216D2FF4B3B18A7FB381B79BD7
DD95547FA4099767F4467A1C3E39500328989789AC9102EAF14D0BAF1EF7D2072E3D9EDF99D3
54C44204F5CCDB2BCAB00F131BCC49C12AB9B73553E596EE9D25DDE5BD8B2B76EF4AB4E58B03
A45F367E788F0DAA9F9B17B181AF5A5870BD5E2BF0DDDEB271B557475ABEF9ACFA4576509E31
FD83079BA780B3D291393C44D9C711CE3DB130686003E2CEDF29C64B62BFED6DD3B6D0094F4B
DDEB9B75D2266C148148B6B2DBEDDBBFA637F9ECF123E247CD2B5768098BE9D8E79281B9EFCC
7767DE271209A25CB1FA38F2891367F3EA7C3D51E04E5E38952B7E828F9E0B1EF16116FB119A
65E24463B8DF1301C5F562B63DCB996314E113B7E40F77F7F6EB0399432E8E8E559D9F0574F4
5C299AD9E3D15FC34C79A1D79CB5AD28BD619F7D95728712580C800632B64E99480A73D8F105
E1386AD6902C211F8801CBF24E2C2DA23E9A8A905D10709066BAA68CF3EB80701FB51559F8DA
12B5F107F3B94D8C68CEC13CA2C4D4BEF326B661F630922442997D48C5C5F3EBBBC93B98234D
2C949FA4AF61F8A7299572E00759349CCA8A314BA3A7E549C88885D7FC8F0EF98A9999497FC0
2DB51F8B9D556F099B2CB495C600CB6B1905140B6A4961BCC6726EDC969CD8572A4FB7C2A0DC
7032DEDDB21DB9026A36360F7B8DA554E767DBC2AE944BA1EED24D70C5D615908153F46D18ED
B877D747F03E54039E637FEB33BE228E72931CD967378AE267B5DC92F4E5FAEC411C16B13EA1
20FEDE85D271A4E6E27668E8CABE1D2880A0E448B3A3D39130FDEA93E684111FA1015323153A
407D1599B367D4D10E2D03A8B47F28E85C221621D0E8A4E171164B3578AD574B75C291126583
AAA9E285F51B6B4545324E22699887E1D37D418F3C7365C80B383A5B8DA540736E703E2ADF4E
3737C39E49D012A0BCFC43660BF03AE8647072ACEB341E6233395408F62E16EE3F01CD9291E2
0A0966DFAF065FB67FDEABFC66FF9AF42A2B36D4452D8CD7280AA801FCBC3F653C2919666699
BB0206C4EF6F8FAB82EB6D40C48871AC07E3D8A135FAC91D28CEE15A5FF87170FE4A513AA619
CE65945AE1CF951EBA47FF6B8C41D63B4B9F0F2352B11F3A65A7E689763029C6A91F2D6B5F18
77365DD7F86A6E538F78AFEB04AB074B203C47E87FBDD2BFDA7A83B4E6FC1628F20DB99330C6
34F6F65776B4484CCD59BCE04311CF52E0C24E5DF4D546FFC11B5FE2006D1A0D1073C55B34DA
5C81ED3A5380D4E39DDB3D9583E3C7686A50DD234E2E44D7E02411ADE6850F373516DF472C05
352EA201B3DF08241FCC92DC395DC8F998A8652FD8FA2B11F103017DD01504D2BCFDCC360439
BD832D5CDC3313EB780CA07C13F41A4E599C747A3CBACBF4A25BCF10817C9570BFAC3B437F15
F2E6DDD9958BAFE542B984AB52DDAC9B219C0A10B339F96B2C11CF6D05321F77FFE6E572381E
D81E5831DB8CFDF902FB5ACA0CC7CB23624EB37E16C2CF8BFB7B6923D1D4B97C55225F8DA2C3
495F6C971C51CC7CF66E82A8E03BAB8C79B35180666EB64B0FB56E527A148C72144F44095927
C572FA906DED1BDA246464461F9A373862217F4D0F3FBED40F614348198A2B60C50BD99BB9A2
1C8E8B3A48A8CE4E182D7244E145A0E5653DE82BE2469CA6706C7F9CF15FE361D15321F0CFDA
D06A0FC2ACFFADF0A7586177AC9A4314784DC68F9D26E65750DA0137C26659013C601158F4D7
DFB59FB9534FEC5C4DC5B3CE9BE866195E42062F5617D0496AD0836478C81BD523EA3C81865C
0C942441D51742CDE92B080B80F6F21A79659D9D14C2DC91FACE45DA84C8CEB673384EE8F0AB
4A3166F740E44DC24E36D871C6833E1E9F217C802B6FB7B9D010A5242F36E941CF6CD153BAC2
EC68772B68B50424E9BCEF95696443031402C3B39D16D38C5273B76396C99FF86D07C3AF5AE1
3FDC4B136F614F4D49E86A0BB3085CD760208A513E94E532A97E1BF43A105947054C2332370C
B191C7B3623C51DE746341988C6A8CEDF4126B4E93806E5BD982021DD6785309B4D62135C9B6
75D0BEB8EEBC2CD87B53BB370202D24541EFE9C47E5246A07A06DD6D77DE7B79AA8422437E8B
1985BA90F8942F023A69A259F1390B9F4DD777A42BB089CB395FE6BA32012AE45D3C61A8F587
1BF1E02C91C149EB637F30187ECB817651622D25C5E1EED33A5503FD3870178A379DA19DFCCB
E076AE9E2F2AEF86133F27206B0C2A74A88ECD70FFB93A81A4B566C41BDF16D25D79B0560691
B761FE3254E927A013122C6D78DF7310D01CD1314D06E584ABC9856992BB6DA11B6F9905EA2D
E32584E9CC2101B505D47225380DB6C9DFC6BE379DB8CAE85E3C54F534650FAE23504B8B3BDE
7C5FB2ED9D73BF7A2EF944E678649AAAD02C286020F69F92D3FACCD3C301CE19E89CA83825EF
8D59B4E3FA90AFCC29EB89E1554FE29B5A6BD44A99E715DD6BB6167668E2B2056C5D3353AEB9
E492FB18408BC2D170CC3F7A334B178A452C0D08B03A114275D2327372F34E71DE15AB648F3B
F17ADA15080AD7F89016CC3E4647DA49EDAE5B469B5858A18E5562E09ED362B6B041904CBF46
B5225D23302A63DD45E77DC31AF5FF3B2790B31B68D1401A7729C5EE46637B3BBBFA25B3E162
20E1227143A9D1CE8B80D5A7DA13B16A47F0B128EE5AE364EB0ED86E8A5817F420CFCCBC29DF
B06B52B06E4B6DB0A8F8A1BD57C69D692084AF58B5B313DF18C3F6992BFAD429476DD39DC229
ADF1B01E9980A5B645C9E18BA8F2C3B279DE1926832B672B856975532BBD7E8E703E4A6ECCF7
E713D9690C2F640FD874E501932A8F17DCE4A43F4A48A32CDE47DA21B4FC3325ED055FC843AC
18FBF090BA8DA4C95426D4127748FA0A273CCA95D7A139019F687663ADA376FC0CF88A925808
8F51A7CBA595F12E224D4C25820F71B148658A2FD0352520E5226049547E12DD1B69DC6723D6
AF0ADF7D9B0A0F02C1AB1C9123835CDDA02357C6657D03A49675233F0416073307088DBA1B5A
39FF1CD159842DD72C32A7AAD57124F681589E1E6112D093A3939238F2E1EDCEFFA982F27A1B
44C8353BE638F1C26B37647C7ED705A550C40C895150BD5C6637D177D49159684B95F1762369
83306618C40AB6D44FC4B2273F39959DD89A40197B06F48AC24178E193A12AEEAE34038226EF
548577A06B6C42E4F68EC22022CC2D117E12DEF1A22D45E27A3B1A3F2E9832F9B7A2E834B60B
F67E75E16928634CF7A1E286F14D5572A73A42A724EF60E6A15F1A45BB5F4658390E848DC246
8CCB412374D57C5C2BEDCE7D5B2468FBD36F04D94A194ACE7617D39EE4DE6EF8000423EC3BC5
98AB525DF7C69EE6E4D84D0E273C6A37171F4822E6E58BA1327FD3BDEC5A07D4EBB3210A93A1
E6A715BAFD21048D647250C57427327F6AAA9EC94EF4C02D0B4543D732E2214DB4C1789C5719
BF15DAD0AC396B6E44C3D300505D41D065FFA3097186E8F0432DDF5354D9770E19BFC00B5EC8
2707FCC078CEDC790BE1CEF954C14A9F4E8D4D9A1417FE80C8CDF1608D23592512CC9A79901A
901224F6AB4EE9EF216EBEBC24A5164C347E4A7A05CD4D3E6C08B397A72645B488B769B1E71D
8F90649B909E3A46F957BBE7AA9ECA11D3E06D4BD8E74A3BA41A4C566A62294DE42712B39DB6
F797EBA50E081EDC35185218C1C832B4FA8CB9D272E36387645DDAC6D27945DD043FEC164F9E
6F3DEBBD4F1D0FF3081F014D9F794D764D128485D390CA7056BDF663E422F59957894D20C8A7
11E852619A5832BD6BE579EFD04BA8082E5D5355A013DE21FB4BF4D606EA7D8FB779D6B939B4
CD156230ED0228FD8653F267E32521C1F7AB7107F1DCFF600A8922D2BD4E32D753FD6125DA54
692D11D8724DDB81A6F34434B48EA578982D5F57A623492712C805D86C8FCD73FF3553294D5D
1CE3694A758A4FC82FC021B2EBDCC1694E1A928353588491BEFF1F12D9A3420C343D6C9D552D
C54B091D2CC6F489D7ABC6F2A7DE424D487F02B75581656F566EB20F3CF29D87E5935CC87C27
CA01A2C7D70D7FCC2F4A776EB82B0C0CCADB597E6468319EDF9287983946996CEBCCFD0760F2
B549F351057110BC4728EAC80A8E95C8BAAE02F665D2950B7F866F9878E681A808E58D5B0186
AC743794FE0592545F4B4DCF56C8965080AF09DCF7CCA3B7C0219E5AB4961C7A227FF21613F0
77AF51259E4D4CAA6E1DA10FFA4DEB51C6F32B94815FBC6A4342BF4841FC820C809CF96BD27F
2AE86E00A89E27D10C004FAB2862265E3396B4429898C0E1BC65D15AB2B54F3D9C4BFC5B58FB
90B3505C16E24E52FC20635D20BEC6642FA529EB0FC402E0F451AEEBEA625126F3AB06615344
713E29DADAFD91987B3EDA376628DEDCF2E167BB514DED28BA3FC975F846E695EC3DAB298A47
E00BF9D8FD5B2308CE6072CB3CA2A7E419A19EC9A8CA1F51894C02A496B3350FB82C808A00E9
30E454D49B605C085C8CBFDD7E6FE84D7F2531EA89ECC6DE9DF07015974E274C65DDDE3F43B6
246FC5028777A056FDCDD2BD18C7C5C6C9678305C084800CC7B27EB5E810751B2E6460A6AD4D
7D02F855BF636709D0E4A0CF9B17522A21E5B11F347DB43DE175FEDE90BCAF00F64BE6B66F14
E35D8A3AFF78DA9E7FDF389BCDD925499AAA60C0D5F3124AD520CFF5BD62CBCE2200017F587D
740A1304D3E845AEDADF89AF84AA077267A4E9931F28981F9535CFD5C9CEEA99F47B632BD74E
C3D2A7AC2B3C4F8063C5BDD3E8F9E4E4063D909D15DAC2C77DEB976A26D282B2164D18B8537B
C2D7B8C3E6249942D951CBF9FDF19ED8698A63CCE2A4DC09F2024C5D4803F16161E4025B34E7
DE07F9E2DA623F21696D6E178DAD7F774FE883D4D9A0F65602DB361F98F97BE57B2B39C9ED07
A05F97FF034B1EDCADB27EC18E2BFADE0CE20E324CFB56A1F2DE75770C06AFC82B433528FBD5
FE6EA3AF6FA27B516933BF173955A86A320913DE0F6F503827AD79D2343CC18D03B728C9F85D
8B99F9EA2E30C8E308A063D6112BD59290DAEDD35C3F52458C562B61AF520C6BF4E7CD0B638B
9F18897EE0B079CF5022E248C8B4A93B1CD49BD65A027D57AEE830D82A066089A8759746C920
B2B5E8EAEB4343B2F900BD8804D3E463FE3E45383F83B03300C236BA388BFB2A30FCF4FE477E
700D11788D702359CC53BDE2A3F33AB9EBBFEF785DE43AFCAE38D33B0156077CD385A1736DCC
AF56640152A5010D2567D1631755D701DED76A7F464B4ED39231AE091F7412898AA5FFCB1DB1
73C0C041F0125502090EC9D95E6C8286750F1C218BED26217B34C1ACFF8D53578DE104A6C432
7BD69875E2B913C6ABCDD2FD15F5C0F79F2203CFA95518B764ADBBF319361D93974E41317AF8
D66D50C5C906B600157FAAF99BD1CC72E5DC290C6CEECE23B70204BDE7A6476A2EBC29A43658
3469EACB167C30F7755693131E4106B4587C048ABDF83BDA29B5147A2B2AC963953DED5F8BFE
382B210E4F1AA75BAFA54B7C0CCCA2F757C7D4BB7EB82049F6A373725041AD87FDDE437F7568
3B24D7C7E83CC4DEE124C43B32863B3C63B60A47A79785824508380550F49DF8B68464BB8EAE
E23C0AA0911FCD9708A2158593B3D309CEFE72041A8B5932FC286B1AB87FAE541A8C021B306D
D3D5A4C24CC5A964279010F52CB2E159514BB86467D45E88ADE94AE32BC863FC31809212BA2B
FABDD2EB241B454E875EACAF83A3A236ABA8A5C76B0F25FF7EC67C2FF8D356F76729D740DB4E
452759067C1EA22CFCD1734BD7A6BCA67138875796D7240D4C517268F511478F961BFC861397
677261A87C142B1D09B7A67CA9B20DF6DDC817834CDC989CB43217AF3A3B2558293F4C00176A
4A110C4464B6AD520E08C2FC5883BBE3B91DFC5A312205E2254F2B596680B0220CF71F715C9A
6DD98D4B69D748B23589F7ACE41DB514DB186585B32C9927502590AC499721E6FB41A11F6842
46F55C364D1EEE28603B7969CB3718E6A43756F4881C816A73D3AB5D941401C734313BAAF956
9A89A1BE8DBDA42C80AB8B69509CA6642948A49DDC02BBF41609EE91469100B35A705F032588
AFB61B7F0908D57C855F79A99C694D8758BB022E2CB243F2D37939D549256E3881C81C696BFF
31049D71B15D57CAB7DB62CFD3F924D892628D30A7269F454173B65C6E624444BA0258C46AFF
7D4DEACEFF61A65A3E76869329A2DB52821D642C2CD17654852B31430C285A148C9C13BB2074
5C31091F081F97EE1E5D9BE0DD6E5CE11C1AF541BC7FACD21557BF1A0D716EE22820E45915D6
CA98017C7C118D2C44318886A042C878AA6BBEF87CCDA30F4A22FE7692A2FBB94BAC40A0901B
02D476855EDDF09017DECFD3AA6F15E88C512282ADD2DD1CD21F0B308526D3CD24572BA500A2
20673ABA296CCF8A73CE7778170F9AAC9A988AD6654215888A2CF929E9F0C788053F824D7EB6
4AC0EB8A8FB77C7F8813609235578CF81D0E44972015E2CD249A8B173B2085B2BADEFC52BC06
59E72F76D393FE2FF271263767A71E43DE0EACF143132A6E16F076D4EF0372266407569C3BCB
448E01885E90FC562B903C9B3F4E3EDA9A10292628DD90361D6E260992E22121120881EA2FC5
3D16A6947D9AA582567001910C9019348D3DC92E5AFED308E7219DF4F6870E360036947E98CC
81633EC1253A2C08C58713B17F7AF58FC21C7BFCDAF7C603091D638E36A35E02985B62C869B4
0A0D48E7EA666D50F2ED245E9C917159FB7D5690A84FBC376192094A0DBCC7AA7E275D67140C
16CC12C7A0F7A3991942CC0934C55F73482EA940FB77BF3638175EEEC7E0C5BCAA85CB966B1B
27A6E4F41AA194E3BAA2429227DB093617AC18207433811585144BB91DF29BEBF564F30001D5
6B6BF8BBA894357AD7FB92FC402AFEEB58ABD2C8D3D55026E425423B07C35EBAD9A3335AC8E0
C4C21A2BB9B1494A567EB5BD5C4CF0A320F6880964D8EEB164C21412372446EE7C4FE288170C
ADAE0645509E8354E9D8E11A2DAC1917E9D22CFB3F8554B6AFD00766FC93C97C92099FFFBB02
A1728E44EEB756AC71F71BAB753040AD624465703440BB2FB8164B9A66B7BBD7087DCDF31221
C7559BAD09ED12395649CC78B2DB97E23C96FB3DEE1245A0A7C9440176ED5CF2A9DF45074075
7EBAE0DF23598373C8FDE9964ADB2C72A1FF5DCEEDA2623539C9F60837DA6D5BB6CB0B5D2BC2
4CFA6E77EBAD46DECA539B1761F9A89ED2E0A2D3F3D92FC8D6A4FB4297DADDBE6B2A466463C5
F3DDAEF789F1B362327BC0494AE7680BC3890398E433D00BADB61B460EBDD35184A15A074F0E
FA9D440E7A4B1498766322653300EB9BAE3819288461ED06C676DE7CB1ADC7FC86A1D6ECF8CE
F2BF8FDDFADD27F88B17869E8436473ABB44938B375412BAD602672F320724A695382FDCA77C
DF0D68AA6F682A74AA824B09138054F203C65BBA0493224FC452298F316E3D7298511397D813
C540AEA141F532055473F721F2696148E110CAFB5900471DBCCED34A569DC3C3D38CBA61B2BA
D0E43526E9E003A585F2BA5E1142C7A6DA76BF86F7945878EBEEEAE799E3F0EF8330ECA61856
236856C870B2657FDBFE573BE7C0D07E326E0C027E18432FC9564C5B1C100219DF0E19AD1843
EF5033244F25C7D959890B1950D9711C705DA8034438D719A2C2BB033B2F85FF25C51451A002
BA514D460FDB4AF404A4A1E7D4ECEBAF666F0EBDA7814419ACD76B26862A0C5C9F58C7206363
C2D66EA809EE59E83DE69C6ABB6694ABA49E7814911817DA0D0A3EF6DF1A67D716B8723799C2
089101B5EDF38723386F524E4AF6AF3D70EC98F06EF95F5820D46068305F0390E60D2BBCB9AE
4D642E7CD064086D183756E5C38310CA8C874654F5721C65B20402C02EDF59CC2149D6F4C086
05DA2BA6DEA3B60F32108AE4AF98BC0A1272F1306767691C145F29B14B4AA67582A245276137
6514CE182661CD7E3DC1FFD5656A5373BE74086546030A42532CD18EE23F01DCEBBC33EC39EE
059A8FA3072CAE0DC97361BE4CD8BDB5DEFF6611AAEBB31EBA176BEB2111791F741BB43A2531
FF6492DFA5D987A82B8A5DB66D069C64A49F4499066BCDDB2ADEF701CF14EB3C695AD187FC8D
37E11ECE364B08EA66FB64A96678D86054C2868A5792AE3F1B13526000D7B59451497F795B81
14D25252EF6DA37A4436A358C8D1647586C61154BFDAE2C5EFBDF320B8C6974190384B5C58C6
27F39194A07B96B3FF181058A150C2B174BDB77428E81C83280EFBF3931C262875A9A13FB025
41B4CB463D5DED7383F95F409660A55541ED6FD2C8C22FB53A9ACF1ED9AC73FF5FB9FEAB77B6
40C7537EC8A9D8E611ED7B56AA257918EF503C9B70CE423C0AAC62C4E73A9BCDC0BFB8C3A80000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000

cleartomark
{restore}if


%%EndFont
%%BeginFont: CMMI12
%!PS-AdobeFont-1.0: CMMI12 003.002
%%Title: CMMI12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright:  (<http://www.ams.org>), with Reserved Font Name CMMI12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments

FontDirectory/CMMI12 known{/CMMI12 findfont dup/UniqueID known{dup
/UniqueID get 5087386 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI12 def
/FontBBox {-31 -250 1026 750 }readonly def
/UniqueID 5087386 def
/PaintType 0 def
/FontInfo 10 dict dup begin
 /version (003.002) readonly def
 /Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI12.) readonly def
 /FullName (CMMI12) readonly def
 /FamilyName (Computer Modern) readonly def
 /Weight (Medium) readonly def
 /ItalicAngle -14.04 def
 /isFixedPitch false def
 /UnderlinePosition -100 def
 /UnderlineThickness 50 def
 /ascent 750 def
end readonly def
/Encoding 256 array
 0 1 255 { 1 index exch /.notdef put} for
dup 0 /Gamma put
dup 1 /Delta put
dup 2 /Theta put
dup 3 /Lambda put
dup 4 /Xi put
dup 5 /Pi put
dup 6 /Sigma put
dup 7 /Upsilon put
dup 8 /Phi put
dup 9 /Psi put
dup 10 /Omega put
dup 11 /alpha put
dup 12 /beta put
dup 13 /gamma put
dup 14 /delta put
dup 15 /epsilon1 put
dup 16 /zeta put
dup 17 /eta put
dup 18 /theta put
dup 19 /iota put
dup 20 /kappa put
dup 21 /lambda put
dup 22 /mu put
dup 23 /nu put
dup 24 /xi put
dup 25 /pi put
dup 26 /rho put
dup 27 /sigma put
dup 28 /tau put
dup 29 /upsilon put
dup 30 /phi put
dup 31 /chi put
dup 32 /psi put
dup 33 /omega put
dup 34 /epsilon put
dup 35 /theta1 put
dup 36 /pi1 put
dup 37 /rho1 put
dup 38 /sigma1 put
dup 39 /phi1 put
dup 40 /arrowlefttophalf put
dup 41 /arrowleftbothalf put
dup 42 /arrowrighttophalf put
dup 43 /arrowrightbothalf put
dup 44 /arrowhookleft put
dup 45 /arrowhookright put
dup 46 /triangleright put
dup 47 /triangleleft put
dup 48 /zerooldstyle put
dup 49 /oneoldstyle put
dup 50 /twooldstyle put
dup 51 /threeoldstyle put
dup 52 /fouroldstyle put
dup 53 /fiveoldstyle put
dup 54 /sixoldstyle put
dup 55 /sevenoldstyle put
dup 56 /eightoldstyle put
dup 57 /nineoldstyle put
dup 58 /period put
dup 59 /comma put
dup 60 /less put
dup 61 /slash put
dup 62 /greater put
dup 63 /star put
dup 64 /partialdiff put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /flat put
dup 92 /natural put
dup 93 /sharp put
dup 94 /slurbelow put
dup 95 /slurabove put
dup 96 /lscript put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /dotlessi put
dup 124 /dotlessj put
dup 125 /weierstrass put
dup 126 /vector put
dup 127 /tie put
dup 128 /psi put
dup 160 /space put
dup 161 /Gamma put
dup 162 /Delta put
dup 163 /Theta put
dup 164 /Lambda put
dup 165 /Xi put
dup 166 /Pi put
dup 167 /Sigma put
dup 168 /Upsilon put
dup 169 /Phi put
dup 170 /Psi put
dup 173 /Omega put
dup 174 /alpha put
dup 175 /beta put
dup 176 /gamma put
dup 177 /delta put
dup 178 /epsilon1 put
dup 179 /zeta put
dup 180 /eta put
dup 181 /theta put
dup 182 /iota put
dup 183 /kappa put
dup 184 /lambda put
dup 185 /mu put
dup 186 /nu put
dup 187 /xi put
dup 188 /pi put
dup 189 /rho put
dup 190 /sigma put
dup 191 /tau put
dup 192 /upsilon put
dup 193 /phi put
dup 194 /chi put
dup 195 /psi put
dup 196 /tie put
readonly def
currentdict end
currentfile eexec

D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C545D25FE19253
9D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB47934F62D1F46E8671F6290D6
FFF601D4937BF71C22D60FB800A15796421E3AA772C500501D8B10C0093F6467C553250F7C27
B2C3D893772614A846374A85BC4EBEC0B0A89C4C161C3956ECE25274B962C854E535F418279F
E26D8F83E38C5C89974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F024
867411453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBFE3573BF464E2BE882A715B
E109B49A15C32F62CF5C10257E5EA12C24F72137EB63297C28625AC32274038691582D6D75FE
8F895A0813982793297E49CC9B54053BA2ABD429156A7FFCD7B19DAA44E2107720921B74185A
E507AC33141819511A6AC20BC20FB5410B5AAEC5743673E9E39C1976D5E6EB4E4D8E2B31BEA3
02E5AF1B2FBCEC6D9E69987970648B9276232093695D55A806D87648B1749CB537E78BB08AA8
3A5001F7609CD1D17FFA1043EB3807AF0B596AF38C91A9675E2A53196FEF45849C95F7DC182A
5EC0EC4435A8A4B6E1CDBF9A5AF457564EA72BF85228EB6FD244F25135360DD3EBEDA99D9482
8F447D52D011A8FC8B8BC124A4B367EC860C5F7CDBE585634A1ACD80E37B6F2D5F33AF5A2C08
14652FA37D0C6A99767C561253AF8DA3A1279D421AE11C133004DB273FDDC2134ECA4CC50296
220A4729E4E73003AA88CE151F57F8C5DFEE1A8B3A74D7CB142B4F7A128A4B0FD028B71FCF59
841D3E8CB0450A0AB47B927D944D94C5DA562310C79E2321106D6B90FBD04F5EB787AC050578
011A0B24AE534B93B4108D982736464ACF5B77071ACD59B8D987EA9FE832A655C175AA8204DF
A034D9DEB3AF510C4E948AD8DF3E799B81C5C8250B86FF8F91BE906357FC5DE9A3209AF78555
AAA0FE720FBF0300F4FFB1E6F49CE9E00B0870D1E0EAB2CE05378850D15E9591ED19E56327A0
83671AD4BD0FAFC5A3AFA4D3E3CB1E50111ECD344168DA214E380AB12211010DA632B2CE9261
6B94EEF181FF68119A2A0FB6AD9D3BE9E91F24484D018879EF39B3A5EF9A040B26AC1F2F6EC6
0EABB4233CC0878BF25AD526D45BA051CB36353A5A56E9BA2D1132F595F3202195681878AE92
CFFC0A809F8EF0DBE782E10D065658FF573553AE7EBC443C640F3F5745DA56489EFE26BBE674
75C3F0ED603B9DDB8464D40B587BBAB8F1B3F73FF9371EB27335665FA61498231EE271987F28
3580C7B42BF981212D1460D366B3B5D0B7A7F7CD24B3C145B291FAF0B1F20996860BB42E7AF9
6BEE82C2B2174E9ECE3428A5FF9A63D7858C44BBC680770CE70BC7DF2B68CD42F93425179765
33B7DA625EBDB07E071D4C17C3C32714C079DBEFE2F6F4977B005FCB214BF1FCEB394488CF34
938B112C31AD00A54D096EC3769F157DF59B6EC70FC6BB644470C2DB9688A9891D06145B198D
EC09C5DDBFF4E1F56D8B62D172F59271B009EC62DBD8D48017892149618394F80F3472ABA74A
AEABBA441B569394080498B5E5B56EFDC414BBFEBD1D53FBD880E92ABBA771A5EFBFAB1CA24C
3F36686B9D9B65DBBBA23089C7D35CEF18D9751FEB7C1E65F3B672D5E7C2BF998F65D0F49573
F285279159BBCCE027E66EEEF9E47CA90DF348D89F8648FCB6F55AB2ED74C4043AE90F354275
9B3F15932F8A52E3318F1693B2367E13AC6412B41D06DFA71A3A869DA8816B26CD2CC94DA976
DEE2B7ED59B4E956A0836A5E7FF5E0FAA40A121482798BF50E1728D3387D50CD62E1017235A3
B1416CBB94C04F3E3D5FA2BDA3819A47057B8FECB3C09E0A391B5EADC38DC1AB744F90453026
AACEDFCC190A280F0179C8A3BC1273C608A671E4ABF8BB5DCFC4732400481002AE9451172F2F
9809B75440B987AB11DBB3569022A02F0194D73FEACA133DBB96BE3DED9623D5A89D652880EB
4A147BD25031EE1C212E3226D5F7C4497DD9E2F767C4414323972C2B268F192113EA4A0CD2B8
2760DCB2ACADC8719511F63D471F2DAAD5399A0B5DE1A15C6579712A81B432DC083E2EFD660F
DE2F155C78676E3350A9A5724512F4169C5E697897F5013D010BF75CB1920328F21DA3408BD9
0216A18A5017D5FA51083A7C49C3D226B8AEB886083D13EECFB4EF12DE38E5F6B5B7A06D7F2B
FEE44690C87A7EFA5725AC793B61EE754278919EF5C5033D539A9BE0732F3D33137B6BC6D170
DDF29763101BA0078E4BDC1562D16CDC01E05129709AD0E9532C6E6F7E74E42BF133F53314AA
F732E90DC3AC5C1BF5FD615189E12EBCE636C9129641A4879BC987E734289732F73DFF066C8C
13B3735E2F2DD818E542EC0649DE3E37B0B5111670C45EC14E1E1FF14E41F12A20A6FCB2FDCF
A350467651D697AA7E5549E2D4B30175244EE941B1F66BCC160A03B963A64DB7D1A06ECA6458
66EC4627EF2F3563FB399DC9B56A99A024D8FB026B8CF36E49484B98C90DA4477FB706CE1F5B
136705E52A539D21C933315542DCE71BC85955427D9DFF0DD9CB767B6B67DE7C2B8A2E2CF3A6
39E4C354EBC169360311D44D6F57322F0A402C293F9FF510AF29BAAE402A218B631449501759
5DC15128022B8C698ECFBAEF7ECDEE7FF01DE305261E0119786B842B781C94E2B0138A581CD0
51807508F585597EBCEF7871A914FDB08466B2E979C83DE884845105596546434E0EA525BEDF
FF3E68F245493745A06B577C9A50E0170274210A6F6D4A44C1EB5512ECDEA42F107E8C08A98E
EB9EED0582D607DE96328ACD3D81BD759CEFB2F6DFD2AD55FF46D5202CCD0B518DB0008DE955
94E96F77FC36BCB1EBCD388BD2E3CB674F90A8C69B4F57FBFB6A57F07443B05B43BAD9EDEC3A
90C5270A9F9198C8674972734277A7A14F22433A74CCC8182FEA974FE66DD3A3BBE8F2494895
B01B5AEDEB4173D8C3BFD4AAC413A548E0D446E0EAD5BCE288586885C116080C0AFB697061D0
21C043D2822FCDB78CFA99DE2A90A8465822A6FE4C0D03494EC045EFA80793A2458FA78C3353
B0D5D0600CE006E31CA3131F387EC4D84B0C7C46A308D08C302C85ABF45B2D483BC63DF7B0EE
A1A0AFC0F844D77274C95ED477114752D0C88AE6092423DFABB3B01934699F096AF8F067D870
F73CE45036362AC4CADCF97F42C63DFFC69EAC751C08AB6D61D34D32BFCEE1155D012314FD51
252D2470B4D4CB16D0ACE4DDB17030C3622F56F96EBEA0FB90D92D109B956A4DC00332A9433F
FE1043300B01D87EAD0C51E6D65545C37AA6528C214BF68831BDC78A84746E879643D9D9EE6B
A5C167DB0A370308C5EB606619A17BEC856BFF181BEBDBA0CA0BEA05C4EC948E288A941755EF
A2DCFAEE67F33B311CE0532CAF26FDE29474DBBEE42A623BEA14E4A4858B0496EFAFC775D480
65F58DC20F727DCB866EE68E24918AA1906073B64B0FE458B08A1B7DFA4BC03DC88CB5394F1F
D149478577396F0AD201C4568BEBAB40DE8B864484D8D117727EA283CAA7485AA58FC506CC9B
1C774FC883A3440499E3D98436111DC1DEF8CA30DDDBB9DDB9C89534D691555C36B5450DDE24
CE5B17DA11E3E4C37A11581E4FA3C0D89B5CC3784BFFC14B6E98C548A7C38C53CAB973AF3DE8
2C6D42A01A57C9FFA790111BF79FE7F591D5E2FF9E2730B7920A30D7BF713E4EBDD272DBDAFC
8A676F195BA9082CD779E002FFD0785FC8DEFFCD12E4B8DF368091E6119E135076E43DD0CD75
E6429CEEA972391BA73D93B89645B2480315A49F49AFE2F324D251AEE654ADCCA32A66E9B1B9
407B055BBC615E37BF1BC8C1ADD81ABBF983C73F733F91770D50184FCA3A0F6165CFE7900235
2DCDC1296D67AD671A4F4C0A60C7E9C18F3CC374A4D065FE56D0BBD2CEEE3F70AA9398896FE2
2CDC4BF7332726A0E676D66D511799D63BDBE0DA140EC4EBF57DE032B620E5ED890A6760CB7D
40A05037BE3A6C5347DDFFCAAE3A5C4BC116F39969936FB483040E421345EADC494523ACBDB5
5CEA57C40279D4AF5C7C9F3B0660ED9E725C9FADCD5361784D5C14B93C3B13FD055F269BC7DF
6D67719A2BF30D19D1A690B4CBC06DEA51884A686564B3FF6B3F8E9C9FBEC5A914F525B6AE34
D448B0AB85FAFA4E7F301984A9645C786DF2A19C2E6A20DD0B60AA2974A624E7CD1917AB87B2
73D04516D727FD30EFD27C983342C9BCC1D9CE95E7576AF25A4BFF02DB4588B8604C306C04AB
66E85E114C28CC47395016955AFACE381AF44B1D004D5B6B64186CD7CB9D081F93A637BBCFE8
E292FD8D5863BFC683C9E37F0FEF0ECD16CFE63E0A584BFA4116D3AB0ED62B7B82C1630B2B78
F25527A79267580F58005BFBD37E5C0C31029945CF6F6F72DB17EABDBB51DC8726FCD5AB2D61
341B2EF7716F0D0AAC546DEDD22AC62FEFB1ECA0EC524C6B3233FB4E1B4CCE49F584BE7BAF33
C878F2280A8598502001DEDB4FBC9F7DCF40D055AC35AADA869F2808F0B401C294AE378AA9B2
AF2768B75D9CAE1AC52025F18E7DDAEEA2122CE9D233A2A9046EC5EBEAE20FA928BA4AC651AF
426574FAEFE31D28C7717DEA91429C7BD7611CDA7F5F55A070AD6776AF18DED46E5101A7D1A4
7F0752896669148EACDBEAD1C8A44801B53DDC61261499F2FCC600F635D8CDDDAD94A24BC14A
2F5B5AAA6260955256256AF4A9ABCDF541453E4190AF27139D3C6A2BE9BE4870260574C26338
FF348F503DA4DC15FAC4F6ADBCBCC29D93B9100EE126A0A28C3F0CA30B7F09E13AE59E34DA37
3702C5817D222DA4AC23DA5EE272805A902CDB7001A0CCB26220D956871465BE18A323DF93CD
792BBE61F3FF8C4957FA49925DFBA1569FBC1BABD1C3BA13F88D1D98F7034DBDF956F52646DF
43AC978E86A1C532085DF36A66FF556442F3F337A699DEAF26EAE1AC20FB2968E58DF82ACBB6
47350335E4D48032E1BB49F1EA2181FBE183AACDC06761B48A9EEAE514A00B4656B4CDA4BA3A
C27F30C39A4274C1DAC69A7BBDEC53C9C7D78D0FAD8530073440C85F0A4B0003AE793731EF2A
3199CD73663B05BDF83FB2B8C175F0CB3D20C52C0C8A370F9DB923048CBBEA7267C828A700C5
856EECBF7FFE8A67C5027BEF1B1C7D42C717ABC02FBB73A3AFEC5F57D6BE21C2CBADC84855BF
A4BDB2F127307BF437F010AF0C938F9587B153249E6EEC2ECA63E9BEE972CF4D98627E9DFD37
B325E7A6612C667296C8E9256C62690BE9D25F7C68CD984B56197148A89E8E05B9FE98F033E9
DD9EF7245EF70E63289C7947BE5F2272154E207A9B4B1FDBE41B1D4D72BE13873462B012F4B9
D5F4164B714965F36C4101C870EFCC4BACC1A6DF744C1F91B1B7A2BF63BDFB840F5B0C062ACD
11FE47D9A3AA36CDC00ACD6DD8475034F603E859B3113B1C8A311C80B5D9EE1D881424745B57
3DB43656FD733864CDC8978006D58309E4B226288A0DCDB9AAC8396FC9DD024BC5F00160C382
B127EB4C9FA74B62BA990E2DFBA53D3CD57A27FB68F912E5B69CFF2113D70CDCAEF634BFEB9D
7A65CD1A670E3A2CEE5D9687558A1BDA4358BE0917A4C8614B97DF5810473714F6FB8BE998BA
52916F790F353DB87B96194C6271147A947C664D273CDE1893D4E1EAEE9F4199941970A46AB8
09D4776E9310C506EDE77EF1E9804829E495B0F654EB15FC2563DF6CB1B9D36D837777547CA3
7ADB28768A8DA2433BFD20D72F9F00743272277F2C9A9F1F33CFAD44A8F3D620A0DDA13C3286
760361107A0A82E0D12A9C601FE93971250D47583AD68AC90892AECC54BFAB740A2F51F07A1E
2C5B5E3A895F3E3001F4DEEB99E0A6464B0EC3753F30013E9C92525D9F651898A585DB03BB71
80D652CB68ABAB55BF18402A43888772F9C36C9F7CF6E00F07B33590C777B1B056B6C31210A3
FEABC46BF00E7A837E93EE3464776B9D78E75C60CE9E0725C31784836B9CD63BA44DB0867C80
D70A15FC97CC6E4526E84AE9B30CDA84C1C7857466E5F315C8F6DCFA0289FA937AAFF5D3CC35
709E9EC3C255B355D7BC6063BFE6364804342D4BA7D015BE58633CB781FFDEE7BFC46AFD8425
5D141DA1EF280D5CE22017DBC7C1A128B3F9974AD5BC1E53E43C3EC042C17DBED744236D8AC7
84B9102E2FC4E94DF8C78254A6D496790CD6684EBB54035048E1DB7593E552C7EE7B88401251
7917AD46CA470ECFBDDAFA7F1FF13C0CB00005628710DD4EA93C79DE721A89BBF27DBF7A0857
99B00D6AA37D7B3590C79ACAA5DFD15953E7F8B5874EF9BF34A217184100A0800A5675D552AD
EFD930E294A50CF7A3C6344EA0871ED23AF942EC699E21537D852ADBE736EB1070D2C9B622EB
D2384430BCB114D1DA3CBE2C6FBC839D77F20ECC999A5302705AE31AEEB8B4E5CA4046A3C77F
8B0248E3755013CFA7C76D7248920CC203834E9328B58D5FC7C46B11B5AEA991556D067C2B24
37634D95EA274197D3B46CA1B8446D633B6F0AAE72A599548BB3D81A337113D3EC58B0B2DD10
7A617CA6DEADEE7003AE6F28ED6DAA5C5D99D67DFD2594800A66D11D26490156A539E2861912
74C30C098DB77A427695BAE705DF290F97887C5DD6FD964D76FE6132016D0D58580F2EAEB727
FE1B8AEFEC95C4629CB17D8C63D1EDD2125527D00C9E7C64AA7053A047A69F82812FD3C8C254
3F269EE9C553F5BF8A53D461D9C308C198EBF2B97DD531664229D32C3EC61D69E4E79F539E9E
589FC3F57C9E4624F869A482062A52C9F4B640090C360DF8DC8702DB966EFADCAE94C8A2DE02
2E88EB388239BC517368F8C26C8D96A6E8649737F902495E3F29F357B9B58EA47A9400D028B8
BFFE74BAFC43E888808381C5F3E318DF9BDA26F6E14DE2858A1A9CFAAB8A82B7819F748E04C8
606DA94D884A13C67E3FA06F9C2834E1A02F4BD043C87D57297D500E4757BCEB37239A755F36
FF99A3F9B6E0CC9F8938041EB931519BF0D42E7A93EE62E6A59C2BBF1B2D6CE1958DAB40F1EC
78C99C501CFD69864DA50EBF933D30CEAEE7456CD0A08C78CAFAD93CACE2671F7E3DDDDA98EA
56CA35648109D4E6333188ECC817F317D8979DA9FAD9DD45DFE5D74BBADFAC4921723F736426
D5ADCC5DE4FA6703E121BFCECFB415F1D444634A7223389A38DF2AD64101476D170DB854A220
CA8433AB5DC40A841BEA6CBC538C63E0442A7764014D853AF8AFC34F2D17A1DB8740A45C8576
67A59F895094867D12D06EBF72942E8ED4D6EE9EF225B4DD82A2F16AD0A8C2C246DBA7BB9245
ECC4863D14885BC30950451113123C868B8AA5B36F7B926B5ECB0A333902BB241B3D28155065
5912AE14A634D79515F00799E91F6DB093ADA1692CCB5A32CF94FA0A4E1B311A68BD03C0F85F
2F63C3C0658A3756013288704B240E14F65AC1BDA3098894BE592794245AEF119ED59523983D
EB2D0E9D211F62E6D6C5AAE72F3AEEDC4E590BD531EEA93C05EDB1370F140DB3034A999622ED
4BA8F1AAEDB368656B6C6AF920DE068E06B985FD47461276723C9944CAC87B44475767009320
C7934FEB9B4DB8E1003000A663155C9A3FC67182BE4EA30F5FC813A8F34F3F99DEE8134252A9
8B2154FCE28C1EC23FA5E4BA8C4E005708A18FCEDE9F154576F0B3400C7FBFF197011FFB739D
285819F9C19796979B3A0A5E4E5CB116F78DCB3A7178718D886D1A9E52BF4D9C8CA2FA272514
7413CE566DC74DCD7328806238F8BF9A780CE75C05A7C2BD89420F8A0B0D602498C1C83F775A
231B8BED4EDA6F8C995ACF80138D4A438EED6FB2CA44F06D664052D45B2FEEF0EC584B27E01D
663D4B2F8C48E04690B350AB33F10875460000D37C300CAFB3F8391E44F1AB363074FAC3E03C
41BF062E5668AB0A4214C64B171A2CBA072DED6EFAD31309A34D99DBC065106DD8F0942DE6DF
D6C0743D98F214C3E3FA09DDEE4D1080AFF99C98E001EFE2B853747CA64A6130A87AEE358359
2AAD47CFA01F0B5B22C638925ED651886EC83777DCCB56A808404BB5B655DBAE33483AADA292
B580F02FF2494C7F3F7459BABA95373E39D2ABEFEC3FB56440DF99E6DC49E4D01F9286E11085
D68EBE8744F307F6AAD2DE8B745E243163427A2B90A90F6726BCF115DA15331E3F30CD025624
C7B916A97B4067C60213C0B3782EEE9F4594B4B78B072C5E9A30D35E1FCFB5E043404E5407A0
1A2ABBB636096B0ABFCA115414EBB67749D494CA030E21A91206D6B090E0D94EF2D116576501
0B8D39695D096825D9687F2480C851690AAEAF4AEEF413C054EBFA49AA548B618802B62D0DD5
FE7529563FD02F7CAFD93CA182B2506393AE802093C5668BE1D5D2C9E74C3160B5C3055A31AC
D75B2CE21E1014D136FB96E44D4E6BD79A7B5FC5F1741A55B6CDE4CB5B44AE1EC827FD9BC083
F76C8787756104E782F9D4BDEDA005B4085690CCDA8AC75A0BEFB47D0806F4A46126AA280A41
F0FFCFEA04B96714C7B1D4F806FA6412DDDAA68B20551C36E556647C3A7FC303C65579322171
A7783FD7364F56ED31B5B8132815F524DC97030DFE3E47EDE35D03F4CD2CD99AE55D0BB817A9
3C71F7C5383ADD04552F1C54557D494907D3050FC9D5514FCF80EF7039C5B076F16A3A946D59
1165E72F2A31E906D4A57167B44D64BFAE9C408E9CE5EC8937C7B3B0AF24089A1878AF0758B7
CFC8A787EB7CBA64BF13D3939DED996660A6487579162F56C3440764954DF160077B16CBBAAB
9DBD5857FC44A5775ED562140DD33B3CB2173152213DF78D65AFC94347685181CDCAF3B79D75
5652C2B2D3EC39449252DA027E97E534AC05ADCC39795C41F68E5F98F983CFCB4DE3BADFED90
9B2B6178904806B40AE9F9B3577531D1C9C5793EB1C455C9895D2C858540C6B7F8B40AEDAE79
FE461309AF352C80739C5AD7612EE5970C113133502E1F59F53F8A72373A3841C37E727ABFB1
E7A2AEAEF482B0942CDA1BFDD81F7A2FC15A7D0E7F2CEFD8BC432268ACDDF3698804556E4AFE
9086E6AE0CF1B144A5A7D04CE576F26533B611371D7F846959F2A589E54EBC0EA0AEE1C117EA
3E8957E07AB8A728AB388B06BD7D98CD44C468F7AE354304DCD93BCAF479F5C27BAC920128ED
987667E94ADAB5E55EAFAB2B52BB2D83991F9D638CC461A25738A6C33F134191A1A804EA935E
F441F89129175BF705D4F7089BDE3C0AE6C61921487B3EDB029FFE0CDD2307B68CEFCD58591F
939ED509EBA0FD070294B5158F3BF432AB18379BDA3486DBAC2984198FAEA711008AA454E961
2B23B6C8C5AA908E5424456603D522BCAEB3EC41E1C8BBEAB1C8CE0BEF6AB7C7008171F62B03
BF9258329DCC30472DB329313606157CE246CC8D5C9E7DA2AE08967CB303C5E516F18F0CE530
E75762541536B444925C1E123CFB615157A3169F7F10172423BF5A540015BDA30A03414679A1
45541655B65253CC546261FF4626722942C8AF01FDA6F92200EFF27168074F3BAC5692AAC160
F7A0DCBD5315C4B700E3BEF31520215C093F0F1DCFD5D18538F8D4FF1997C6524DD972AE1CD7
E11F829CC621B383390C2E7D196A8D5A9CBFBD8D3145E20CF045D1F128CA47CC9A0191E29D42
17A1FA558F1F93DC86171E43764CC7D9377A1C76AE027D5C3FEC7A38CEE040DA280902D3F183
134E3A95E5EF148C71BD5994BB28EDAF191EAC23BD02BD9A5F613235E97A5EE8C5C7E6A93F03
186A29C684B6E46026A31BF1830B1ED3BB12A0648270CEE09A4F5AB891AD72D80C4057C781DF
D270EE443E1FE4E9D8E58D2AA0A9A702836EABF544A3B4F2E1841776EA821FDB36E71AECD6A1
C355127B461FCF72A531176DB59F10D9A1222F99EE4AA579CD5CF6A288016F5DA6838536F3FE
0D902543095D90094EB79BF1592CDDE05786DAFD98AF30C6CEBF27B1315C706A63D4E868BA37
4EBE33145C16F1812AB2F8668B549A74C8A58304BAFBEE3136533542EDB8976C7550F0905546
D116DD0E11384C2B99E1195316EC9CD53EBADB73509FDE80B1BCBCAE46E8806E0CC8CCBF2B10
FC54D05C9F604B4ABFC87B25DB5CA90B64096B18C33E8A53F45F163AB7AC47CD6E9521230D68
9ACA686B5792D72097C4E67F93DC9B7AEE088DA36BD6ACEE7E68ECFCAFE7D585F677BD1ED275
95948CB7CCE21BAA375393CA45234E8F4633D61EC657C528EDD0FF520964F8B737D0DB9A58DB
146588F7F02CB77DE7D417CFC65B45CCD62F77CC833DB5228159A552C7D6B0F7E5E5521E26C7
F9A47D8F600CA820DF8B4B25B8B8D823FFB49E7B1E779D9680AFB496C7BD8D2FDB99717F9EF9
1A6AFFBDAF5E6C188315BF63C3BA9B8414709D1E60FD25D29BEA68D6D5857CF024BC2E03249A
4B294F36E3BE13225319F11AED07AC2BD2E5BA6E9CD7F77CC707F6268514BB7D50257EB4E23B
D6CB9700745AF46DDD87664364A8CE71574F2D60CDBE61A3AFAB925EFFB23273B61E93385C29
C2E8B76650C1432AC8D4FF35F5419CFB553C8F10F4230CDC749B5F3A8F5B1EC8C9FE31626378
EB495A9A53BE7E1C0683550BB3AE9ED557CF4DE95399C5EAFB4B99B0889C890FE2CEF419A208
00812D0DA7795E9F519061D19D1AFE2AC77CBBF05D1A738E62B64B4224DCA36C48B7A9D1FF78
5225C9852111316ACE1DAA2C21E05D767DB0DE6A0593D19029814C8BCE19DEED87EAE4F52004
EA1FE7934C099EC71AE7048D796081176AB9B8ECF42FA5581FFD859BD818411DFC4649C76F82
D6C03563F9B9D2DE6F274D41E0A93784EB6ED0FEAB8DB20CFD35E2DEB93A1DD1AE514F9E8A48
279536885042D248CF3FB0872135921DFDDC41198DFEE21982D675CC3BEFA0A3986893CB5539
3D0D97ABBE2E2E9B911B8E219104B22197EA04E201FF9C5F9B644E91709CFACDA783050C7521
2109FBBC0422B697902D9847D764AD31E851ABB49F9BED16F1377F97198664125C1BA4E06C4C
43AAD882904738E1127C3CDC74167B21358CBDC8563951CA7B5DE09526FEA0B1D2AA92F3C4ED
FC252BBC38463B55E97E8C40D6FD34403357911A1FD0A46565148F3FC891B20EC84976FB26D1
3A93F1B3D7162D864F8E1C4A4CED23724105D0B7EB83EB334386912AAD93BAA8AA9CF5CDDF83
D5FF76E94C8A2C40C28B5F4847A49D8155347392B7D2CF2731E45E0ECA9A654AEEC5DC2A6B03
E93D4DA22575D824294ED80804B842B898708A5FA69C5F958A935D47F57039C31771879DC8AE
993CF060F6B509F8CE28FAFA8A0FF705D6AE2A2A1B6B7EF98A467B4BF94029C32150978EADDE
320F21D27A8F65BC17C850FFE3F765B2901D5E3C60D74DE8425D523852F72BD42A9C91938C74
6FFB2F29454237A28F658ADF42D7942F71101588D5A1266CC182CC2B1ECC2D05CBA30BC281EF
5869AC8C50DA4A005AD826E6BC06076A0BF2C85866B2B8760EB5557468B4622DAAA693B0788C
A6F82D04E4E388FF01B3C72D5612FAA4490227C0622FBF58801776B71DD1B0F5E8B7D238A035
BB5493A0C0AF0EB71A32A92581A7C3517E68DBA2F8BB62D7E4FA2D3AF8D71B7F72C41162BAA8
BC17870C40583AA8628CF892D86151644FB1A7DEDFB494C0E63B0E5C96F773A995D4C079792B
209ADBC81A3F255DA85DDF205DC38B9B888C4CCCBA13836337C6CA7F33EB4367808886771628
22841E609D6998F7E8F32972DCC6B2129BCA4D17C7F7ABD1F404B09E3F60FE5CDD3AF8CB43BD
30414C12BC8E3739B5B7DCC137EE34626DFC1E24953A1FA878A8B140211679C16E8E14933861
9EBE534AE4FEEFB2973321FEDC9312FC7AD698E5CBE04EE88F92D792C4C5351680E41B7B2F14
B1D64E87B1526E6BA3B574043EE86323F5C9474E885519C227CE057495EBF52DD9309876ADF2
3823EF453B208459667943FE9C05C9B605DB55536BFA40901EC9163419BF4E23CD235C1D3F95
EEAF516F8EB883246C6465FE50DEEF0FF83983A1BC9A46BE6D0C34B4C9CD8D7C1D6D67F76188
70AA1581C16D0B2DDF0CCE7685099C213AE7F1A65DF2F42F966950A382D349DF07F36E783FDA
DA674B36B922C5F02BBF5E6052BA31CB6DC2339C37C08004B27EAC01BE415D9FE2D634A5BC1F
F2109B662177427638B7D475ED64D0AA2A8CFADD98F5F8FE1A5070B927731DE0A9E300303F64
0FAB810DE6D3A3704C1287D12C00F10B3D43AB9BBAD6584F3447B3D26868D5FB3F7B875E0B46
45324A03344CF0B90C738B5B9D9471396FB1095618233A1B79725DFDA31C36CCC222CECC2A1C
3C0A566F0C1454184BBE599FF97F3A98FDB1D76D25F699342251A68128894DA9BBF44C46BFEC
5B28EAC2CE9B33EA9EDEF3B19FCE4C087F76AD820BBAF5F6179BBF19A70D122491BF4FEED2A7
ED13A7C0047C9CD0F693340E064A162F6D8F15BF384F1F06E38255EB964D89E2521A9BFDEF16
0CA6E16CF0FB103EB61AEB52A51BD998661C77E9DD04B3BDCB796B52D997CD8D10B7173C82E1
B5CB7E5C2B85E0AE8A1381FC6FA88B87723D28C7AAC8708C53CBC45CBFF99BB09FD0019B1818
7964CF83D02E0F866767596BB83053F8FB45E003CAF585EBD587199AC49858AAE16E65727704
BD1A2EE6B335DF79CDDFC583FDB9D089F2D5CCD770D49B62EE0E9D7D06A0D82DF50F664EDA60
F80F4335142BEAE8BCEB5339638952AD126C8CAD0C99D2CD2F64C9A24BFB9312DD0DB473A2DC
CEB40BD1717E84A01100FEB421F5E011C0191F53C896F2E1E0137169FA4F41F1C763C0CD42D0
E3E885945F093A70736AE9C90EC7D217014971233E72CE6AA07ECC77EBF236B4D6F4854EB11F
07309851530EB0E42396830EC7755EDD77E2BD7C482978BCFA7789D4A7FC7818577E055CCCA5
B915B0AA9F4F38594BD792F490A21F93E924B40A910B1621C9FE393EAD3706781FBA3B5EBA6E
3951872FD38325413EA3E3717F38BDA501DB435CB4BDEDC7A232425D8701E46D35B23A23A741
59860265D887B62BD5DC2A057BB4A8A63EC61B4123C9984C112B33CB4F83F9036136A8BC6DCE
58E79705F8521CB33614721A582D3DD6715D3151FC5DB35AA1D2EDD3C8513DE6BC6999CC6D18
2E39DDAC8FFAEF99D9F82C0DD8DB8C743D38121FE0F96152B3A563A59B0765914B1164BFC591
0441C03C7042F0CFE961629F556B7A96763528B6411076820B22019DD55036DC3553B7590A3F
5EF04E0111FEA9F52D6825296AF05627DB69030DFCDA50F8B52BBD8D2DB02D00A4EB3365B004
9FFF7B70FEF35A8B0EB0410F1AE537653587D1E487AF023071A35C2D08C3BD3DF2865E9A07FF
40EE6172961DC3BC8905CE3686AE02275374D93C9351E10F4705DE4F1E754B7A84D6D9AC80EC
ABF709AF6444F6FF65EC936D9E178C0743FE6888166BBF2F9F93F48795AE79BF755624759D82
59F29FC9F79DAF6F5461132FB0A0B2B8EDFA0754B8EAC9C57AF6950ED8782363801B31B42950
2140E1E86B49C7330E0FBA56B20CBA4E7461269A0A05AF9F025C11E08AB86FD4D61B260281AF
C52E032AEF79D842A62AF3C7C983378EC37937BE173B0E8C221FE7DCB1FF3DB85DBE2345CC6B
BCE70E69D3A1E230D1665D5C85271B422986CA1EF18C565AB85DAB6521AAA116450C17CBB572
DBFF1B12B21CBC9B0CBDD413D7DABD7ED00447A48729A7EDA44448C81E1D31DF66F4F4DE4997
582A155AB9928B940ABFB6388B363292AB2FA24E4A0C446FC5E530DB2D9705A1DB2F0AA527AC
6BFA03EA0F04E0170A9E748F683815433D472D3507A32167D75FC0AE65485C5354AB8004DACA
0B34A6FEEAE71E3B66AE281157C3DB6F64D5049B35A801D0026F40BEFA984C00B8839C19472D
A90D0385C08FC185D92DD4EF983ADA5D9B8DF60F9A12E5BD4A362103366895499C1ECC2A7062
BB6A30B028A837B7B25BF829D2ACC371D7D23CB02A13A3E018541BF3D1DC6FC4FF4BB2E87CB2
D48253D367567A0072E45716FF79D9CAF50D197B0AEF76CB681393B920EF82C27EF615C0DE3E
4D0620B8D06092E34CBB27B3C9195E7975C6E4852B94E83DBB79B72F6E25535FD79FE2EB5721
4113FF009636C3FBC5A961BA44F2B0A5FCD1D6219FBB2F79563695A342FC933F32B4F564C4B8
1A3485509E8CB56A63FDD92831ED410C0B9BD06A19FCA6DA50FCC77A30F97A86835DA30C38EE
E5AAAEBD6467164DA13925E3FEE0E63B827369DADDA1C78ABC6B7241756D6B3DD8C31F824C98
04430BBFBD4A9C602726BCFF18D42AC7995A7E9753CFD64E41B6F088A605C889B02D4D0791CB
351293BC460882BF05665B8A12B5FBBF117C917E810AD5EDD844C54344A4F4E4D9799ADEC010
CA19E4654DE5EFAE86365988305335D182CBC73666A75057D3449C7231A409FBFE6B289CA9E6
2B2313C5D8872BD012E6AC98A70683428BCE7478D78EE80CE2BFDF0728C0DCF94AD57FDC88B9
0C24F835DB1500D67FCC752465B3808BBD7DDA44B43375E4AE84904EDCF6D67522E273B443AE
4B6CC9B8BEBB3E5C76C397908A4F134CF3C0319323575354198CA25A02043F81F82B0CFA9BC7
9F5324D6AD8D73207F9D8831C0A107584D7855D58FE8C6D8000C179D292AB3CDA038B0E807C4
47DF7C69621538760F6DDA72A724E43B66692E4E48942813D6DD3D35A21F77FFD4CC545ED5AB
8F1510BBA813B67B42E652CFD4E8B150B3E74E8971FB52CA6BE89DCEA188AAA80212E59D24FE
60556F6C0EAFDD513F491DF5D040358AAA04881715AB0A31546FEF023830F0D5EE9269E63C4C
E27E622BA9D411DF43C8CFCC49FB1DFBC45423DD733102371041B8126AD1CE51FB50BD0CDD3E
92777B3ACF0555FB95C4C58F47A495029F0837711DACA3F939844E412A15C7784F32F170755D
7ED5C4D4E621F56231C51A5013BE43CF894A711916A3A3E1680E739540277A85F396A9282CE2
EE4668F049C5BA1ABEC5DFEFB8594500B5C244E0F9DFA4AA8EC593015A9FF2A784E39540616E
80358D37CADD0AC175648168BD804B92B27AEA47ED43F9D91E4610568B9D893B4D49B5424796
B7106D45D37F9CF422F568F3E4B047D299E7F4F53D56EF82502B3B963D915E2ED66F0B54E39E
A2819A9753414401325B4B6A1E00A4E7C958554C3D758F2C2368FAFC4833A4C8798EB52211E3
B8D02E2E26547DC1D7CA282C7ECBF4BFCBD2793AA24F2ABEB0BC62F73FA0603D6B5DD296E036
31BDA75CF5E7D2E5691914AFADF4D47ABBF2BB490F754FDBF68B0B12035230C1DBAC6CC9B654
62915CD6B60C29B087EAD9F7937B22650BDA56CD7DEB3171666E55D22499AE38C55B838026E9
52A426F6EEB97047FECFC88B0582F623A48CCAD4B7B39A76A39965CDB83C3D876D9D581104BF
200F41DD2C226EBEC838CA7C68A908CF25F9B3E180E80FFC4ECFD2A48026418858130B10349E
929BC21FC5C92957A656ECEE57D87996A1385BA481256F02B0923816A12E9DD5CBFD5F2BA665
74B485F752E12C87AC03026C5A9809D0DA43B3B6D09385449F41BF41BA570B1482F485254EB3
E9B34C8CEC6AA1A81F1471C7ABCAE054C1857FA74C3E054457F2E51695EE544C9B1F0521B9A2
7F5C7D02DFB8ECDA7DDC6E487FB6BDF909AF027B4BAA2200E9DE79DDB9799C3CB60BBF6152AF
3AC86EAB88DAA815AABBD699064F5664153DF872C3D0D4382FBCD378019FF7582F31DA865688
234536545418FA1ECFF9E109873EB4F07B6CEB947EA069AE87D5E9779B7584700BD8E66A69D7
7569B7B1BBEA1F0C562F156EA0F457DE21F6F91A114376453226B08C945939832EBA01C4E171
684A175DA0BD9BA8B550917F389D8D3D186576F384C126B1CE9DA8668E56F9CAD41F53F32D25
A020AA06B9EFDA8B20F61F0AD5BD1F1FB19800330F47593E863163125AC1C9226565389A76A8
E341768A41CE134FDDE3FB36CA0E815DB6FCDE3AC0A1FE462C5223D7EC1D7E7732015AFA510C
0B14B7585D3BA7105A032629C85724CC1BC148A8B3771672950F2EE2724B66DF4B54213A2D68
7C120FD343CE3D0BAD8179195BAC72FF4307497E4419F307E5A8FF00E8031BE82E672656B592
DF8420BC63D06375AA7ABC28EF1AA532D5FA221437047831F539BB3C6F0FB4B9AA6EB28B75E7
7269524C39598888413B07F12758F8E507286B044944779E57835781D1407E2D2E8A6BFB848B
2E428BA9B48EF59564588781BA8A1C6066BC83E4E13B28E428881F5687AB45724EF7E64D9865
8BD58331136559E5767E5DC6739FCD5F8B365E3BC637DE9F47DB647A0EED3B22E1E244BA35C7
6771702DE7A5B3AAF9247CC897DA22CB91CFE122BF26D9001278AA7A77FEA9D6156092C320E4
D3CF7359AB0B5AA837CC215C3A6C4540B098857EF0E80212E3A12FE8E63973BD766FD591BDC1
5B01573E3B32B2A323A5711383EDB50958439CF1DC7A5BBA5074529DD726A5AC18823F0E4D1B
5BD1FD5C9BBFB80381F09DBAD98CDD68FBDE21E0D20ADC41A7A6654C6A4599D98C4127073B22
A80BE263DF33DD6AE1F860D1F851B656B935BF0A65279A0256E72C984C96C900166B69F41A0D
3FED2C3F2142CD9BD13EB44048766AC87A8947A5B0E6C5FAB2E70203316C753B4B72BDDBEA60
D204163AB0BF212AAA58D5E01D8FA9692559EDE06180776C75D148DA9B67A0184F21F7C9FC5C
C3FFB5A703880E06B9B59DE77BB4894F10ABB3F309E50695E1A8B36225183DE6635FB76840EC
8C7CEB403F2BB5A0CDDDB3047B15B5CCE6A915E8D66A4AB91C3E2800815CF4FBDF0EF579A3F9
AC7E71EA5FDE7AB70B8B23B7B5BD6E666359B07CF90C8E584A4CA5B0B05E888C92464DF84C7E
FF52F028A47076B4C817931B750DC507892FDA0FE418F812789F1F14C5268A06992601119479
490785E523B651E7E95F96F25E90402FA9DE3D94E8EA30533C3D4C97D738A171496FE73C253D
DF2186C88134823034106D83FE21FEEB73C25BB797908A5D05DFD0D7FB96B5B2777243434EF3
EE70260898D7235566C2655D7BE879FCE0B20A545BCCC9F403409BA39D6348306EFC2A1A6F41
123A786A74D59FA90D6CE6247A55C8357B8E0E6399A9C353EF6D727F3A16E5F9CC2130A1D88C
D3009A9FA442F5FB872EAF382E858954DA4C4BF6003E0E624B02BBA9E725555333F42D00D91B
8D4751165370774DA389E8B426AF30EB14800C2B239000CB418D050A6FB7F239E900EE8C130A
72A0A708CFB02D83C69E67B0773FC690C451B248042D5A6F2FD16950FB6B82A6B29B3F13CDC7
6952A99AA935CFA17990B0A3C4FC2518A6F555522045E256A7E212D567D30752492ADCB1A23A
C886B1D2825C3CBF745CBF24D65969D7A8D8ED2490058E58BD40F6A1A66CBFBA8F575F7F1A74
BC9CD4E289F24949BE4C9B58CF7C9D3C5DEC695D1F8EE29DB1BC00B67DAF270F651993F0C860
F7F637305B3A5D83BA7DD2B151FA2314EBF2B681A125CA21A8882E7B8D1E6C28F66AF85C1FD0
4F45AEACA2CFB2B62887C0BE5384F302D7EB0F5D600D092D83E92A34B4AD7A86BFD7AE2B988A
39C0B62696C74C9D123091368F28C0E69B0B8E0B0C698B294861625A45A6B0091B59ECF75B63
53202D19EF405CD35998D81DAC6B9802D112A905B4D779495628D9B6CAB421A97022FC4417AF
25860D69453560F7246C0AD0797C61D0065C03EE4603D6160AD2AAE06A2AC8A564121A2CBEEC
C52A2B5C4B1D30A4FABF638767824460D3BC8F2D50C9C9E3A9539669BBDFE6BEF0AFCB33312B
D85578E1D63F8E632FD339610656C066B8331E5BC70C0737F99D260A84ED412E9B8DCE7B92BD
396CB50545D66743D6E1B1C3B9EA72BF8B5343D62DC5429591A23C0264D4C05AAF2C9DE6911B
16578A7FDDC8473F1D569E1EABB0C309FD68C5A4D3B6E57A7A4404F13F9F4D50C8E94303AA39
F51291AC71775C07A8C7F4F91D4625A8DF4766C4F24B72D41505BF5B4ABBDAFA9BA7FEBC1AA7
05CB6280CBCF72997B994BC4B7C23BF1BCDBF813C55E573157522C5C5B36CE08BD4B0EABCD0E
549BF280DE07BCDE736FC710E484B2D57347C813999C3C595A37C4DB869A0810D2479C8BF0C5
CC84D08B6E06F72D456FC879E92A8A828F7D156B98162C13EAF53DC8F41BFECD1886D65A3950
44C15B637D906496DC568A37658DF25749A74C45E65D462976421A4908075BF9BBD6D4316F98
B6B48CC033FFC6E1FB716984A4A2BD51A42D4309479D6081CD6C649A06299B32852E1387EFA4
F656E9BC0423C3B75FEE898DA0ECE4A77AB38FA1C03C302BFFECD97EC3E543009277D4B50DEB
D745800ECF888D1CC587BB87D14EF81B405CEE5E2842B5C960164DA5C35CA2562184F668DBC7
5D50C31ABCAAF42F9EF76CB5E6227EEEF95FC7948D5AA600419978479F834B1D4EF139EDCA66
E33082187C00986C9BAC74904AD28545B9AC43BFCBBE370C6DD0979EABBC0D823F2573C41E7E
738CF278B150D2CBEF5FB898347CD8B97361DDFEAF93CB2D1AFF6E408D8155EDE07155FBF7DD
5C4C8F20A30A97139E7DA2771554A1A505D7987C80F263C0ABCC2E0F85E6CCF3322143467FD3
3C3BF3FA30C2315FBF569303C852E6D5AEA82BEB5F5CD41FC6AC275B2ADDC6F04B6FBE98E7B9
AAD19EA2365FC5B3534014FDEEEA4B10AE0DAF95D30FF36FC3788535F69B616A8BA3FCE2A423
72DA0F9206B432876E9440F1F54C4A25994D9A194D2BC41B084BC4CCBAA3A38AE2B44798A2AF
DD62F23B7F4660E74C8215FDAB6A9D977FC63C2DB1BB88DF8D87F32A7BB51EB581A7DED74FE4
7422E320509D22B571259B89C205A9B15F48A6FEB2FCBF224DD73C243B6438F96DE9D706E9D9
F37224A6E8C9025D629DDFB4BFB161711D53A280390C95ABCB6219438D2FB2164C7F9F8DFB14
0F6FB945376F0EF45315F689873F3E57191A4C02AB8807CF5D5155972B749E6495DE07751747
CCD603953591D340050ECE1483CDD53E9162DFB3029AE3320E2085CA73F2C32E0A3829523D8A
AE6EDFB9D3F72A9B0E070EAE7E7C76615BFBD77BCE2591E8C84CBB9C045193D8E8199302B387
886D3BE83E5FD98489A8CD1623393269B6EFF39AAC78120CFE8128A0AB67111DE67775ED6653
3FD6302590D6E6A7F4B90C41713F6E8B4A85B26A346A7193FDC5680AC127674B3031B4A1427E
640BD7D78D676216FFC640E3B386597024535B7F332C858C6751DBAA8E8CF5596818CAB14D53
1C06910BAD5709B63FABE35F0871F546AB30528B0A554930F9873029A50F41503FFAA568150D
31E3A8167C633F612674FE322B997A0EA546A1D5F1B818DD547874C88C0CE9A8B8F12467709D
9305D4D374EAEACF6F88767FC703290FAA08BF899016AF3F41B042D46F18A90D14866D3F46E9
C68E08D4BACD24B00327A97DA567EF4F5587DDE44F9CAF1D01A2538A67B5BD738F2AE572DAE9
F212F04A7861EB792CB47E6FD6BF8D5F8F870312BECE2A9F331E7366088FA956A43E2B0F1F0F
8D6F0732E016EAC505F8A21E476422506335AE3BEA122D48C687BE5B6250D12749F9DF41FA9C
41BDBF364A3CFFFD13953673D391B72B16E180F36A6CFD7131512E7E0C9C56CF38274B10B6BB
E1010EB9B0731803FCB8A26EF5BE58C4B5D3C9F5043026AB6840E74ABE972A4285AC06A12E57
AB9548E473C327B4DAC55EBB5DF927CEE663112E1EFAFA35AABCDC9916F338A39CFC5265829C
7F5D71ACBFE25F2E065D1B9279371E1B4C31BBBA3139FC353C8557F39BEF8B84CB83BAF21F0C
36E803850F9C64CF825D5CD7C884D860A3474008F56E749257F180E65821D444D5CEAC2B33D3
2433C9C4AAA4CCC899EBA81175526D9C2F8BB4767CA308428071056FFAE5870A9824F487313F
CBA369200D124A3AA4F8F7180547F188597D56BCE5BEAA7F6B6A630131DAAD3E7387B1BF3E9D
60B048F304167AABFC120BE11AA0CD6CD8B207498ECAF428698E1DFBD176E9E1AE30C238A256
B2C35EA7E4972F45414BECF52BCE89419576FB77983E51BCDCD6596ED778FD5C7A8EC84A6EDB
D2260C6DF17736ED1DF258056C6C69FB6B09C329E5D0F9176A427060902986FF2E97789DDAB2
5E1F69650046D1802D1E50B8F2D89F7140DF465FC53E50F199A79D1E8483395AF8E42001BD3F
AE496F033ACC1EA8284BC2A43464E5BE89510F9C9BC1A56A6F50D9999B81B95F2BBDDCD5ABA6
DD34BFF7EAF4DEEE4A6310A0EFC7C20B584E3C3FB9DCD6F8F1004DB6D03EFDF47E42BF3F540B
AEFF3825BCABCB915B1F91F380C918239C389735AFC57366FDA35101199773D679E14B644B79
46FD5DED4FFBDBA068C6C6C7CC85F69E60861BD41105D7AD7A3BB92DC20B8BB3A35112F80749
17D3C04CABFB67C79D75DB1B85CEFEC44C306D11E32FAEBB63F770CDA0840B985FA7B9F08ECA
A312666BBF8BBFBD89C78C1EBBCFB917E78649E2EE58EAD0241558FEF4FC6722FB985F0485E2
11CBBC10C6FB89CB8DA570ADD3FF8CCEBE0C02FB2D535FC91407448F9EB04555CEACB647FD60
E9290BA38B428E23E6B75AFC5D5F7FFB4A8EC278CFE00F35F0E08A84C74F56AD7AB7B960129C
D2266F1A356465055723814A9CBD613FFE0B671F815D181C228E1471C99763306BF84EE99627
C77E93E65C01219021F54FF9D2667642CC784C6F7960740100DCD4417F38CA93F541FBD55E3B
1D2EFD8B7826A85F8080ACEB15F2BFD6F698914C280800BD02341E228999897ECD138D4A88F7
E1E48866B03EC48DCCCD0B0F8B60E71B867E55917EB65F470DE85053D505D1698DB217C6AE77
00FA75E39A58DE297FC6E4C694E572D0F36ED8D9D717BE5300D050DB55A7EFBBBBD6C780B6ED
04A27B322F78629AE194290F07EAF745F8FE1B506155F0C7EDF0331E04B9953F06991BD1F2B8
0668E712E216E76F0C22DAB11E6580D680002FC6C25F2FC361BAB4FFB6DCE8A087947B59A021
4789F0697507E7F64146D4AA1FAE53140764C8EB160A7E3223B7E0D1C2FA074EC466302FC620
E18F1EA78D131111F5AABBABAD48970BC5E896851C6F53F612BBBCFC2FF9711BA26A25992856
ABBDDF61C836063F597F88DBF32EEF24B9D1FB8AD817FAE948868FCE200D59A07BB32F3AC667
324F510BA2EC4B0254204153772AA4602FB73911B41AC4096893D087F15E220AFBD3B86DE7CC
E55C4AD3E3BF0DE8A912846DE30E30833F86FEAD7BA0A2B98A604783D578001F7D9B927F7C2C
A8C214C398787817912EDB24B546532EB469131E5364D3C4DB7FCE3E7ADD849B020E660988C4
BB550A8AC6466C95EF888052C0E7C2BC9F9B20045415975B0D6A8EF91B2A089351C2EFC56DCE
F7CCBF90AC1ADA126A46479FB0BDD7D11FFECA4C326D30642A3625FEE3EB6AE7BFE7CDE3799F
58C8A14B40C85570F05B08674EF226567422BB6F9BE5F43449F34F2AD87EEF382139C6E0AA37
B341BEE5A66C878372F202BBF036BDE89DDF75AE575A0135049BA3462880C8EC66CDA049063B
7A1A9327BC69B371F5D121F3C0394BD78C6B2AEEDF06883AF3E896EC2FCAECBCF90EA34AFA90
5AC2E2FDDA2EF3EA1E5077435EFD6C7A868328EC64878016AFE203E38BB0292E4B4F9236F1EB
0149EEDECD793990168451E40DD12FEB1DE4A446FF296DCA16820E5A58116D9DA05F5FE1CC31
BADFEC488CC28EE1F062CA00697CD7E08BAAC8FCBD8803B0A6B90140FBF1277DA15B35D1FC87
2F32F508B9C46CEAE91CF2010547A225E7B4B5FB1029C16FE88A4E4C4D8E06AEDCE8A3BC5661
CCB45C9A4C438419942BDF4FD4B828D99945B59E8BA6538D3CB51EB4BF7FA36127B0E34B7B62
C00240CCC6BFA0CAFD2B9B6D95ABEB4E64160CF4CB71532199DEE63CD63AD32678795CC35887
698757D40CAEF44F0ED9F0F52330B3DBF384E8B315A5126D4F1EEBE2E06B08C297FB212BE2A3
1B18DB141B80260A711066BC18229F5182135600871D28D6E64F74C97A38FF8A2588991B81F5
B88B8D471A4EDAB515458CC58EC8B44723C5731B7820631C1F4B762B612606E98EB915A7AB00
98D9AD135E7D73FBFEFE9A6A230644DF759DC7CB0A061D63D1746EC0210BE6FB850B35E26EDA
23D288CD3DAD6512F04DF3CF2D8DAB8FEDF4506EBB5489B088EAA3EA992C08238C8C613E360C
EB380B46F624B00B6E556D469FA1E71E0EC8D6A3A32BEFA0E8CB6759961D4DF19FB789E9B2E1
52768A5335CD599753B75DA3BEC20E6476C7B2CD37A3E7FDF2E7C896CDD05ABEF89F85A1648B
386AF088733EDA5C02D1661D562BE8655D44E2337865B5E7543A38F934D8333BC83F4E4E7593
B763FDE2C7E3AFFBEF58497F3F27DC1E906CD8DC37769E59A5ACCA08D02E6B1D857F9D1575D5
32798A1C9B1F14BF9D3039CDFBEB6B7D3D52597D0B7077BF7828E2EE1769128B7900F5FFEEF0
F6DE5041B3FE68069845B92C658708E821028CB4979B03077CF605740C6396DAB278B00CC420
14B5EF30CA0D6DC0371F605D5F098861B1F853C2B8EA6D379009EC2F4F7200B1C09B2F2D9FF2
36F9752C807EF1B789B7A905CABF94FFE29EBEB0F34D17F606819A6424208797F2EE0F0B921B
7C2F8561866BCBB4956E214FA20104343A266CCA27FA3469519CF6FE5F068967DEA731D73292
BE8695A55B856FC047F5032CE59900B23C3C9F802C7EAB3D980CD6B390F8CBB89000AA821BFF
BD31CBFE6512E14C662DE7C65A379FDBFAFE46067FF8277AF67A192F8BDE199DFF674877181E
544B903986AB8D43688AA147A2E7848B70061CFF8A378114CC0ECC01172B0397FAC4E7652228
A2079EA594956AF69F19F01A6B116F7B770A683035EE0AAF7AAED4A85C935DB4443576EBAB2D
40F72FFD49D1270DB6E8519DC0C28A907493AC68EA2FE722972174CCD02DB8D22171CCBB8E81
B0B98347D4F6FAB240CEB36AC9A513E75CA1EFB282AD9CF1838111EAF854E676E2A743369316
1F12C0A5D483FF09E6440F0AC969C6698F162BD9BB261372537044AA48A1E8FA450EC235B5D9
6073EA579394478F1677DFE60E80E285CD05A735F767D7075BC0192E3E8BE43C2C814BD91C36
8BBB684D9B302CC22BBF53A6DD2610CD6C62A1D605CB5C13334410B3601E382B3399570C0A90
893DE5DE99A3DE78B2AB3FCD9AD3E6B3AB0CEC0EA663EA9B18F5880F8D1E1D45E295C1B567E0
3091D81D5EF149986FD689BE603A08F5FA6D9E9F5402821FEB6F60DBE72814DF8676BA21D64F
5642EB75CC052618CECEE12C90129E1D749882704D585BE0DCABFDC168308E5CCC6CA660B4AD
5100206C10B5E81EC88D7BD2F3134C98DD387F9E41794E843EB92C117454D91684279CAD666C
A7A673869751813AF294CBC62E1A94404D72BC13D5A9D7F39C82E619DA0FABDD19FA0B9F0CF0
CB4929935C02CF78054D894EDF406D129FF88C1FF27E37F54FCC7227283B526DA50E38D87771
8900E4F5A4B887FFF330C36C2673DB7F7C428B862DFD85111FF3BEED720194A57F4D6E069148
852843558BBB29151300B5265ECAAA184747F0ED5D0B486086967CD7E1ABDAEF2DE57F115A33
EBB5D115766A46A75D1541D26D5A5A5C58619AF92E3952261C0205AFF1EEE7C2E8DF8108183E
8EAA1A262C0557E2FA5857EA572F42E8ED28B5AEDB2C781B7BED2DEE1F0C2F8173CF65D80BB8
00874C1F8A7450314CCD23E539129BEBD28DE472445669D746DED4816B19D00DEA53ECB954F6
96BDEF4FDE844726A222F8E7C62255EB3D114522F0208381D4F8A026D14D3D9FB3A31BAAABF6
29D556EF1610316A5CCA51E3E9B7329225F885030605C98443F7DD29BB451D23A9D42ECE00FD
8489AF8FD7C45A5B3AAD2A2EEFBC558A826401B94B4FD55E99DF488A9AC1CE32A00A2AEB3251
C9C3601FBCE0045C8F147598C13D4DC28A63B5FE9E3B1782380FC9D199065F68D9BB7C22CEC5
BA3AE6F36BF987280753D23311C16B955BF91A8DDBAF7B064838E0285028787674F4BF9743B7
9F0E0904CD9DC359E30DB46D764C9D6114F1057088B8186FD8B847081A1BEDF36599864044A5
34A3FF370EEFBCD540399E6F4B6DB15B934E29D0A8B7D6180907BFDF4C721DAADDD7C27DEEF1
176ABC0FE0BF9185B8579BB3D87B29E32497A201DC235B7EF1D9466FD1DEB6B7A209DEFB789D
29274F4E3A912130BEEA635C5F0D35D0BA5BE8FD98626267A23A4CA2462C69F23F0174A9F1BF
B174B51562B5D9AD561F0CB155C27A694B80EE209CC66F7635A1E3BBEB81F8ADE5EEC5034BE6
5A8BAB60178680BA9FAF4633728EAF3416A12063F5D5290E38A1FDFBD46D807A950A2D765080
3A1BED1AE36DE21C94FD0DC1D4DA0EAFBB92EB83AE39C859E3C0F2B1F9EB5365B80E5EF92B8B
2EF576A79BDEB549E1875F5BCD9271EFAF6DB65AFD0728FCC5B932EAEA322E4912FBEEC6F73C
BFE08729F9292F1BC676B22F00A0BCA196798F6C60544D84CE75FB5BD12452A076FF33160C01
E42B2D51AC453B4F8A56E68CCB630930409932F8DF2080AD687426E284E678B30DB11DD87750
0747A9AFCAB53D6A03BA2061266994FD28CA23A744C1375F3BDB1BE3E2806880F1919CBFEAAD
E49E18A90612E948E6A449821B1B0C6FA926D9B859048255936C8C23A0B8229068743E40DBAF
7177F5C674CA4CF32230160FC28186F33168D88A59F6B99FF0E59E311EAE5E61795415D998A4
6DF565CD47F5B91A075F5B5B7A9AB6EED6574A96261580C7D26FBD35CAC9CEF745440BEC9E77
74B853C3A40872EFEAE6929D431446055FF0F86E7D2CDD5EAB10B077A0926A3A03BA3086DD8C
38F050DB70F86F1BF1074D0E911620D639722A95E9590B0A966B00240D77C0D6F803DAC93FAF
FBFC911533E874CCBF9A0FE1B7C50899101EB7B59098CBE29850BC07E602ACD166EC8E87C6DA
D8F1F37246777347FCFCB71949865F81CBA083E4F46B798BE0EE8B1054C28627B2CBD31199E1
8AA55E58F59C374DC60049704B6942A0B33AD51990A29BFFC2ADA3ED1134F4795EDA616C5939
C7B0E4C93A3538BE06522BC9BB5EC1841DC2119672B04781B63685E8A9BD4044FDD258861D28
A88904450979EE2893782645D3E5C281C39E7B49D2D493C7D6165428BB549B4685AF21974B0F
4A2F3956D8B76CAEF8A7E6CB073A1967FD30BDBC42B3FFD3A7E76D5F0AFB91B3CB74635F9C40
7B8C4FD63A4205F4BB9FD4DB45695B21663FD6179888F94C18A93203201B844AAAD70D1D9A63
354CBC4FA3A8D9D954F1B7C275DCE0A66B97D504B339593603EF5467FDA4F0F4FF2252E6BCF2
7B83CF81F6F2B0CD8FC658D907E0CC7C20FA3F9AADED9C0A7D622560D2A1581A9C4AD8F8BD83
0A339EBED1C5ACAE292E042CD4B8ABB28370B3D678AD84CB130159CCFC1EA73766018224E0B6
89365E4EC57961328FEEEF809609658B450C48DA47D7010D19DC97EEC1E623C98A8D54AF3971
AAA4B05EBE0CBD35CCB61CA536C0ACB2DECB8124EEA8E1CB81221F5C1AAACF14EC8815B8D0FF
BBB41903CAAF7146D96C3B4D7E697AA97598290920CE6B33926A0948976873DF103EB9BF11B2
C515D2D461832BA65D1B85B769C4FA11F6EA91C53AA67C3816BE15627EACC09B3B1185CC9090
F273046AC75CE99591E4BEA64EF122116C719C976854519BCCB60DBAC5A59487F6E5817EAB1F
F595B11F3C3C78556887189C3AD4F36233B4780E74FAB9A9ABB38D1CFD8AEC1EB7735E5AE757
7ED107EE30129D460E1A1B2F7734DD3ED0CB68D5B717DF1A3E52A76AD22BF805C07535798B58
DCA4A2E03321F5BBF4DE5396D39786E720EABD32AE11E1BF5B5EC0C1DDC03EAD331A6B98A8AF
179A296C1A148B7B342182F36BA23944E40F81EF1D8A9D3709141788D2658E3A70CF383A5703
E246B9D8CA4439CA4C018E616ACC4C959778AE0FC3D316017D56ADF9F98B68B6EEA5043B4434
E0052B6FF7017700BE5D8E2A1F83855BA39E61D5A70B776F22A6EA498EFAA59701A9E05FE34B
8E9B98D9596D4C6F5656A41BCF947E682976A416C33AA86DE399457FEFC1033AE27308A2295A
5FBF24E7D24A12BB3DCC2BE0B473EA423129BC526D754A6DB7A9AD928D854BBEA29AE260BAB0
CF88A5133C90D4A4259788C43F5C835928707099C56E9159F5D0EC7C340A3D9E8E9E0E79172D
55279099DA92A9903FF7E38F4D123392D4E851454E99F310C1BD8521918FF245D84F201C7AEC
DBDC5F72BF8EC86AE9AEEB9743F0C1CEB65F30D4798D5E0172BED795D463A4790631E360AA6D
BA1EEA8A60ED9566965646EF257112994EAE9EB4C9EA7C5061E0DBB16E51CF38BDA8A9FDD02B
481866373BDBAAA9490A00CE26FEA28F98C7F46CFAA29A33A61EA0C8EB41033C0BF0BE8FAE8D
D4803B182F43934C85A7A1B2AF3D35C875947572ECE7B1A6A94B13A263749259AD9B32ECB1C1
D6E64F2F7C3B971ABBFD06A1CA42AC92699EE53F78B17EA23D02A04705A1F22797A6C3D7EFDE
AAC433D7C044CC8A7AFC0A1C389FAABF4B752E0F00F2B429EF866B9F5285DFDCA777CE73F451
D9CF857BADC5BBDB92C7042C824B13133178AC1E0E59141BE5E3FB044ACC4D2D535BAB4997BA
281DCA1EE21A4138A0AF466FA5B60AC4A023D76D9C5FC9275AC4AB227E61FBD627ADFA6EC5D2
87B5FA4EB292E2B60AACC2FF2612260C96EB062416064E88A0049901FFAAD2EFE2C174D1B741
CE70A450077B0B06A7B9F8E086FDCE9097E3DF277BFC57801F9A237B1B531305C0313797A2C6
20C0F80E29686B443E55C58EDF2D4B3EEFC60EDFFE555431F73C457013A2D6591F67982D3964
775035575BF64F794F632EB6B6C0AC964624A22117B5EFE90590A1D83833726CCEEE4D68E37B
7DE98609D64BE077CABEBD237F51CB9EC0D63B2EA994D2C9BAFC5DBAEEF21A98529843B728E9
C993FF0FC26F789A767A5E01E3294626B012E214A43169CD71D9F5A047B4EABB0E4C20F38EF6
BB3981A45F1F8EF0D3925ADF35F01FE2A9B70FDF3B1929B81C47D1F16CDE3D3390F0BE117BCF
0C1D68E83A7B0134FE414B9934B0AE40211A3805761C51C221F97809FA2270B9CB2AD544DEB2
8B89828BF20FCC3320F81A61E585713AF2611632CB84615FF4560A4DDB2930F14DAE14911C1C
6423FDFCF3FB7CCD5C0C0D7B54A1DCA69FCA11D4414FBAF9E6364B77478259A86BA449B51EC6
7FB176F2ED90E015114BB68E3270D04C1A3595789E7670925CABF4607EC94F9ABEC6883292DC
DE3145BDFE7F2AA0BDA1145A5A05B19FD7E8F8D2639E46E8A25ECB05D679B76390B6327211BA
D15DD6D7AA12C6DEA1CD5EE1132BC5A4558F1CCA36B8F6226106508108405AA786DFC0156DBB
9D99A8EDA030C7459A6D645101B40FD58E8A45EE948BF7A104E93A64FE1655A1C1B77EC475A5
D91677BD19E25D677F320282050D414A0870E13DFA6F54FD92582301B96CC34FBDCC52375079
AA1B622F3D609EB1F7025C8F0BC6B188385B5DAE1F4DD0A2E3E46F5BF7E0172332083E310142
E5F8BD35E4C10CE660B499ABC27AB349020A5BFF9BF15C988208948E08D9B9089C6B76AB81D5
F40B18E539CE0F01BD4CDC1ACB4D87C02387269C4E306CEE1A7D4081DA86B72CF10E5BAD7342
64B3A5298E7343C91E53BEA37575C30F83B7DE623A84C0EA98E8887A598288F1605CEB7402F2
377FAE5CACA5D11F76E36AEF07722C101E64D6DA41F87FC5679AAEF3EB288C8A90C885922496
6499D25EA2F89CAB8BEA63A76AB1CB80266CD857E11381D4715F17A7A56DC09498051A87FF13
0DE3738CF3FDB47B7FBC28653917A7A9165B90790E077407986E0B3ACB490F9BD084039BFB69
B3223BF49407964A5156263CE4B417EC1A6CDCEFBCDB08B3CF6951A61D55502853C6E2C87C4E
365803E8239C066CEA790808FBC2D1370953C5E11C97F562C9A6B06F4A50A63FFF9B61445EA6
799AC04080EB2E9D2DCF1D7B490E78FAD16FCB72BE91BFEFD7F53B7CFDCEFB7B15EF8F369480
927308B2079BF915B943AB6C03F73F599B7555391031FD72CDA5E7C92E183C7A449DED03590F
94FC41993ADA364ABFF5A8E5E769D6777BF87C243C4EF32F1974BA6DF452EF2931A056A37DC8
1CCCA6649A6BDCAF6040239108EDA32F699DCA196607F87BC055D6DE1A0BB2BF7609829E2FFD
670B2003BE0A829CFB3421FC98140C686A2804198AD1079EA5DAAA8C5F47668E059FB9743CE7
3A7DA9140F9E4B8902D5750F567CAAD66D4C1CF376F7592BF84A49E9636C5B7573A9A88F9DEB
49007DCF8453E70ED600C8726B2ADE59C2B7EDA2C9CE1CA0FA6132BCC399EB3D2F0215548FB3
4BA98C09ED8B7CFC8B01AC2E4FA96DFD64F04341AF7A10F5F9C96F6259DC084EF48A22506947
78AB9AC8BD2E5D5A9E0FA04C05390B3B6AD73035A5345A4CAB77DFC5E7D4F6F5F96CC1F71665
A3707347B25077847DBEB5E627622DBC61EC47B92C78581C0A9BC0F99C543589FFBE40A1CABD
689FF6475A5FAEB1370305B27303AB8B01DAD73109132653C9D2D7F8EAA3CF396E38979DD4DE
C150B7DD7DEE7C7397478CA43E666C57B65E3F315367C23D5458B44210CDAB221FBB0E812CB9
8754611A8CA5EF2433119C7D7CD7B9080A06E94B6B8D68E280595553375E7FD8AE876F715706
6FE3C531087F6F8E01833C9027D261B79C4D1C5E23AA30D2D762B55C7835216F93D195396A33
94D0A219968715B9E02F1418293C61F65C05929ACC7E1FA027FFFBAD7DB692C349977F67EFB3
439B626A0CF2A82A85D93D5D15C80BD04B598E71505E9656B1B32772BB690F5488CC04D0E434
AC256A60516656CBC242D7B70793FA36980B091DAAF2E5D6999E02A9BEDE533839F222601EF8
368A086E239BF04DBE84970D052E970013EC6E5F07E473D1D208D27095740592E8016C855EB6
A7B3B65EBCF32CE75DAE539E6F9DFAD9718B6064736165B4CA962E201C98473175E87E75C021
7326548B7D266CD7DDDD98F86792D3D1412376B025642C8333F4D67DA08782D7E26086D19170
CC70F0C7A03C7B989A7C7258BF57888A4BD28C0C9BD392E7933796757C8137E0E444CAB2E96F
32957458C92BCB359C93F94F715CC5B11A9B4B0EC9D0151593CCA95501614B12D5BC9497D8AA
12E1FDF5D6FFD5591776A19E2151F5923019F6C432FD3541085E73AB7608D6EA34850C7A19B8
FE794AA081D5075D32D89392641652942B1404B1C8993A0BD82E6A13E79C0B206317F32503AE
524261359BBF398F9F7028E14A6E9A9BE4C7D99943D015AAF9275C7ACFBDFEBE11938D388621
9861A9553C800061AE7A905A620816E5E1F316ED91870EF58F314EEED30634B7EB46B794036E
E268FFA982C1B3D6AF4242AA2E6FC066B77D24A4B7432B1FD1107D8B6F4BD6E639B627516D9E
8361F98511273B2B759096459C0889AE3DA1C78E98ABD7FBCAF67DBE6CAF2E2DEBBC184C6971
0B667815823C1B54EC68FA1AD1B4F4F2D1C689E0DA12D854BF28B4CE38AEFD9CFC2ED18F438C
1EA53750C4D41471F7F96EDB13D5F5259C0A935FD08C8B4801E04599DD690D4605D33729D6D6
99D725DB46087B935E4BDC8C56151DB005A5F88A7596E8B447000422764B5450B30F219EB33B
1967FFE2293EC403F2959CF329745A27A5D0560F60F387987E9F696E9A3D2A4393AFF6A523F1
C73207816671E7B18C2B8608D036124FBEAB9FFB99B29DC6EE1EA7698E7B3D7B3AE9B5057905
64D8BEC7C1A5B456384793EEC1750C4CE41B03AB776B1ADD57D0DA2D31098DE59AC1E2552BD8
872E5D7B5D7697A5C996B32696327A6AC17FCF3E336294599CE16FC98707EB49519C8CC787FC
991638FFF960D06157A5B24443E52780943F59A96E57991DA7AEEACEE0736B333D5FA0D35743
CF9CDE163F11A75675CA88C5A1414F2CB23DF8F3447D57CFFC9744BDCB05C0A2D950EA485424
461DEB047E73FAE2108DDA15B727A65995F6E42DB268397B36B76177BD9DD4C0F43C2BF9616E
EDDD4E6AA30EAA4622AE9EEDD93747C043487FAF1433D543761592914BF1A5ACEB8A41DFD169
09CFC4404FD04E92B66B733E6163DC3F1E3681F1E3D48D5ED794BB9AC003F61EFDE2DE0CECB8
B4784D72B7AD4D3CDEB75EED0249E69DBCD066398F5987047ACEA08C3DF2E49098972A8576E1
045359338C768FB0FC4390EB5606E1548BE05DE1DBCDB4F2F7BC4C0684DC1D8C324B0D34DF21
CA17106CBF09E84C96C7E7BD6A13C52260FA167865C5B429C6F6890BEC6ED4A7E9807DE85363
DF1E88ED3CF0C92FDFD8569211A0BB484E17D0F2831D3F646A8BBFC0A5436B17FA018E402EFA
A19008B69DFB2BF5707B33E769B1D50B95AF925FF24D8F0A4C033480A1D3962A199642714F3F
DDA2D5D59C2E40928CF677AB3D1C260D651EFCDF6410E25E12D063EF7BEC712F11A99A5FDAA6
B23F7C9AD808FFAC7FFD3FF0FE2B30ACCB8C06D2B98C57EB277A5FDBA73F4B97D2B41A2CED3F
9D6F40978896B826E1049BE936ABAD91A1EF844A1B2EDC06D62F031430004189FE3B7FAE1FA3
D80159C5EE09DF7BE4FBE869F36D78A94F013DF3CF132EDD944DEEB5C388BDC8D9C0F8F72D96
0A86237C337BA89D4A6E3A44BECF914CA1F55BB53FFBC1816989B75E4EFD9E5CB03DCFC835F0
EBAD46D3A8F308423636C05323D182DA21D7D58925F01BDE921B53891B7445039FED1FB5EE26
646BED420956207644359FD447381F32B9BBBC9DCCA50CF65B4E71CC0A16EBA3DB740F222AD9
5E35AA0DAD90287B742585719BEEC10E88AA517835EFAC894A90609A972EF2F653CC0BBAD042
D527F28DFBF851B894DAF35231514E6326C7DF23E0783967CA51D5B2F69EE402BF3B90F37712
47E05E99892E58056BBA257A00F44C4A8F7E0896DFEF3316A049A7E58B731FD8C0CD8ED7FB00
FAD61D6E230E309AC619934120C7B68B07796AA28AC7BAB19516BF522F262A348E8C9475889C
99F2EAC640C16F583C6CDA711E8C739C93FC1A0BD1FED1C58B57BC7A8E21D853895B98859293
191F9F05B6CE7081800CFB6CF4B69292CD3E4EB8C7AA6C04112FA0D2F6D9E6DA825464CFC652
B411069888667F3D23C5269B09580AFC76FC99B916D072564F803CDCB68C35E668B1533C8A7D
3C0FC6191E1F1027D0F12ECE33F1B71EA3C7C787549993F6D5C26ABC0641A4BD7B0AF78E89B0
50579D3F6744DA0CD2C9F7991F9E271ECCBDD44491C85B2254890AEC89A053C4A0EA9CA0EA1E
174EC96F6B4BC368BA0A1DDC09470992D20378F4C4B8766B60CC73A0974683850A894DE7C6C3
BCDE51E3B60C047BB0049D56E06D1B018DCC4271896A1E28AC31814E92E8D4E203366882846C
FAA13A0388AF88EB56346266A1D33C3E7A12E35BFCB2207759DF37BC413BD0520607C25EA9CC
B0CBF23FDDAF588741B270866A20247B49CE4109BFCA26F1EFA0FB43E3209D49BC51242C5B17
DD861A2ABDF66F3EA6EC09AF878184DAA3D2B8E852C21406662324D19D17CC55AD810B7192E5
79C92AA2FB2C5F703ACF30E866E68F64D1103EFD25C6490DC4115285C3F90E515DB5D052C40F
422EB95BD1AB8FEFBF4348BBDFF3A66C3E71E9CE33DEB9D300C1836B95F196C2B2ADA2A20A5E
1F54F0DFE51303ABCA0E33430207A00A54C875B22DFF86B7C390AF694769468C0D2E091787B9
7DDA2CB081FEDE7C54BD9AD8B5149E5030E1D365FE83CB6AF5C042BEF4EA62131EAF204C11CD
A6D76C2F23E426EE9F870E9014996DEE1463EA6E61476E8190ADB7EC6254F0D70845AA6D7C9C
379741264FCFB5D8BA069D9E3D8AFF77E2DFC9F8BEE5001E2AE83C65577D369CE7DAFE8658A3
CA24D07F1D1A8773802ED315116A8244AB9B59850B715A5152BE9267F5299389CA43FB84B89D
8FA075926BB737DA8B120677F405FA6E8AC5FE4D14D9000146C6DA3D67983D68F22A467ADDCB
9DD26856F9E7296C2C276ED4EAB994ECE278A674AC85C97A4264787DF8F63862719AA348E77E
3EB7FE7ED0FDAB950FD29EEFA3E132A6E261652281C955B7983E04F6864F0C3ECDAE17FDCA28
0B452CB572F7A86D65EED57A0ED23AD81F4524A8B5200D5C55EB6D6702084339455BD41070D1
1C261B14DFC654ACEA9398A94E42451F694443F374C5222838280828514192EC2067D6DE1C52
E6BF72BF87DF74E8B1A36E620119B92D764D7CDFF9A7ECAA7F44DB36C0145B3DCEA1623364AE
C16E1494B0AFF12B335813C87B73462DC4D59468A132226E1CA5976110E86C95AE03AF062BB2
6DB48161C902A7D348E80E0DE463BDF13177AF952627B8C2AEB955885EB576CD411F35A076A2
2025E085E4F69D26429C698C59B651947EC4110189DCA1B00C4438383B1EB5EF8344FCE1CAD8
1299DCEF9640D1D41F561F233770763163A3CA42DBF24516280570C58F358CF39D01FF4F43A7
E8E4A8C4734F68985F1AD21B88650E5ACA15C949C681003543DA0C82A27E0C509B32EF7D1A8E
511E13DA07D91DCB51F722FF97332FDB069D8317DF032A7FA861500A83FAF0471B099642324F
214E358FCF0C3F144B85D20E9B4825F9517A0C7BB492C8237936B0CA5241F9D7EB8C4521CEC4
C0B343F57FEBD4B1914EF3DD7FA034546831A3BE0F65E8744850ED8E4E6CC29627B4A9560B97
89E0A9438337DE8189BA1CE8EFEEE2AFDB6BD59521E8038E39557EA61FDE9F7097A0FB6F09EF
223192F6B6478521E83D9B250F39A96EB7C23B8B30108DCE6A8F0D0FFDFC5DA846217E7E5473
209CF988F9D96D09A9DCEE3496AFCC10795DDACCCB933CEF06E521ABD65EA68109D9192B0C7B
F20E664735D7148D3D71655EEAB98B08B1420760A50DEFE419106DE6AAE51620264CC330923A
CE057116BF383DADDA37EBDACDA6040B36BF2F8D7EF85E2F4A01059728ACB3545BA5062E9DE7
2F65C8044338E9A5F8AE4D04FF514505A02C4DBD438146ED08411E7944DCEE323FF05A274148
CAE552925AF5934BE0DA2B0CB6E55FE25B46140BFF750FEFF9BE88D5E4DB60D60118F4D8C1A0
DF9A19B5F3D34EEF6A416C67F7350CBF0E6DED5FD33048201A7743F15A484F7E95CC75658596
4BB1B8060BD3505D5A64F76FA7EC82FC90C8C638395CDA5C79A0A16366D9C3230E4BE4457B02
210AE0021CF4FC2C144A7825489AE9665E74DF04931F27AF9C4B6178E5D4E11068C5F7F1E46E
1282A461EDD40ADBDA25715C0F99BD519523AC915038192E0EA059F8E07908B89BD943B49ABF
543B8FCECF20504D41326A4AFD645955D304A59CBB8F986D4D7FA3021D9BD18D82B298FB5906
9377E64BB0D3099437C3EB22122E6513527740B269C21A324FF4B5A6001A8181F6BD73291DE4
8D56597B6F4CF41DFC43ADC4624B816AE6C8FA6472A979FD62C37660DB3F0BA28C0DEF8B1DB3
067A319A69C8B855A9579E72F9E7F06D96A5301F8DA48AC23630788BDAC63A15412A17A2B3AE
7A489CC44675E2F770950F688923B37555ED2A92AE45FE74002A37E272584876224209730A98
B3BE82893F63480D6F8690FB7453C5CE3086520B5C459036411AC45645847857BC20BB949AD5
A2C4BDC714A6F171E46654E64BC9B2F3C95304D3E4B4FCD88A7DC4443C08C52EC3486C0B12F4
0F746A73670D0A0FCAAB8DDD4C2161F921E11031DE1655CF95AA9FFB177E854C968D6964BB6B
A089ACB98FE97AF230537AC1B3BD2A833AC2E742E078712C2F4581DDF6F611EE72DF7488A06D
8C0A12BDAB940FD5BB06EED1BFA6F70124A36AB5EB339E8FAE787FB70CB9B7F28EA3F9B5EAC0
5B710ED72BC79B8CAAD70C6A341A237B3A5A7E96AAB3F1031F02C55F36CE6374EFB15931D4B8
5FD421FB6A5AE1E46241BB39F1F8EC55005E0DF94493A92B9D3846FF9728F078004C5FA7A412
AD928CE9C7BB1DFADAECB71DAAC9B364F4B0CC1648A56BD720B992047DDC76540F9ED4DA9C62
51E0C1B9F40DCA3F8556470264CC4A3C6C81F20F99B9529F53A5397A6FFC77C4AD9EA475BB0D
99C862E6CBCA814D653DA56260D5F5EFB1DB68EF4D062E0C0F205D85DCE387EFC1876C82E402
DA582AEB1524BCB8380708346D6C347B768C69647E321A52B277B1C3CE4B64C6FDC8C0D43271
85DA39645073EF13EC6771329D10FCE3F90D471A1DB218825AD650622EA15BD2EADA732E81F3
B83961B067BE1AFB04C17F4C787B7CEE1C87BCAD802A0ACC06E94BE53F9D6F40978896B83DC3
56F701CFEC77E05C194A3020B8361C5C2BC082881C6D8DFEC32EA1AB31C1F1B442A6FCA5C579
0DA9683338E808EA60D5873E92B9BBAA8F2FD5893ADFD129832779D9A9AEDED64E170BBDF09C
82A8B893668C66250844BC4ECA1FF34161942242EEC60A24CA6ACF819EC872080D0F99120AE2
D6DC6644D58094D57EF7CBC0F3015F342F9E5E65FCC9D848B3C502EA1B9DD81B0FC4BDF18CE6
592B6C422138F9C2F42893165E9E84FACF6A0B47AE3412E6E82E5E1EC209E553BB225C0D458C
BE8D4D0E5BAB0FEBB77B020D97EB798282EBFAF0D4DB579AC5633685BD005ADFD649E0361BD8
FFE5621732F58DFBB6CC3F3BF651E4F3AA338BF9D4D11794BC595931B2EC29C96A7279E0CF2C
1D5815128B1C15E324A76DC31EC1B4B70F0332A05EDBBE01F9AC174FC0E2C60902ADAEF17480
AA8DC275DA0F0191ED152D844584451F02F13856079252A45EBF2DF20AA444B8E28D6388A439
F679D3495C402C4B9883BBDA5703957DE939C70596CD328D6C29594F90B681DA7A995C98842B
2D95923B38FCA0335B7CF85F98FAC664FF28E4C0BE46B30E175B40F7D0E0EB719D3A24836BB9
103FD7B8C55916A183B863E4C4740F1ADAAC643878DC80CA281F5129C69AF6ABDA67DDCB5703
E9A434CC277E5E7716696F76EC41134CA85995A1E251B886A6EF0C0EC6E3F1E0E4666ABF049C
9E0F0CA7EA1B3905941FBE152C67D202037E16DEB6AA05D5BAB3E82ACDA8EB0B7229FAE8229C
5C1A89F78F130B12028F2252F24E9BAA884C767D21934B6A655972CA9DF972A503E35716BD7A
D4A45F8EAAB8B5EACEA7D389BB4F9B75BFA039119E14B3153A4BD0A0CB53DE7A2C572B1A4121
FEDA3AE58F9CAB9B3180C58FA4D880A2D2ED7F8F301FB130F6314F167F22048C48BADCB424FE
5E3B8FCCC209AB21CCF4CF407CD582E00C9978A8389095E107C715EAA778A251C0B3143C9B47
5333D1D69AA3D429413195CC56EA0ED532C7DA6B5E8080A21C8EF7220B7773AFF47CF2AAD309
513F50432570C2A0C5F46FC4F46C349BB44D46021EF1041202A0B4AACC98C06F71C282DF84C1
6977B9374B0E26E09D546984904F0252B2BBF8CE339E14835B177109541334F8B7D5E3D6B209
FA38AE1A5A09EC40FB62D5574E35FE4AAB34BE91014A0BABDF37B23657A4B9C48BDC489ABB86
803F090446B10DA82B4EBECE61BFCFF9CF3F52AA04B0A1CA2D59E0C78028AA98F1851A47F58A
389B9DA48E6F0EA0D7E36A6E168D9FE78B5A4721DCBEBCC80A8BA4422EA31B8494394878EAE2
8970CDB4117398C69FD35457FF6D9400AA6C045E748C63B811C711FAFC6FD09F53DBF95D2AD3
08B51B721AE1D672EC62EAD76C76517D2E48D379894CC6333BA695D772799595EE968C6537E1
236823569689EFDDA581123470AE9031BA3FB0F87ECEC265B0A81F04CA6190B7BB3F22E2EABB
19D1276B0510D8ABF7EB354F4AF23D94AE51CDDE1080534BDB0167A60A2F4C372A8527D781E9
A4A057F5B9BE19BE457D3610F29B5532DE7B95BCC24C6215D98070FC885CB2ED68872030FDF2
045701F25077708C25C88829D5BB5BFDBD9C9E48659B4FBE3D052041145FA7E00BAFAE4F973C
EE66855BB43CC964EF859C11B8A3DE069C7DE57339C781A409DF2FDF1E7AC6DE9BDABB037FB5
C22010D11112C00388BCCF0C2139B10ABEEACA26C60ADFE01125EEBE77D60656EA1239CE1AC3
05CCB3A4E8B038F8FCFE203AF918B7DEB95D058F0249C046BD195582853A504B6451C7310E19
3F40A8274B88E24C841A90FED97B19F82DDA1E090EFE032665977097AF4E90BC272FE821172E
F0AB1F78BF61A278E0C8EBE1C3F393A5C452BA4FD85A40FD6452FBDF9650BDCC52A5C8E07D20
AEE04B15BB73758BFE5E2267C8CF59ABDC30CF9725C7B76F05E522E15A6ADAF335B8A95A9B1D
B803F8D011B05BBD1CCB93AE3F56B4BE49DE52321595DB2FC460BE87D0B6A4C81E505318A3B1
B41CD2FE8749C3066A4CEAF98F4DBA74A6EEE272F99A79A948D05E5594DC7E8A82F09841B332
F27BF2BE61100D344783B75A8C52C3292CDC10DCDFF58D1057EFE0CAA60432FB850B0548FA12
189DD4E5A4A6623966BF4F5A4C44CF6D75ED44640CCD4119BADA77928C049678BD8BCA01BD19
17722CD9F99BCDE5FB0032DA09FC6318A9CD8E5516FAFA9E50CF12993F63477EBB130951188D
8389B07ED2EE9551B4949D1C57E70F6576A2B2690C920648DC36A30C2091998BD6C1BF25FA10
C3986795F14514D36EB2B0D2BFA13425144485A7E23E8880030C3B415E7BD19BBBFE19D2A148
103D297CBCC5FAC84A4656B7099887BFAE7C1D7C3624E94A635C5DFD282CFC4CFF38F2C320F5
53735FFB5A9F254E7312A60B0534313A4ED795D857899DA870F3B80FFB80095202D4ACCC2F68
7D6E87FF0C0B9F37E5680921C8C2269AAA8389DC8865FB6713A0C5652A5DCEF5C49B5E688D8C
37BB01D3BCF163DECEC4CAC3AB6169B46ADC0C3B79F9F07FB0A5B4AB5EF7A5C94BAFB9D46FDD
82B69A948AB97FFC2158F3BE4188F944C8DB3475A796EB0412D37FAE03D6035D543B90A9AE73
C84702086556DE7729F8C3160A42630263A3A34FF43BE238423B6E0981B4749152624842F94A
19A2CECEBF255069739C5C2090FDCF4B31DD084AA3B354DA9A74DC6EDF5CDA14F78DD0F20FDB
5E15BA12E4A2FE9359FD2383EE3A49BA68643DBEF7DD0E331AA1C655A0CDB4FCECB6CC313349
2A35FF579E8920923CEA20FDDF3A174028CBB2A2E29AE917257E63B2BEABF6AD62EB1039CBFE
AE381750FC60C1C200FF420F18567DEA590E9741AB7B1592C8BB275F3A912466CB17F643F794
FF59F3474F823549D40D69C6AF4F69C260574B1771A47EC3B3DF9D15ED705854367FB6E8D3B7
08799C0A3A60F2E451EC5583159338235871BA4146D82AF4DC0DEFCDAD43D72E371C420C3703
EBE8943AF4FB74CB41A5CA88B1157EF1468F93BDBAD001595F5FF418F703853D1B2A431FBB7B
F6A6A91E60C034CE49FC76E715BBFBFC007AC5128EE4F87316EDAA8B3690037E4D8DC5E0F8D8
5ED533DCE4A566B66B6ECC4C3A6646CA3FBC504A59CCFA4CF0E2A8D73517D5F012E546EF1713
6D6EACBB8B90782AA9EA98D64AC140528E062FE81E39B9D1FC9F22222A9DA88BDFA97168230F
39570DA75015C2DEA4BC8A3F586096D9D7E48A701925889E1628605CD4AC5136DBD91A13609C
827A89C0DC1F4A6B57C9A3647AB2FCF8567171EBD11B555009FD99B10BE66BF825D25B5D62BE
8CAC6E2904B483AD38267B213CFD345327D4A9F893A0A93DCFD0E27C6456055964D6B940506D
B959D96211761560B4941A59E112CE0E188B210FD945F58150320707949032F8674E1C3DBD2C
5E1965B0DE35C599315030958FFC19A927198E8389EE89B8EEE1B6B5F92E3C57B9D815394752
B6584F3F3985654A1CA0D21DC55B8C6D9FE0803B26D829C76F30EB4E3F8B181E5E7DA313B810
B03B95AEA0D28D6A0F247C0744E1AB82099345F5E575CB976DCEAE1BC602D5A3CCD7C25A2DE7
F275AF4B6D87F08B98C2830B13DE37AAB632D4569E2BB21050076E8902DCF0D4A7844E044966
3520AD2CE041BBBE64E832B57B6EED77E7C975CA7D1BA98D166EFC9682928E211F97967CE1F9
BFF5FFB51B52561062C1D205B705792DACFACC5A0D116E8CB4C46D3EF60EA9B3921E1193A47B
EA4871032BC943C1F92F78DCFF3994C177B1D129C3CE4819901B1141DCE2CBEC3EEFFC37B0A8
7A82E4C7170BA8EA75E662F535674205CE3E279C7D0E4B277B4CCF9FA977315DA6071AF1AACC
EE10725B01B02A7BBF983537DED5B65D8FD0517A57DB38EB83D61F1217ADE26690071C261257
DB07A51EADDA3CD1401DF855BB1C64417799ACC8A848DF64780963C13899DD35FDC407AAE3A8
1C54FB41F1A2C6B34BFFC16C0A0EAA222A56C59E0AB1193F6EC6B2C0852336D2D8CEE3DFC7C0
53751B854C935BB8D21D32E1ADA0B48B5945411612ACE856CE0E861474B4024657C497589195
1DFF710D7511FAAEB6BAD63EC3F36041FF5516203B6B2C5ABFEB00994AE40084148FF1683F78
0C56DBA09E1BE127112F4468C6AD34AC70285BCED586977174F13F012CB63842D3FFA0AB4CDB
EC99C10E33A1F15D1CAF7E69B969177FE94D14189B306A4FADD37522BC9340C375CA229686FC
6800C758EF43FFC6779337C6284333D73B19A979B12835781A00D158951EF761139D593BB9AD
1B69347DEC050360B7DFF66653416DEF71343D37CAA1FF34BFA57BD015A0CB9B844383E54990
E807F62649B36EF540CE22572BD22E9FE861C6BA4B26C339B3EAC2A2828573640B2250CA0CE7
439A8BF0FAA12AA85964AD6E6BBC603EA095DC4FB48CF077FF6390864A1B8E6C3AC0F8223C53
46A490E0CFF95248DCA332037B0C56FED60D02D966FDB7BE9C72249ADB192173DC0FC8963C9E
CB37E4EB31159FAD1D44896C4D532A1851E57833ACAA39A3A01E73AC57A909B9FF03E3118E1D
38F70FD37F52264BA2A8150409ED58177A1628730B36CB808217091F502312DF9A6E1B450752
527B66A5D01AA1E9DBBE8B3E1358916AEADA20B514D10D3C78603762B6C1F7BB4750FD851569
92D019D4590AF813776D915A13C497F419A2B42B74BBAC4E766E8D24F5BA68973AF85731B042
FDEE46F4555A566BE74943CD79425E7BFC09B47E4F424403B407AAF848806500606AFFDD5F2C
B21EC7D7CA81FF8E9BE1A977B0F6005FCA14418AD859536453D764436DCCA07C9F4D050C65BD
E3608CF9D32EE20E6E39BE92EE05D7732C59AC7095AFCF2A67239176E8EE63E3F9AEFE75DCB3
E066625DD695ADB5A1E27B6A1B2D8ABF7FABE42C82CB00728BA9F84545295138B5509DAE44C8
9BAFB03FF3A19F56C657A4A3A55C73F4BC1AA22D2BD4F2C0BC2D9F061C21EF49B9D65FFEB73D
72EE7E4EC1D5359F9EE57B9B6E5DB01AA6427893B738F0536F0A7BDE1B5EDD055CE8448096F1
77EA134C4705AB7DE088C0AEBB10868A2CBDCCAD3247216D8F96EBD87CEC606464E79A267D44
7267BD42B937618AB6D73507AE563655D412DFBEC9E4E8DC0B7F2CBC159708B04D8AD7C968FE
DF8591E1714ADEB638DB46DCCB79558C361391E2E57AA75D100C724E622148E269E8854D700E
C89BAFC0DC0C16AA85A6021DBEEA2D9C38E30D1B3FF82A8A7D2E72AEC1C2A2A32C1A25EC7DC6
EEB210ED6E919A84019D369D78790C30A03F3CCA481878B4A7443C2EB5E812587440CAAB5AD4
6EAEA42AD1C86383BF832817AE0EF873C8CF2AE35DAF6E1AE1093448805AD7A613580D6DDD1B
336B3024873B806EAD749840538DFC9B18668B15A76F1982B6F58BE42E9B342F869EF92DEFF8
8F636FAB490E3313755C233E8D2433FF024318F87184361CE55CDB7DD0CD1449602AD3B9C4CA
DA51700DFB232BBAA27BE151621FEC9AFFBAD149350B51580BFC493E157A5A00FF364F643FA1
E93F84C36AD023E9272CC4473A37CAD50693985966EDA44FBA58BF31FB14279EEBBCB5CF96F8
4D4DF1E8120D857F09C3F934AFA923EA4E8E3BA4D78AC901FDA3078F656F65D15383580CB96E
18D6FD80F2D20B1BC5E9C2C89D9C499EBC828209475F3566CB2134D16D957B443954D843C875
65EE463976673CFC62530AE17E0EFE6571C62DEFA448F79FBCA17B36EEE9E90C174AFBD10E23
1936F9A9CCE9F5F181DF77097DBC449638E4F5075931668BB63FA8AD8AD51B3B20044165CFA3
ACB0A8FB3C6D2C1BC6D328FB63EC532F5F8F7F9EF17AE2F12AC6D65C9091A07A5F69E87E15E6
5A1E3D15E90DA58A71D22CD9CE507E999AF6A608C46A228D8BA39A38E0DD96B4071208F6623D
BEE113639E1B74F8FAB77B622E219F0C3C9E9152C70296D4BFAC163ED0DB3EF50838867471FF
266697E96AA6CE7A6C58331B1DA849619646B14A25BB4078FD3EF0286C4CED8DBA5E45E64C35
22E82A84B2A4727786EB6D106EBB15CEC92DB414C06A294880993C68B6370D2138C27A5E705A
9DCB4D00073B4E2A4E49BDEC1F5574530AF8E82E6A5E2D6AC36E1D88FCA260DA00FF10648F78
D1842EA8939618B688473F49737C64BEC5B3F05D73B569ECD428145D726D463434D923A1CBB0
7F05A8EB9C6B23ED74D828B98FDC4A0F5EDB12F2DEBB361A70EF7743C0C5B1C770BFDB07A854
C708830857D9247B05CE89133582686EB8F71B16EF834CDCD66656BC360083FBF2A205ACED56
0F2917EBBA994EEF69CF2EFC8AF5ACE37FB3298611862CFDD0AD620E6AEF07E501D923E867B6
1600770E2CD443C30B9154C3F3920BD5CD975FE97FC8952889E248EE28B5DB749F1B01BA5919
9AC10A0766E2605B20082AACDD662548F0D8B554898FE5FAE77AD1EFB7E142CF2D17546C8E96
033B4FA92E94E846B3E797F87703F5756C8FE0F79C8CE5C19741281135FF5C76AC0DEB3569FB
C9E945FA5A97D27FCC7BDACBD2350B76802BE60B067B85ECBCFB10175777E50AAC34611F1B21
44453EE4696DB0A52C14BCB5224D0406024278AE84E28EE14E98C191F703047D56B6B24B9AEB
7878A79AA4257E44CAA5BC38838D3836ED1B05A426AC0A3381E730565BA15C613A51AB0E3998
102BC759479BF1336201EAB748517CC71B106C093E2DB596CDCDC40FC44EA0519EDCAECBC8C1
1F527EBF3DC7D048541571E27A523F57094E950C96B3A99446E31CD6176B692F09D82A442FBE
ADFFB85C4013C6A598577EAF9181765268AA028DC8C5B31FD6A0E8A8C48F6AC778E4E28588C5
C89B72695AF8AEA2BF7797DFE3989F1476A964CF1FAFA73E5BD4D9B341C1467D72F3EA6A5615
ED66172F58463C5BECA672E4AD37CDA410A341449871AB157F0467ADA1698D7DD9B2644983C3
722685AA1156727A1F7CA1395DC52378083D5A40C471615E419336B942AE41B0FC0F0077A0C0
1BFB3EC0B19EC128F9D36A51D8563705C415D61BA60F13708E9B5EF86134080EACA3397B9379
E6EB0694650B502B0B425D32A4B4E99111B7FAB6B11892D01F425BC4597322F6536D94BF3890
90585DF59517E6C88CC76B2B6B644EA34DAD57718CB3586C142359AFEED24A325A88CF3FC3EC
76CBD37B5205D5663A0A8D6F50EDC18CD8C92D0F208DED01FD724CAB4F79A02BD4836438EDA7
785DD29D24FB0AF677363D7ED6D18DD19C755BA1258A391EB51D4821DD03215A44A43D34A18B
09890202A92B80CB69F0F64C97BFC8F261FFDEE90F5AA119F2970A6E1C01D67BCA653ABF6DF2
A3ED7A30C9C64B16E18544385B95166ECD36B4FFFD73F7DDCD34DF1EC7BFCF2A19068E9F0A44
F8CA7D1D3889C7DCE67A8E4BCAAF416AE13F2965A3B72B4314DEBB291A36C58514DAF093FD3E
ABCA26A30915E602A88DDF2C2B6F8B7B29ED6A4DB2536C75139FD171F98C87B762B09723AC95
2EC0B9B9080CAFBDFCD466CC431BFE5CED7EE82C85BA825C2265FBFC545BC62AC6F63E9AA526
9AC38C2A4548A269001700F59A60F282ABF7C2B4F8AF872017BF39FFC09F1C64DBA53F05419E
0964007BC7607DFA507E7710981406D1DCA324B77783DAA1257217E7BE2A93DA6802C9A81642
7989510DAE63F60181060054512162D44B0862040EAA38BE794798CC1D1B46BDF6FDC2DAB97C
9E8915ECE0D0DBD8278F42EDCA0BB12115B5FFAD07F4342696AD250A8A439FADADFFE1C73BEB
42F5A6B0013A3E5225E0377ED332C0CCAA90F633BC744242A46C97A754CCC3D9D1F4D8CA32F3
F975C30720984166F31AAF5830DE17CE72056B7487CFE26D52EB9EFD97BE2308B405E63ECE32
19C68F8FF976FE916AA50FE1839CD8DEA0B509F6E0F9AE122BA78F01DB5D8F733703C883F4FD
AF01D339F402461EDEF7E38CABF062D3EA1C02CCFB468F384B2FD14E56B7AF49B57EF3197E2C
77D66DDE672037231B4858DA03A6CC5310ECA24348CFFFCAC71FB1E31AFC906935B78BB640B7
31506BA222B02CEEADBEE4419EE6CAB685114B3D79E16D820741157F047FD21D76F380712D19
ABE6427EF0E3C027FDD6EDC61169A8AA3EFC9B7F1C39F303659A1B5AA2A36BAAA83A191B4AC1
EF3EAE6F8F442749B7A20686BFF38F708C44E6AD8D17A84A22673A06056115D4F50C744D6898
002713353AB19A9B29D43687A380FEAF9B1D47701E02B831094BE2F03A8B16214EA0082F1A71
B6227D7BCF75373962D78BB3318B00FDCC5589FADB991E9379D81EE480B4315127358CC22A83
D132158C34E74D619615A54168A53F61679BAA37443087281D24EA0D59B6392A19B62453FE72
0315CDF472F427AE683D2CA79E5620557AE26C53D373DE697CE3C4311FCB57DD13A1E4CCC9BA
4C68D3B2630229277F4DFC5BEDDB54106A592964CCFE3CFC486788D366ECC29387C34564468C
8235FBD90350B15C937F6D9862F52D2F8F23A120FB6F6CDF1F25E3A71ED842276415262FFEFC
429E4AFA8A6C5D8AD8830396934061868B84F56E32535B59B95FA36FBCA7AE63E9BE9269ADFF
B22E9AF7A7B97959ED433326AE9DA6EB8F3CBEA4AEB0E2E37B4DF7A74681BB6CEC52A2A5EFB7
5701254E99AF4D485EC69C744D1572283B376E2DAABE876EC83C50C6AC24B4F6A0B5B9049079
DB528AE4A69C882CB79E80FD755D120FB0ADAB126B231EFE6A854217FF11AE8A15EBD2811C03
558165523396F4F0AB7295637E67C3FB90E3560B5B719962ED08A7961E752EE6F87E3189E986
49326ACC37765C5AD7EAC0890C67A2872B561D69BF819BC7C6F97EE04B2DB006220BB551B0F6
47E28435B93324CDDE178EF92516A7FDEBAD793751CCA2AB1E1A1DA1EDE78D7A59682F6E75FC
C43C89C6376A421988846183D3A2CFAD0165B939C55FAC8F3CA038E1D2300004B43D151EA7C7
4C3D93B0374A3ADC1785BA31DED004529C4FA6F423C12ABDACB909585E9F5A1461858A50D6BF
664E06ECDFEC6FF03664AC80DA9D25DD421585163FB72FEB409CBAD82E4366A3E5B2ED82043C
4093AA515AE224E374B41B0EAF121FCE6A79FC8FC5CB96655FC2F09977AED1F14F54A2438CB5
1EEB416941DF53996BCE6525131689A47BA5DA54241687B250DA4C3A4B3211A776BF6ADED536
C80C667910229CB4760AA504C1D577498BC79EDA582EBFDDAA91536F4F30476B7D74458D219D
AD67DE733FF9E4A10ACDA9BC0C4A3E25F95DE9C2EA8A856743FAE2F15DFBE1A67162316A8B86
0EA644C6E8B114BCFAE81E0EC1C9554F2330E0B143A00F11C1418D7C6202A1A1EF31AEF7B9FD
5C6B146B818589BB594AF95CDC6B7CEA9028E498A8EFC7CAFE350F9F486A15298AAEABBE6C4B
0805535C7FDEA0F5A96706893E82D8C59CA080FC20B415B10F65E648387C4F1667AB0EFF90E8
B686E81D992813950EF2F360FDAEC72B3A618A851B699BF97723928EC27053CDE81793ED67CA
7C5721FD0EBCAFD8F3B2CD647C0999E1695F0E4741B69BFFCEC94F388C662ADD9FA567182756
AB44742752E3D4B238F616003C33561C84C26286685C59E3987456C1EA7E767834B90D35EA5A
E31BE6A87DC6E0D11DC77F8E713331A693B48A67BC69025907FE02F14B3C8B3E8F4641C2846C
D92993A12962929D9A9FBC535949621E9F6E425394FE9298EC0E382893129A2B2FBAC1DB4F49
FC71A51B730B59F7264527829C0B54F321307C0EBD98BDFBE196369218418269ABEC83116100
D77604F2ABE89B5B9ADE2E38083D6E7C8A641F430A2403267F28575159740CAA9CAF74015A2F
4087FF3163797811CF5F5711E05B89F14144A792B2A446C4CE232F9D804FAF7F235131853260
253984A762F2254BA788E7777EE0734FBDF28EDCC9D15012B1EBD818060CEF46A8A6A443DB2D
F52F1F69CF4AA18D0DA9FE68B8D6EA47E1FA81AE6E33569AE47A887ED36EE30DDD2DE6A96C66
6633EC137728477C97FCCB8D38F3C3EA9B1FE8929FEF96CAA1D1DE98B4104F9CC8D1B95A5A34
8A402CA04239115D6D3745F3F9E1FC0637A107BB81503A83726D206DF81D69E28D79556506FA
3D153D61796E8EE8E52FDA8F0E2CE2BB881BC3306E9B223D9F90832BBA8AC82A46580E02A7E3
250690D3701F53E839DEC0C90E6CA622E27E059F631D277B70219A697E94EC4C894710F83B96
67FC43324D9E9D32688DE8FEABD631DC7FB85EB287AC025E56C4856CE29A9A075A61B3F16D52
E9FB6CEC7B68D492012C33EF6EBD51C6C65930A7DC3C1BE35E77D83D26E7E48F83E223FAB31B
99B4852F4FF0B6A9ADE25820AF8CC5869FDC38FE85C7BFDEAB2E92298C2961EC82B6566F51C5
FCEBE0A049D44743324D1F87320F32FACFC7F621FBBF8C928CF632FAC74FB9003DA35D0FFC3A
7FF280BC3EAF2293AB251F3A8F48FA0BFB59F474A41D4B2A5101B701BBE9A778F68246B594EE
8A9C5760E22C19CFA30DD3FFB32634E16380C0E29537F1DC212D2440FE040EC1D232DD3D7AB3
B6EFC7DB80F30D426E9BC28E48C9277E39B4A7A26F8664B129F1D3B11F0D5098FA59F07D23B7
406257EE2F60E9464BCB91E6707110E21A68B576679D67E54DE2FBAB0066D75B55A08AC7F42D
19630D88D6C192F8AC57509C34D6F122FEF45721CEB05AEE094F9EF1C3D996814DD81422E8F9
66B0CE26FDD3E4C441FE2C38F3ABC6DCFF121BFA1152A381AC865E7D698316376B95D34615D2
642C8C8DE79B70F02406585B2FA589F0BC5B6B9D81F50EC8DA414FA8AE9C4CBC6A4530EE0EAD
531CA27FADCEA01663BF7D3A7DCB9162FF478155E35CFCCF746D79F23AAEF385AD0C72F2C22B
DEECBDE1BDB72A0AD9265E299B693A7178438A1ECFDF229B241356C1CDE680EE325C724F0882
244492CAC7A576226965339CA41560358C1FB54A23DEE2CEF34828118ACBA9FB6AA64F21F783
B0DDB68B50E05E03FDFCE29B2CC8D00B949CE8D126785F8AEBA0B30D3D5F0D9EFAB56761C8B1
6BC9C2309787C4EFF217401B36316B34EDEB61826EFE3D659E9E47BC5DB6D9724F6F130015FB
875F825D93911CA065E143C76CFAD0107EC36F9795FF0B00DD4DFB4A47217D51CC22C29980ED
3030BAF1D385336E4CF006FD0C26101C6C7C7E787C698E86339426DCD804F457267626A5B310
8CFECF6C58E8DA464E0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000

cleartomark
{restore}if


%%EndFont
 TeXDict begin 40258437 52099154 1000 600 600
(surfacerenewaltheoryfig.dvi)
@start /Fa 206[71 49[{}1 66.4176 /CMSY8 rf /Fb 140[33
49[53 65[{}2 66.4176 /CMMI8 rf /Fc 135[55 13[40 38[70
67[{}3 99.6264 /CMMI12 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -128 3153 a @beginspecial
0 @llx 0 @lly 342 @urx 393 @ury 3420 @rwi @setspecial
%%BeginDocument: surfacerenewaltheory.pstex
%!PS-Adobe-3.0 EPSF-3.0
%%Title: surfacerenewaltheory.fig
%%Creator: fig2dev Version 3.2 Patchlevel 5d
%%CreationDate: Sat Apr  9 11:04:28 2016
%%BoundingBox: 0 0 342 393
%Magnification: 1.0000
%%EndComments
%%BeginProlog
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

/pageheader {
save
newpath 0 393 moveto 0 0 lineto 342 0 lineto 342 393 lineto closepath clip newpath
-115.3 406.1 translate
1 -1 scale
$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06299 0.06299 sc
} bind def
/pagefooter {
$F2psEnd
restore
} bind def
%%EndProlog
pageheader
%
% Fig objects follow
%
% 
% here starts figure with depth 60
% Polyline
0 slj
0 slc
7.500 slw
n 2880 225 m 7245 225 l 7245 6435 l 2880 6435 l
 cp gs col29 1.00 shd ef gr gs col0 s gr 
% here ends figure;
% 
% here starts figure with depth 55
% Polyline
0 slj
0 slc
7.500 slw
 [60] 0 sd
n 5085 4635 m 7110 4635 l 7110 6390 l 5085 6390 l
 cp gs col27 1.00 shd ef gr gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 4545 315 m 6570 315 l 6570 2070 l 4545 2070 l
 cp gs col27 1.00 shd ef gr gs col0 s gr  [] 0 sd
% Polyline
n 2880 2340 m 4905 2340 l 4905 4095 l 2880 4095 l
 cp gs col27 1.00 shd ef gr gs col0 s gr 
% here ends figure;
% 
% here starts figure with depth 50
% Arc
15.000 slw
0 slc
gs  clippath
3543 4323 m 3588 4179 l 3530 4161 l 3486 4306 l 3486 4306 l 3550 4200 l 3543 4323 l cp
eoclip
 [90] 0 sd
n 4524.8 4546.4 1035.0 65.7447 -159.5630 arc
gs col12 s gr
 gr
 [] 0 sd
% arrowhead
0 slj
7.500 slw
n 3543 4323 m 3550 4200 l 3486 4306 l 3543 4323 l  cp gs col12 1.00 shd ef gr  col12 s
% Arc
15.000 slw
gs  clippath
4317 1010 m 4457 1068 l 4480 1013 l 4340 955 l 4340 955 l 4440 1029 l 4317 1010 l cp
eoclip
 [60] 0 sd
n 4074.5 1777.5 834.3 141.6655 -62.8641 arc
gs col12 s gr
 gr
 [] 0 sd
% arrowhead
7.500 slw
n 4317 1010 m 4440 1029 l 4340 955 l 4317 1010 l  cp gs col12 1.00 shd ef gr  col12 s
% Polyline
15.000 slw
gs  clippath
2910 1127 m 2910 975 l 2850 975 l 2850 1127 l 2850 1127 l 2880 1007 l 2910 1127 l cp
eoclip
n 2880 4365 m
 2880 990 l gs col0 s gr gr

% arrowhead
7.500 slw
n 2910 1127 m 2880 1007 l 2850 1127 l  col0 s
% Polyline
15.000 slw
gs  clippath
6658 4395 m 6810 4395 l 6810 4335 l 6658 4335 l 6658 4335 l 6778 4365 l 6658 4395 l cp
eoclip
n 2880 4365 m
 6795 4365 l gs col0 s gr gr

% arrowhead
7.500 slw
n 6658 4395 m 6778 4365 l 6658 4335 l  col0 s
% Polyline
2 slj
15.000 slw
n 2880 2340 m 2880 2342 l 2881 2346 l 2881 2353 l 2882 2363 l 2883 2377 l
 2885 2394 l 2887 2414 l 2889 2437 l 2891 2461 l 2894 2487 l
 2896 2514 l 2899 2543 l 2902 2572 l 2905 2604 l 2909 2637 l
 2912 2672 l 2916 2710 l 2921 2749 l 2925 2790 l 2930 2834 l
 2934 2873 l 2938 2905 l 2941 2930 l 2942 2949 l 2943 2961 l
 2944 2969 l 2944 2974 l 2944 2978 l 2944 2981 l 2944 2985 l
 2945 2993 l 2946 3005 l 2948 3022 l 2952 3045 l 2957 3075 l
 2963 3111 l 2970 3150 l 2978 3189 l 2985 3225 l 2991 3256 l
 2996 3281 l 2999 3300 l 3001 3314 l 3003 3324 l 3003 3331 l
 3004 3338 l 3004 3344 l 3005 3351 l 3007 3360 l 3011 3374 l
 3016 3391 l 3024 3414 l 3033 3442 l 3046 3475 l 3060 3510 l
 3075 3544 l 3090 3574 l 3103 3600 l 3115 3621 l 3124 3636 l
 3131 3648 l 3137 3656 l 3142 3662 l 3146 3668 l 3151 3672 l
 3156 3678 l 3162 3685 l 3170 3694 l 3179 3706 l 3192 3721 l
 3206 3739 l 3223 3759 l 3240 3780 l 3265 3807 l 3284 3826 l
 3296 3838 l 3302 3843 l 3304 3845 l 3304 3844 l 3304 3842 l
 3306 3842 l 3313 3844 l 3326 3850 l 3347 3859 l 3375 3870 l
 3401 3879 l 3423 3886 l 3439 3892 l 3448 3895 l 3452 3898 l
 3452 3899 l 3450 3900 l 3449 3901 l 3451 3902 l 3460 3903 l
 3477 3905 l 3505 3908 l 3547 3912 l 3600 3915 l 3635 3917 l
 3671 3918 l 3707 3919 l 3742 3920 l 3777 3920 l 3811 3921 l
 3845 3921 l 3878 3921 l 3911 3921 l 3943 3920 l 3974 3920 l
 4005 3919 l 4035 3919 l 4063 3918 l 4089 3917 l 4112 3917 l
 4133 3916 l 4150 3916 l 4164 3916 l 4173 3915 l 4180 3915 l
 4183 3915 l
 4185 3915 l gs col1 s gr 
/Times-Roman ff 190.50 scf sf
1845 3150 m
gs 1 -1 sc (Gas) col0 sh gr
/Times-Roman ff 190.50 scf sf
5580 3420 m
gs 1 -1 sc (Bulk Liquid) col0 sh gr
/Times-Roman ff 190.50 scf sf
5085 1305 m
gs 1 -1 sc (Liquid Packet) col0 sh gr
% here ends figure;
% 
% here starts figure with depth 40
% Polyline
0 slj
0 slc
15.000 slw
gs  clippath
2878 3630 m 3030 3630 l 3030 3570 l 2878 3570 l 2878 3570 l 2998 3600 l 2878 3630 l cp
eoclip
n 2295 3600 m
 3015 3600 l gs col5 s gr gr

% arrowhead
7.500 slw
n 2878 3630 m 2998 3600 l 2878 3570 l  col5 s
% Polyline
15.000 slw
gs  clippath
2878 3720 m 3030 3720 l 3030 3660 l 2878 3660 l 2878 3660 l 2998 3690 l 2878 3720 l cp
eoclip
n 2295 3690 m
 3015 3690 l gs col5 s gr gr

% arrowhead
7.500 slw
n 2878 3720 m 2998 3690 l 2878 3660 l  col5 s
% Polyline
15.000 slw
gs  clippath
2878 3540 m 3030 3540 l 3030 3480 l 2878 3480 l 2878 3480 l 2998 3510 l 2878 3540 l cp
eoclip
n 2295 3510 m
 3015 3510 l gs col5 s gr gr

% arrowhead
7.500 slw
n 2878 3540 m 2998 3510 l 2878 3480 l  col5 s
% here ends figure;
pagefooter
showpage
%%Trailer
%EOF

%%EndDocument
 @endspecial 0 0 0 TeXcolorrgb 258 950 a Fc(C)335 914
y Fb(s)328 975 y(A)p 0 TeXcolorgray 0 0 0 TeXcolorrgb
306 241 a Fc(C)376 256 y Fb(A)p 0 TeXcolorgray 0 0 0
TeXcolorrgb 2361 2179 a Fc(x)p 0 TeXcolorgray 0 0 0 TeXcolorrgb
-120 1682 a(j)-80 1697 y Fb(A)p 0 TeXcolorgray 0 0 0
TeXcolorrgb 1109 1848 a Fc(C)1186 1812 y Fa(1)1179 1873
y Fb(A)p 0 TeXcolorgray Black 0 TeXcolorgray Black eop
end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
